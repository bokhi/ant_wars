[(Mul (NbFood (7,0,3,1)) TimeLeft,Mul TimeLeft (Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) Point) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) Point),NbFood (7,0,3,1)),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (NbVisited (10,9,2,2)) Point,Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller (NbFood (2,3,2,2)) (NbFood (0,5,2,3))) (Const 2) (NbFood (1,9,2,3))))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (If (IsSmaller (NbVisited (0,8,1,1)) (NbFood (6,7,2,0))) (NbEmpty (2,5,1,1)) (FoodHope (5,8,1,2))),Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (If (And (IsEqual TimeLeft (If (Not (IsFood (3,1,1,2))) PointLeft (Const 3))) (Not (IsEqual (NbFood (1,6,0,3)) (FoodHope (7,4,3,3))))) Point PointLeft)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Const 1),Add PointLeft (Add (If (IsEnemy (8,3,2,0)) (If (Not (IsEnemy (8,3,2,0))) (Const 2) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) PointLeft))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Mul TimeLeft (Const 1)))))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (NbFood (7,10,3,2))),Add TimeLeft (Const 1)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (FoodHope (8,3,1,3)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Add (Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul TimeLeft (NbEmpty (0,0,1,1)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))) (Mul Point (NbFood (8,3,0,1))),Add PointLeft PointLeft),(Add (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Add TimeLeft (NbFood (7,10,3,2))))) Point,Mul TimeLeft (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)))),(Add (If (IsEnemy (2,8,1,3)) TimeLeft PointLeft) (NbFood (10,0,0,3)),Add PointLeft (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (NbVisited (10,9,2,2)))) PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft PointLeft),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 0) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) PointLeft),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul (Mul PointLeft PointLeft) PointLeft),Mul (NbFood (7,0,3,1)) (NbVisited (10,9,2,2))),(Const 0,Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) PointLeft (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (Add (FoodHope (8,3,1,3)) PointLeft) TimeLeft,Mul (NbFood (7,0,3,1)) (Mul PointLeft (NbFood (7,0,3,1)))),(Add PointLeft (Add (If (IsSmaller (Sub (NbFood (5,10,0,2)) (Mul (NbFood (1,0,1,1)) (NbVisited (4,3,1,2)))) (Mul TimeLeft (Const 2))) (If (IsSmaller (Sub (NbFood (5,10,0,2)) (Mul (NbFood (1,0,1,1)) (NbVisited (4,3,1,2)))) (Mul TimeLeft (Const 2))) (NbEmpty (0,0,1,1)) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Add PointLeft (If (IsSmaller (FoodHope (7,2,0,1)) TimeLeft) (Add PointLeft (Mul Point (FoodHope (6,1,2,2)))) TimeLeft)),(Mul (Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul TimeLeft (NbEmpty (0,0,1,1)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))) (Mul (NbFood (7,0,3,1)) (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2))) (NbFood (7,0,3,1)))),Add PointLeft (NbFood (7,0,3,1))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) TimeLeft,Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3)))),(NbFood (7,0,3,1),Mul (Mul (NbVisited (0,6,2,0)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3))),(Mul (NbFood (7,0,3,1)) TimeLeft,Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbVisited (7,5,0,1))) (NbVisited (3,10,3,3)))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) PointLeft),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,0,3,1)) PointLeft))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft PointLeft)),Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft))),(Mul (NbFood (7,0,3,1)) TimeLeft,Mul (Mul PointLeft (Add PointLeft PointLeft)) (Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) PointLeft))),(Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft)),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) PointLeft)),(NbEmpty (6,9,1,3),Sub (Add TimeLeft (Const 2)) (Const 1)),(Add TimeLeft (NbFood (7,0,3,1)),Mul (Mul (Const 2) (Mul Point TimeLeft)) (NbVisited (3,10,3,3))),(Add PointLeft (NbFood (7,0,3,1)),Mul (Add (If (IsEnemy (8,3,2,0)) (If (Not (IsEnemy (8,3,2,0))) (Const 2) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) PointLeft))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))) TimeLeft),(NbVisited (3,10,3,3),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbVisited (7,5,0,1))) (Add TimeLeft (NbFood (7,10,3,2))))),(Mul PointLeft (Add (NbFood (7,0,3,1)) PointLeft),Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3))))),(Add (If (IsFood (5,6,2,0)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)),If (IsEnemy (9,8,2,3)) (If (IsEnemy (9,8,2,3)) (Const 2) (Mul (Const 2) (If (Not (IsEnemy (9,8,2,3))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) TimeLeft)),Add (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (NbFood (7,10,3,2)))) PointLeft) PointLeft),(Add TimeLeft TimeLeft,Add TimeLeft TimeLeft),(Mul PointLeft (Mul PointLeft (Add (FoodHope (8,3,1,3)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (Mul (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (7,0,3,1))))),(Add PointLeft (NbFood (7,0,3,1)),Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul TimeLeft (NbEmpty (0,0,1,1)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Sub (NbVisited (6,4,3,2)) TimeLeft)),Const 5),(If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Const 1) (NbEmpty (2,3,2,3)),Add (If (IsEqual Point (NbFood (2,6,0,0))) (If (IsEqual Point (NbFood (2,6,0,0))) (Mul PointLeft (Add (NbFood (7,0,3,1)) PointLeft)) (Const 10)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(If (Not (And (IsFood (4,6,1,1)) (IsFood (3,10,0,0)))) (Add (NbFood (7,0,3,1)) PointLeft) (Add (FoodHope (3,7,1,1)) (Add PointLeft (Const 2))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1))),(Mul (Add TimeLeft (Add (If (IsFood (1,8,1,3)) (If (IsFood (1,8,1,3)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (1,8,1,3)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Const 1))),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point),If (Not (And (IsFood (10,8,3,2)) (IsFood (2,9,0,3)))) (Const 1) (NbEmpty (2,3,2,3))),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add (NbEmpty (0,0,1,1)) PointLeft))),Mul PointLeft (Add PointLeft Point)),(Mul (NbFood (7,0,3,1)) (Mul (Const 4) (Add PointLeft PointLeft)),Add (NbEmpty (0,0,1,1)) PointLeft),(Mul (NbFood (7,0,3,1)) TimeLeft,Add PointLeft (Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul (Mul PointLeft (Add (NbEmpty (9,3,1,0)) PointLeft)) (NbEmpty (0,0,1,1)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Point,Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul (NbEmpty (2,8,1,1)) (NbFood (0,5,2,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))),Mul (NbFood (10,0,0,3)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) PointLeft,NbFood (2,3,2,2)),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))))))) (Const 4)) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),Mul (NbFood (10,0,0,3)) (FoodHope (3,1,1,3))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) PointLeft),Add PointLeft (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)))),(Add PointLeft (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (NbEmpty (2,3,2,3)) PointLeft)),(If (IsEnemy (2,8,1,3)) (Mul (NbFood (7,0,3,1)) TimeLeft) (NbFood (3,0,1,0)),Add PointLeft (Add (Sub PointLeft (Mul Point (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))))) (NbFood (8,0,3,0)))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (If (Not (And (IsFood (9,7,2,3)) (IsFood (3,10,0,0)))) (Mul PointLeft TimeLeft) (NbEmpty (2,3,2,3)))),Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) PointLeft) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point))),(NbFood (9,1,3,1),Mul (NbFood (7,0,3,1)) (Mul PointLeft Point)),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) (FoodHope (8,2,3,1))) (NbFood (2,3,2,2)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (9,3,1,0)) PointLeft))),(If (Not (And (IsEnemy (7,6,2,0)) (IsEnemy (7,8,3,2)))) (NbFood (3,2,2,3)) (NbEmpty (2,8,1,1)),PointLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Mul (Add TimeLeft (Add (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (10,0,0,3)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3)))),(Add PointLeft (Mul Point (NbFood (8,3,0,1))),Mul (NbFood (7,0,3,1)) PointLeft),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (NbFood (7,0,3,1)) (NbVisited (3,10,3,3))),Mul (NbFood (7,0,3,1)) (Add (Mul (NbFood (7,0,3,1)) (NbVisited (7,5,0,1))) (NbFood (7,10,3,2)))),(Add (Mul (NbFood (7,0,3,1)) (NbEmpty (0,0,1,1))) (Add (If (IsEnemy (2,8,1,3)) (NbVisited (9,5,3,3)) PointLeft) (NbFood (10,0,0,3))),Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (Mul (NbFood (7,0,3,1)) TimeLeft) PointLeft)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul PointLeft (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1))))),Mul (NbFood (7,0,3,1)) (Mul (NbFood (8,10,0,3)) (Const 5))),(If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Add PointLeft PointLeft)))) (NbFood (3,0,1,0)),Mul (Const 3) (NbFood (7,0,3,1))),(Mul (Add TimeLeft (NbVisited (8,7,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,10,3,2)) TimeLeft)) PointLeft),Mul (Add TimeLeft (NbEmpty (0,0,1,1))) (Mul (Sub (Const 10) (NbEmpty (2,3,2,3))) PointLeft)),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (NbFood (10,0,0,3)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) PointLeft))),(Add (Add (Add TimeLeft PointLeft) (NbFood (7,10,3,2))) TimeLeft,Mul PointLeft (NbFood (8,0,3,0))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))),Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Sub Point (NbVisited (8,2,3,1))),Mul (NbFood (7,0,3,1)) (NbEmpty (5,8,2,3))),(TimeLeft,Add (Add (NbFood (7,10,3,2)) (Add (Add (NbEmpty (2,8,1,1)) (NbFood (7,10,3,2))) TimeLeft)) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (6,10,3,1)) (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Add (NbVisited (3,5,3,0)) (Mul Point (NbFood (8,3,0,1)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (FoodHope (8,8,0,1))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbFood (10,6,2,2)) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (Const 2) (NbFood (1,9,2,3)))),Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (If (And (IsEqual TimeLeft (If (Not (IsFood (3,1,1,2))) PointLeft (Add PointLeft (FoodHope (6,0,3,1))))) (Not (IsEqual (NbFood (1,6,0,3)) (FoodHope (7,4,3,3))))) Point PointLeft)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(NbEmpty (9,10,2,1),TimeLeft),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))),PointLeft),(Mul (NbFood (7,0,3,1)) PointLeft,If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) (NbEmpty (8,8,1,1))) (NbEmpty (2,3,2,3))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) PointLeft),Mul (Sub (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Const 2)) PointLeft)) (FoodHope (4,5,1,1))) TimeLeft),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Mul (Const 1) (FoodHope (0,3,1,3))) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1))))))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),If (IsEnemy (2,8,1,3)) (Mul TimeLeft (FoodHope (8,3,1,3))) (NbFood (3,0,1,0))),(Mul (NbFood (7,0,3,1)) (NbVisited (3,10,3,3)),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add PointLeft (Add (If (IsEnemy (7,5,0,1)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,9,2,2)) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Const 2) (NbFood (2,3,2,2)),Mul (NbFood (7,0,3,1)) (Add (Mul (NbFood (7,0,3,1)) (NbVisited (7,5,0,1))) (NbFood (7,10,3,2)))),(TimeLeft,Mul (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) Point) (Const 2)),(Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbEmpty (0,0,1,1))) (NbFood (10,0,0,3))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) Point (NbFood (2,3,2,2))) (NbFood (7,0,3,1)))),NbFood (2,6,0,2)),(Mul (NbFood (10,0,0,3)) (FoodHope (4,3,1,2)),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbVisited (1,0,0,0))) PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Const 1))),(Add (If (IsEqual Point (NbFood (2,6,0,0))) (FoodHope (9,3,1,1)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),NbFood (7,1,2,0)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))))) (Const 2) (NbFood (7,0,3,1)))),Mul (NbFood (7,0,3,1)) PointLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (FoodHope (8,3,1,3)) PointLeft)),TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (FoodHope (8,3,1,3))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (Const 1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) (If (IsEqual PointLeft (NbVisited (9,5,1,2))) (NbFood (10,9,1,2)) (If (IsEnemy (0,0,3,3)) PointLeft TimeLeft))) PointLeft)),Add TimeLeft (NbFood (5,8,3,3))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) (Const 1)) (NbEmpty (2,3,2,3)),Mul (NbFood (7,0,3,1)) (Mul PointLeft PointLeft)),(Mul (Add (Add (NbFood (2,1,2,3)) TimeLeft) TimeLeft) (Mul (Mul (NbFood (7,0,3,1)) (Add TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))) (NbVisited (3,10,3,3))),If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Const 1) (NbEmpty (2,3,2,3))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (NbVisited (7,7,0,3))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul PointLeft (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 0) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) Point) PointLeft),Add PointLeft (Const 2)),(Add (Mul (NbFood (7,0,3,1)) (NbEmpty (0,0,1,1))) (Add (If (IsEnemy (2,8,1,3)) (NbVisited (9,5,3,3)) (Mul (NbFood (7,10,1,3)) (Const 2))) (NbFood (10,0,0,3))),PointLeft),(Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEqual Point (NbFood (2,6,0,0))) (If (IsEqual Point (NbFood (2,6,0,0))) (NbVisited (10,5,1,1)) (Const 10)) (NbFood (3,0,1,0))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),If (IsEnemy (5,5,3,3)) (Const 2) (Mul (Mul (NbFood (7,0,3,1)) TimeLeft) PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul (Const 1) (Add (NbEmpty (9,3,1,0)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul PointLeft PointLeft)),(Const 1,If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (NbEmpty (2,8,1,1)) (NbEmpty (2,3,2,3))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Mul (NbFood (7,0,3,1)) (Add TimeLeft TimeLeft)),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (If (Not (And (Or (IsEnemy (2,10,3,0)) (IsEnemy (7,6,3,2))) (IsFood (3,8,1,3)))) (NbFood (5,2,0,1)) (Add TimeLeft Point)),FoodHope (0,6,1,2)),(Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1)),Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul Point (NbFood (8,3,0,1)),Add PointLeft PointLeft),(Point,Mul TimeLeft (Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft PointLeft)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul Point (Add PointLeft PointLeft)),TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (FoodHope (8,3,1,3))) (Const 2) (NbFood (1,9,2,3)))),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (0,5,2,3)) PointLeft))),(Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (If (And (IsEqual TimeLeft (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul TimeLeft (NbEmpty (0,0,1,1)))) (NbFood (3,0,1,0)))) (Not (IsEqual (NbFood (1,6,0,3)) (FoodHope (7,4,3,3))))) Point PointLeft)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),Add PointLeft (Add (If (Not (IsFood (3,1,1,2))) PointLeft (Add PointLeft (FoodHope (6,0,3,1)))) (NbFood (7,0,3,1)))),(TimeLeft,Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3)))) (Const 1))))),(Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (NbFood (10,0,0,3))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)),Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3)))),(Mul (NbFood (7,0,3,1)) (NbFood (10,0,0,3)),Add PointLeft (Add (If (IsFood (3,0,3,1)) (If (Not (And (IsFood (3,0,3,1)) (IsEnemy (8,3,2,0)))) (Const 0) (Mul (NbFood (3,8,0,1)) (Mul PointLeft PointLeft))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(NbFood (10,5,0,1),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (NbFood (8,1,0,2)) (NbEmpty (10,8,0,1)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (NbFood (7,10,3,2)))) PointLeft))),Mul (NbFood (10,0,0,3)) (FoodHope (8,3,1,3))),(Add TimeLeft TimeLeft,Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (Const 1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul TimeLeft (Add (If (IsFood (8,2,2,1)) TimeLeft (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Mul (NbFood (7,0,3,1)) (Mul (Add (If (IsFood (8,2,2,1)) (Const 2) Point) (NbFood (7,10,3,2))) (Add (NbEmpty (0,0,1,1)) PointLeft))),(Add PointLeft PointLeft,Point),(Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add (NbEmpty (0,0,1,1)) PointLeft)) (FoodHope (8,3,1,3))),Mul (NbFood (7,0,3,1)) TimeLeft),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft PointLeft)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Add (Const 1) PointLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Add PointLeft (Mul Point (NbFood (8,3,0,1)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1))))),If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (NbFood (7,0,3,1)))))) (NbFood (3,0,1,0))),(Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (Sub (Mul TimeLeft PointLeft) (FoodHope (0,3,1,3))) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point)),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (NbEmpty (2,3,2,3)) PointLeft)),(Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (NbVisited (9,1,1,3))) Point)) (Sub (Mul (NbFood (7,0,3,1)) TimeLeft) (Sub (Add (FoodHope (0,2,0,2)) (NbFood (8,8,0,0))) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (8,4,0,3)) (FoodHope (9,6,3,2)))))) (Const 4)),Add PointLeft (Add (Sub PointLeft (Mul Point TimeLeft)) (NbFood (8,0,3,0)))),(Mul (Mul (NbEmpty (0,0,1,1)) TimeLeft) (Mul PointLeft PointLeft),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))) PointLeft)),(Add PointLeft (Sub (NbVisited (2,7,3,0)) (NbEmpty (2,8,0,2))),Mul (NbFood (7,0,3,1)) (Mul (NbFood (10,0,0,3)) (Add Point PointLeft))),(Mul (Mul (NbFood (7,0,3,1)) PointLeft) (Mul PointLeft PointLeft),Add TimeLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1))))),(NbFood (10,0,0,3),Const 5),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),Mul (Mul (NbFood (7,0,3,1)) TimeLeft) (Mul PointLeft PointLeft)),(Const 5,Add PointLeft (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) PointLeft)),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (If (Not (And (IsFood (9,7,2,3)) (IsFood (3,10,0,0)))) (Mul PointLeft TimeLeft) (NbEmpty (2,3,2,3)))),Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) PointLeft) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Const 1))),(Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (Sub (Mul TimeLeft PointLeft) (FoodHope (0,3,1,3))) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul (NbFood (7,0,3,1)) (Add TimeLeft TimeLeft)))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point)),Mul Point PointLeft),(Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (NbVisited (9,1,1,3))) Point)) (Sub TimeLeft (Sub (Add (FoodHope (0,2,0,2)) (NbFood (8,8,0,0))) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (8,4,0,3)) (FoodHope (9,6,3,2)))))) (Const 4)),Add TimeLeft Point),(Const 2,Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbEmpty (3,0,2,2))) (Mul (NbFood (7,0,3,1)) TimeLeft))),(Add (If (Not (And (IsEnemy (0,2,0,3)) (IsEnemy (0,1,3,2)))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (Mul TimeLeft (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3))))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (Mul Point (NbFood (8,3,0,1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul (NbVisited (10,9,2,2)) PointLeft),Mul (Add (If (IsEnemy (7,5,0,1)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,9,2,2)) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))) TimeLeft),(PointLeft,Add PointLeft (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Mul (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3)))) (NbEmpty (1,8,2,3))),Mul (Add (If (IsEnemy (7,5,0,1)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,9,2,2)) (NbFood (7,0,3,1))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))) TimeLeft),(Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (7,0,3,1))) (NbFood (10,0,0,3)),Add PointLeft (NbFood (3,0,1,0))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) Point (NbFood (2,3,2,2))) (NbFood (7,0,3,1))))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (If (Not (And (Or (IsEnemy (2,10,3,0)) (IsEnemy (7,6,3,2))) (IsFood (3,8,1,3)))) (NbFood (5,2,0,1)) (FoodHope (0,6,1,2))),NbFood (2,6,0,2)),(NbFood (7,0,3,1),Mul (Add (Mul (NbFood (7,0,3,1)) (NbEmpty (0,0,1,1))) (Add (If (IsEnemy (2,8,1,3)) (NbVisited (9,5,3,3)) PointLeft) (NbFood (10,0,0,3)))) TimeLeft),(Add PointLeft (Add (If (IsFood (3,3,0,1)) (If (IsFood (3,3,0,1)) (Const 2) (Mul (Mul (NbFood (7,0,3,1)) TimeLeft) PointLeft)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),Add (If (IsEnemy (5,5,3,3)) (If (Not (And (IsEnemy (5,5,3,3)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (Mul TimeLeft (Mul Point (NbFood (8,3,0,1))))),(Mul (Mul (NbFood (10,0,0,3)) (Const 1)) Point,Sub (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Const 2)) (Const 4))) (FoodHope (4,5,1,1))),(If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Mul (Const 1) (FoodHope (0,3,1,3))) Point) (NbFood (3,0,1,0)),Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (NbVisited (9,1,1,3))) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1))))) (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point))),(Add PointLeft (Add (Sub (NbFood (8,0,3,0)) (NbEmpty (2,3,2,3))) (NbFood (8,0,3,0))),Add (NbFood (7,10,3,2)) PointLeft),(Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Const 1)) (NbFood (10,0,0,3)),Add PointLeft (Add (If (IsEnemy (8,3,2,0)) (If (Not (IsEnemy (8,3,2,0))) (Const 2) (Mul TimeLeft (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) PointLeft))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbFood (3,0,1,0)))))),(Add (Mul (NbEmpty (0,0,1,1)) TimeLeft) PointLeft,Mul (FoodHope (0,1,3,0)) (Mul PointLeft (Add (NbFood (7,0,3,1)) PointLeft))),(Add (NbFood (7,10,3,2)) (NbFood (7,10,3,2)),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft TimeLeft) PointLeft) (NbFood (2,3,2,2))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) Point (NbFood (2,3,2,2))) (NbFood (7,0,3,1)))),Mul (Sub (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Const 2)) PointLeft)) (FoodHope (4,5,1,1))) TimeLeft),(Const 1,If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Mul (NbFood (2,6,0,2)) (FoodHope (0,3,1,3))) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))),(Mul (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (FoodHope (8,3,1,3)))) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft)),NbFood (7,0,3,1)),(If (IsEnemy (10,8,1,1)) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2)),Add (NbVisited (10,10,2,2)) (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (Const 1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) PointLeft)) PointLeft),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (NbEmpty (9,3,1,0)) PointLeft))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbEmpty (2,8,1,1))),NbFood (7,0,3,1)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add Point (NbFood (3,0,1,0)))),Add PointLeft (Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul TimeLeft (NbEmpty (9,2,1,1)))) PointLeft) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3))))),Add (NbEmpty (0,0,1,1)) PointLeft),(Mul (NbFood (10,0,0,3)) (NbFood (7,0,3,1)),Add (Add (NbVisited (4,5,0,2)) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft)) (Add TimeLeft (NbFood (7,10,3,2)))),(Add (NbFood (7,0,3,1)) PointLeft,If (Not (And (IsFood (4,6,1,1)) (IsFood (3,10,0,0)))) (Const 1) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbFood (7,10,3,2))) (Add PointLeft (Const 2)))),(Mul (Add TimeLeft (Add (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))) TimeLeft,Mul (NbFood (7,0,3,1)) (Mul (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3))) (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1))))),(Mul (NbFood (7,0,3,1)) (Mul Point (NbFood (0,5,2,3))),Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) PointLeft),(Mul (NbFood (7,0,3,1)) (Mul (Add Point (NbFood (7,10,3,2))) (Add (NbEmpty (0,0,1,1)) PointLeft)),Add (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) TimeLeft),(Add PointLeft (If (IsEnemy (2,8,1,3)) (NbVisited (10,9,2,2)) PointLeft),Add PointLeft (NbFood (10,0,0,3))),(Add (Mul (NbFood (7,0,3,1)) (NbEmpty (0,0,1,1))) (Add (FoodHope (5,8,2,0)) (NbFood (10,0,0,3))),Add TimeLeft (Add (Const 2) PointLeft)),(Add PointLeft (Add (Const 1) (NbFood (10,0,0,3))),Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (2,5,1,2)) (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (Mul (NbFood (7,0,3,1)) TimeLeft) PointLeft)) (NbFood (3,0,1,0))))),(NbFood (7,0,3,1),Mul (Mul (Const 2) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) PointLeft),Add PointLeft (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)))),(If (Not (And (IsFood (3,3,0,1)) (IsFood (1,7,1,2)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3))),If (Not (And (IsEnemy (3,3,1,0)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (Mul (NbFood (7,0,3,1)) TimeLeft)),(Mul (Add TimeLeft (If (IsEnemy (2,8,1,3)) (NbEmpty (2,3,2,3)) (NbFood (3,0,1,0)))) (Mul (Mul PointLeft (NbVisited (7,5,0,1))) (NbVisited (3,10,3,3))),Add PointLeft (Add (NbFood (7,10,3,2)) (NbFood (2,6,3,0)))),(Mul (NbFood (7,0,3,1)) (Mul (NbVisited (0,0,1,1)) (Add TimeLeft TimeLeft)),Add (NbVisited (2,8,1,3)) TimeLeft),(NbFood (7,7,0,3),Add (NbEmpty (10,3,2,0)) (Add TimeLeft Point)),(Add (Mul (NbFood (7,0,3,1)) (NbEmpty (2,3,2,3))) PointLeft,Add (Add (Sub PointLeft TimeLeft) (NbFood (7,10,3,2))) (Add TimeLeft (NbFood (7,10,3,2)))),(Point,Mul (NbEmpty (1,3,3,3)) (Mul (Mul Point (Add TimeLeft (NbFood (7,10,3,2)))) PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (9,3,1,0)) PointLeft))) (Add (FoodHope (8,3,1,3)) PointLeft)),PointLeft),(Add PointLeft (Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul TimeLeft (NbEmpty (0,0,1,1)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),NbEmpty (2,8,1,1)),(TimeLeft,Add (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) (FoodHope (9,4,2,2)))))) PointLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller (Const 1) (Add TimeLeft (NbFood (7,10,3,2)))) (Const 2) (NbFood (7,0,3,1)))),PointLeft),(NbFood (7,0,3,1),Mul (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))))) (Mul TimeLeft (FoodHope (8,3,1,3)))),(TimeLeft,Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (Const 1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add TimeLeft (NbFood (7,10,3,2))) Point,Mul (NbFood (7,0,3,1)) (Mul (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (Add (NbEmpty (0,0,1,1)) PointLeft))),(Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbEmpty (0,0,1,1))) (NbFood (10,0,0,3))),Add PointLeft PointLeft),(Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft)))),Add (NbEmpty (0,0,1,1)) PointLeft),(Add (Add (NbEmpty (0,0,1,1)) PointLeft) (NbFood (7,0,3,1)),Add PointLeft PointLeft),(Mul (NbFood (7,0,3,1)) (Mul (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))) (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) Point))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) TimeLeft)) (NbFood (3,0,1,0))) PointLeft)),(Add PointLeft (Mul Point (NbFood (8,3,0,1))),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) PointLeft (NbFood (2,3,2,2))),(Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))) (Mul PointLeft PointLeft),Add TimeLeft (NbFood (7,10,3,2))),(If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbVisited (7,7,0,3)) (If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Const 1) (NbEmpty (2,3,2,3)))) (FoodHope (4,6,3,1)),PointLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3))))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1))))),FoodHope (8,3,1,3)),(If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (NbFood (7,0,3,1)))))) (NbFood (3,0,1,0)),Mul (NbFood (7,0,3,1)) (Mul (Mul PointLeft (Const 5)) (Mul TimeLeft (NbVisited (5,0,0,0))))),(Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Mul TimeLeft (FoodHope (8,3,1,3))) (Const 10)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 2)) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))))),(If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (FoodHope (8,2,3,1)),If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (NbFood (7,0,3,1)))))) (NbFood (3,0,1,0))),(Add PointLeft (Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul TimeLeft (NbEmpty (0,0,1,1)))) (FoodHope (5,2,3,1))) (NbFood (7,0,3,1))),Mul TimeLeft (Mul PointLeft PointLeft)),(Mul (Add (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 0) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3))),Add PointLeft (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2)))),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft))),Add (NbEmpty (1,8,2,3)) Point),(If (Not (IsEnemy (2,8,1,3))) (Const 1) (NbEmpty (2,3,2,3)),Add (If (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0))) (NbVisited (10,9,2,2)) PointLeft) (NbFood (10,0,0,3))),(Mul PointLeft TimeLeft,Mul (Const 4) (NbFood (7,0,3,1))),(Add (If (Not (And (IsEnemy (0,2,0,3)) (IsEnemy (0,1,3,2)))) TimeLeft (NbFood (3,0,1,0))) (Mul TimeLeft (Mul Point (NbFood (8,3,0,1)))),Mul (NbFood (7,0,3,1)) (Mul (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10)) (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1))))),(Mul (NbFood (7,0,3,1)) Point,Add (If (IsEqual Point (NbFood (2,6,0,0))) (If (IsEqual Point PointLeft) (Mul PointLeft (Add (NbFood (7,0,3,1)) PointLeft)) (Const 10)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1)))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (FoodHope (8,3,1,3)) PointLeft))),(Mul (NbFood (7,0,3,1)) (If (Or (IsFood (10,0,1,1)) (IsEnemy (8,1,3,1))) (Mul TimeLeft (NbEmpty (4,5,2,1))) (Mul TimeLeft (FoodHope (0,6,1,3)))),Add PointLeft (Add (If (IsSmaller (Add Point (Sub Point (NbEmpty (9,9,1,0)))) Point) (If (IsSmaller (Add Point (Sub Point (NbEmpty (9,9,1,0)))) Point) (Const 0) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (Const 5) (Mul PointLeft (Add (FoodHope (8,3,1,3)) PointLeft)),Add PointLeft (NbEmpty (6,5,3,0))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Const 1))))),(If (Not (IsSmaller (Mul (NbEmpty (5,10,0,3)) (NbEmpty (7,7,1,0))) Point)) (Const 1) (NbFood (10,0,0,3)),NbEmpty (2,10,3,0)),(Mul (NbFood (7,0,3,1)) (Mul (Add (NbEmpty (9,3,1,0)) PointLeft) (Add (NbEmpty (0,0,1,1)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add TimeLeft (NbFood (7,10,3,2))))),(Add PointLeft (NbEmpty (2,8,1,1)),NbFood (10,5,2,2)),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) PointLeft),Add (If (IsEqual TimeLeft (NbFood (2,6,0,0))) PointLeft (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Add PointLeft (NbEmpty (7,9,0,0)),Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1)))),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) PointLeft)),(Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)),Add PointLeft (Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3))))),(Add PointLeft (Sub (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (10,0,0,3)) (FoodHope (0,3,1,3)))) PointLeft)) (FoodHope (4,5,1,1))),Mul (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))) TimeLeft),(NbFood (3,9,3,1),Add (Add (NbFood (10,0,0,3)) PointLeft) (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (3,8,0,1)) (Const 1))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1)))),Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft PointLeft)),If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) (NbFood (7,10,1,2))) (NbEmpty (2,3,2,3))),(Mul (NbFood (7,0,3,1)) (Mul (FoodHope (3,0,1,0)) Point),If (Or (IsEnemy (2,9,1,3)) (Not (IsFood (10,9,0,0)))) (If (Or (IsEnemy (2,9,1,3)) (Not (IsFood (10,9,0,0)))) (Const 2) (Mul (Const 2) (If (Not (Or (IsEnemy (2,9,1,3)) (Not (IsFood (10,9,0,0))))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1)))),Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3)))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),NbFood (7,0,3,1)),(Mul TimeLeft (FoodHope (1,8,2,1)),Mul (Add (NbFood (10,0,0,3)) (NbFood (7,10,3,2))) (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) (NbFood (9,0,1,0))) Point)),(PointLeft,Mul (NbFood (7,0,3,1)) (Mul (NbFood (9,1,3,1)) PointLeft)),(Mul PointLeft (Mul PointLeft Point),PointLeft),(NbVisited (10,9,2,2),Mul (Add (If (IsEnemy (7,5,0,1)) (If (IsEnemy (5,5,3,3)) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3)))) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))) TimeLeft),(Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) PointLeft (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)),Add (NbVisited (10,7,0,0)) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Add TimeLeft TimeLeft),Add TimeLeft Point),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft)),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2))),(Add (Add TimeLeft (NbFood (7,10,3,2))) (NbFood (7,0,3,1)),Mul (NbFood (7,0,3,1)) (Mul (Add (NbVisited (4,5,0,2)) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft)) (Add (NbEmpty (0,0,1,1)) PointLeft))),(If (Not (And (IsFood (4,6,1,1)) (IsFood (3,10,0,0)))) (Add (NbFood (7,0,3,1)) PointLeft) PointLeft,Add (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbFood (7,10,3,2))) (Add PointLeft (Const 2))) PointLeft),(Add PointLeft (Add (If (IsEnemy (8,3,2,0)) (If (Not (IsEnemy (8,3,2,0))) (Const 2) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) PointLeft))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),Add TimeLeft (NbFood (7,10,3,2))),(Mul (NbFood (7,0,3,1)) TimeLeft,Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul Point (NbEmpty (1,8,2,3))),If (Not (IsFood (10,8,1,0))) (Const 1) (NbEmpty (2,3,2,3))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Mul PointLeft PointLeft) (NbEmpty (2,3,2,3)))),NbEmpty (7,2,0,3)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (9,3,1,0)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul PointLeft PointLeft)),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbEmpty (2,8,1,1)) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),Const 0),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) PointLeft),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),(Point,If (Not (And (IsFood (10,8,3,2)) (IsFood (0,0,0,0)))) (Const 1) (NbEmpty (2,3,2,3))),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (NbFood (7,10,3,2))),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (1,8,2,3)) PointLeft))),(If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbEmpty (2,3,2,3)),Add (Const 1) (NbFood (7,0,3,1))),(Mul TimeLeft (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (10,0,0,3)) (Const 1))))),(NbFood (10,0,0,3),Mul PointLeft (FoodHope (3,1,2,1))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbFood (10,8,1,3))),Add TimeLeft (NbFood (10,0,0,3))),(Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2))),Mul (NbFood (7,0,3,1)) (Mul (NbFood (1,8,0,3)) (Const 1))),(Add (Add PointLeft (Add (If (IsEnemy (7,5,0,1)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))) PointLeft,Mul (NbFood (7,0,3,1)) TimeLeft),(If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) PointLeft,Add TimeLeft (NbFood (7,10,3,2))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (IsFood (7,8,1,0)) (Mul (NbVisited (9,1,0,2)) Point) (NbEmpty (9,4,0,2))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1))))),FoodHope (0,2,3,2)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft)),Add (Add (NbEmpty (0,0,1,1)) PointLeft) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) TimeLeft,Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbVisited (7,5,0,1))) (NbVisited (3,10,3,3)))),(PointLeft,TimeLeft),(NbEmpty (5,7,2,1),Mul (NbFood (7,0,3,1)) (Mul TimeLeft TimeLeft)),(Point,Add PointLeft (Add (Sub (NbEmpty (2,5,0,3)) (NbFood (6,4,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (FoodHope (8,3,1,3))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (Const 1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft PointLeft)),Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft))),(Add PointLeft (Add (If (IsEnemy (8,3,2,0)) (If (Not (IsEnemy (8,3,2,0))) (Const 2) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) PointLeft))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1)))),Mul (Mul TimeLeft (Const 1)) (NbEmpty (1,8,2,3))),(PointLeft,Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Const 5)) (Mul TimeLeft (NbVisited (5,0,0,0))))),(Mul (NbFood (10,0,0,3)) (NbFood (7,10,3,2)),Mul (Add TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))) (Mul (NbEmpty (2,3,2,3)) PointLeft)),(Sub PointLeft (Mul Point (Mul (NbFood (7,0,3,1)) TimeLeft)),Add PointLeft (Add (Const 1) (NbFood (8,0,3,0)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul TimeLeft (NbVisited (4,1,2,2))))) (Mul (Add TimeLeft (Const 3)) Point)) PointLeft)),Add (Mul (NbVisited (9,10,1,2)) (NbFood (0,7,2,3))) (NbVisited (3,7,3,1))),(Point,Add PointLeft (Mul (NbFood (7,0,3,1)) (NbFood (8,3,0,1)))),(Mul (Sub (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))) PointLeft)) (FoodHope (4,5,1,1))) TimeLeft,Mul (Sub (Mul (Mul (NbFood (10,0,0,3)) (FoodHope (0,3,1,3))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (10,0,0,3)) (FoodHope (0,3,1,3)))) PointLeft)) (FoodHope (4,5,1,1))) TimeLeft),(Add (Add PointLeft PointLeft) (NbFood (3,9,3,1)),Add (Add (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (3,8,0,1)) (Const 1))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))) PointLeft) (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (3,8,0,1)) PointLeft)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))]