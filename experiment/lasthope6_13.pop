[(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul TimeLeft (NbVisited (4,1,2,2))))) (Mul (Add TimeLeft (Const 3)) Point)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Add (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3)))) (NbVisited (3,7,3,1)),Mul (Add TimeLeft (Add (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (9,10,1,2)) (NbFood (0,7,2,3)))) (NbFood (10,0,0,3)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3)))),(Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1)),Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft)))),Add (NbEmpty (0,0,1,1)) PointLeft),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (NbVisited (4,8,2,0))),If (IsSmaller (NbFood (6,3,3,0)) (NbEmpty (2,8,0,2))) (NbFood (10,5,1,2)) PointLeft),(Point,Mul (Add (Add (NbEmpty (0,0,1,1)) PointLeft) (NbFood (7,0,3,1))) PointLeft),(Mul (Add TimeLeft (NbFood (7,0,3,1))) (NbEmpty (10,3,2,1)),Mul (NbFood (7,10,3,2)) (If (Or (IsFood (10,0,1,1)) (IsEnemy (8,1,3,1))) (Mul TimeLeft (NbEmpty (4,5,2,1))) (Mul (FoodHope (7,9,0,3)) (FoodHope (0,6,1,3))))),(PointLeft,Add PointLeft (Add (If (IsSmaller (Add Point (Sub Point (NbEmpty (9,9,1,0)))) Point) (NbEmpty (9,9,0,3)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft)),Mul (NbFood (7,0,3,1)) (If (Or (IsFood (10,0,1,1)) (IsEnemy (8,1,3,1))) (Mul TimeLeft (NbEmpty (4,5,2,1))) (Mul TimeLeft (FoodHope (0,6,1,3))))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) (NbVisited (6,5,1,2))) (NbFood (2,3,2,2)),Add PointLeft (Add (If (Or (IsEqual (NbEmpty (5,5,3,3)) (If (Or (IsEnemy (10,4,0,3)) (IsSmaller PointLeft PointLeft)) (Const 0) (Mul (Const 2) Point))) (Or (Or (IsEqual TimeLeft (Add (NbEmpty (9,7,3,1)) (Add TimeLeft (Const 4)))) (Or (IsSmaller (Add (NbFood (8,6,0,2)) (FoodHope (8,7,0,3))) (Const 1)) (IsEqual (FoodHope (10,2,2,3)) Point))) (Not (IsFood (0,0,3,2))))) (If (IsSmaller (Add Point (Sub Point (NbEmpty (9,9,1,0)))) Point) (Const 0) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft PointLeft),Mul (NbFood (7,0,3,1)) (Mul PointLeft (FoodHope (8,3,1,3)))),(Add PointLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (Const 1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 0) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),(Add PointLeft (NbFood (7,0,3,1)),Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))),(Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul TimeLeft (NbEmpty (0,0,1,1)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul (NbFood (7,0,3,1)) PointLeft,Add (Mul (NbFood (7,0,3,1)) (NbEmpty (0,0,1,1))) (Add (If (IsEnemy (2,8,1,3)) (NbVisited (9,5,3,3)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))) (NbFood (10,0,0,3)))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2)),Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (Mul (NbFood (7,0,3,1)) TimeLeft) PointLeft)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))),Mul (NbFood (10,0,0,3)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),(Mul PointLeft (Add (NbFood (7,0,3,1)) PointLeft),Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3))))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) PointLeft),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))),(Add (If (IsEqual TimeLeft (NbFood (2,6,0,0))) PointLeft PointLeft) (NbFood (7,0,3,1)),Mul (NbFood (10,0,0,3)) (Mul (NbFood (3,0,1,0)) (Add (NbEmpty (0,0,1,1)) PointLeft))),(Const 0,NbFood (7,0,3,1)),(NbFood (3,0,1,0),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) PointLeft (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Const 1)))) (NbFood (10,0,0,3)))),(FoodHope (1,6,2,1),NbVisited (1,7,1,0)),(NbFood (7,0,3,1),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (9,1,3,1)) PointLeft)) (NbEmpty (1,8,2,3)))) (Const 1))))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul TimeLeft TimeLeft)) PointLeft),Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (FoodHope (8,3,1,3)) PointLeft))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Add (NbEmpty (0,0,1,1)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft))) (FoodHope (8,3,1,3)))),(Add (NbEmpty (1,8,2,3)) (Mul (NbFood (7,0,3,1)) TimeLeft),Point),(Mul TimeLeft (Mul TimeLeft (Add TimeLeft (Mul (NbFood (7,0,3,1)) TimeLeft))),NbFood (7,10,3,2)),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (Mul TimeLeft (Add TimeLeft (NbFood (7,0,3,1)))))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (10,0,0,3)) (Const 1)))),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,10,3,2)) (NbVisited (7,5,0,1))) (NbVisited (3,10,3,3)))),(Point,Mul (NbFood (7,0,3,1)) (Mul (Mul (If (IsFood (4,3,3,2)) TimeLeft (Const 3)) (Add (NbEmpty (0,0,1,1)) PointLeft)) (FoodHope (8,3,1,3)))),(Mul (Mul (Const 2) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3)),Mul (NbFood (7,0,3,1)) TimeLeft),(Add (Add (Add TimeLeft TimeLeft) (NbFood (7,10,3,2))) TimeLeft,Mul (Add PointLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) PointLeft)) PointLeft)),(Mul PointLeft (Add (NbEmpty (9,3,1,0)) PointLeft),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbFood (8,0,3,0)))),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (NbFood (7,10,3,2))))),Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft TimeLeft) (Add (NbEmpty (0,0,1,1)) PointLeft)) (FoodHope (8,3,1,3)))),(Add (NbEmpty (1,8,2,3)) TimeLeft,Mul (NbFood (7,0,3,1)) Point),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (If (IsSmaller (Const 1) (Add TimeLeft (NbFood (7,10,3,2)))) (Const 2) (NbFood (7,0,3,1)))) PointLeft),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Mul (NbEmpty (0,0,1,1)) TimeLeft))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft PointLeft)),NbEmpty (0,0,1,1)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller (Const 1) (Add TimeLeft (NbFood (7,10,3,2)))) (Const 2) (NbFood (7,0,3,1)))),Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))))) (Const 2) (NbFood (7,0,3,1))))),(NbEmpty (5,5,1,0),PointLeft),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul TimeLeft (NbVisited (4,1,2,2))))) (Mul (Add TimeLeft (Const 3)) Point)) PointLeft))) PointLeft)),(Add PointLeft (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),Add (Mul (NbVisited (9,10,1,2)) (NbFood (0,7,2,3))) (NbVisited (3,7,3,1))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (If (Not (And (IsEnemy (0,6,2,1)) (IsFood (3,10,0,0)))) (Mul PointLeft TimeLeft) TimeLeft)),Mul (NbFood (8,9,0,2)) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (NbEmpty (2,3,2,3))))),(Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) PointLeft) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point PointLeft))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point)),Add (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (NbFood (7,10,3,2)))) (NbEmpty (0,8,0,0))) PointLeft),(Mul (Mul PointLeft (Add (FoodHope (8,3,1,3)) (Const 5))) TimeLeft,Mul (NbFood (7,0,3,1)) (NbFood (1,5,0,2))),(Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(If (Not (IsEnemy (2,6,1,3))) (FoodHope (3,3,0,0)) (FoodHope (3,6,0,0)),PointLeft),(Mul (NbFood (7,0,3,1)) (NbFood (6,7,0,3)),Mul (NbFood (6,1,1,3)) (NbVisited (10,9,2,2))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))))))) (Const 4)) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),Mul (NbFood (7,0,3,1)) (Mul Point (NbEmpty (1,8,2,3)))),(Mul (NbFood (10,0,0,3)) (FoodHope (3,1,1,3)),If (Not (IsFood (10,8,1,0))) (Const 1) (NbEmpty (2,3,2,3))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (FoodHope (8,3,1,3)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) PointLeft),Add (If (IsEqual TimeLeft (NbFood (2,6,0,0))) PointLeft (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),NbFood (7,0,3,1)),(Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1)),Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul (NbFood (7,0,3,1)) (Mul (Const 1) PointLeft),Mul (NbFood (7,0,3,1)) (If (Or (IsFood (10,0,1,1)) (IsEnemy (8,1,3,1))) (Mul (NbVisited (7,0,3,0)) (NbEmpty (4,5,2,1))) TimeLeft)),(Mul (Add (FoodHope (1,1,0,0)) (NbFood (7,10,3,2))) (NbFood (3,0,1,0)),Add PointLeft (Add (FoodHope (3,7,1,2)) (NbFood (10,0,0,3)))),(Mul (NbVisited (10,7,0,0)) (Mul PointLeft Point),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsFood (3,1,0,1)) (If (IsFood (3,1,0,1)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbFood (7,0,3,1)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul (NbFood (7,0,3,1)) (Mul (Add PointLeft (Mul Point (NbFood (8,3,0,1)))) (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul (Add PointLeft (NbFood (7,0,3,1))) PointLeft),PointLeft),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 0) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul TimeLeft (NbEmpty (0,0,1,1)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Mul (Const 4) (Add PointLeft TimeLeft)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))))) (Const 2) (NbFood (7,0,3,1))))),(Add (Mul (NbFood (7,0,3,1)) PointLeft) PointLeft,NbEmpty (0,0,1,1)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))))) (Const 2) (NbFood (7,0,3,1)))),Mul (NbFood (7,0,3,1)) PointLeft),(Mul (NbFood (7,0,3,1)) TimeLeft,Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbFood (3,0,1,0))),Add (If (IsEqual Point (NbFood (2,6,0,0))) (FoodHope (9,3,1,1)) (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1)))) (NbFood (7,0,3,1))),(Mul (NbFood (7,1,2,0)) (Mul Point (NbFood (0,5,2,3))),Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),(If (Not (IsEqual PointLeft (Const 0))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2)),Point),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Const 1))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1)))),Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3)))),(Mul PointLeft (Mul PointLeft (Add TimeLeft (NbFood (7,10,3,2)))),Mul (NbFood (7,0,3,1)) (Mul (Mul Point (Add (NbEmpty (0,0,1,1)) PointLeft)) (FoodHope (8,3,1,3)))),(TimeLeft,NbVisited (2,3,2,0)),(Mul (Add TimeLeft (NbVisited (8,7,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,10,3,2)) TimeLeft)) PointLeft),Mul (Add TimeLeft (NbEmpty (0,0,1,1))) (Mul (Sub (Const 10) (NbEmpty (2,3,2,3))) PointLeft)),(Mul (NbFood (7,0,3,1)) TimeLeft,Add PointLeft (Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul (Mul PointLeft (Add (NbEmpty (9,3,1,0)) PointLeft)) (NbEmpty (0,0,1,1)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (If (Not (And (Or (IsEnemy (2,10,3,0)) (IsEnemy (7,6,3,2))) (IsFood (3,8,1,3)))) (NbFood (5,2,0,1)) (FoodHope (0,6,1,2))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))),(PointLeft,Mul (NbFood (10,0,0,3)) (Mul (NbFood (2,6,0,2)) (Add (NbEmpty (0,0,1,1)) PointLeft))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (FoodHope (8,3,1,3)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul (NbFood (7,0,3,1)) (Mul (NbVisited (10,9,2,2)) PointLeft),Mul (Add (If (IsEnemy (7,5,0,1)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,9,2,2)) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))) TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3))))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1))))) (Const 1)),Mul (NbFood (7,0,3,1)) TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (FoodHope (8,3,1,3))),Const 1),(Mul (NbFood (7,0,3,1)) (Add TimeLeft TimeLeft),Add TimeLeft Point),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft TimeLeft),Mul (Add TimeLeft (Add (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) Point)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3)))),(Add TimeLeft (NbFood (7,10,3,2)),Mul (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (10,9,0,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (10,9,0,2)))) (Const 2) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3))))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) PointLeft)),(NbVisited (5,3,2,0),NbFood (5,7,3,2)),(Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1)),Mul (Mul TimeLeft (Const 1)) (Mul PointLeft (Add (FoodHope (8,3,1,3)) PointLeft))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Const 1)))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) Point (NbFood (2,3,2,2))) (NbFood (7,0,3,1)))),Mul (NbFood (7,0,3,1)) (Mul PointLeft (NbFood (7,10,3,2)))),(TimeLeft,Add (NbFood (2,6,0,2)) (Const 1)),(Mul TimeLeft (FoodHope (1,8,2,1)),If (Not (And (IsFood (3,3,0,1)) (IsFood (1,7,1,2)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))),(Mul (Add (NbFood (10,0,0,3)) (NbFood (7,10,3,2))) (If (Not (IsFood (3,10,0,0))) (Add (NbEmpty (0,0,1,1)) (NbFood (9,0,1,0))) Point),If (Not (And (IsEnemy (3,3,1,0)) (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0))))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (Mul (NbFood (7,0,3,1)) TimeLeft)),(FoodHope (4,6,2,2),Add (If (IsEnemy (5,5,3,3)) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))) (NbFood (3,0,1,0))) (NbEmpty (1,2,3,0))),(Mul (NbFood (10,0,0,3)) (Mul PointLeft (Add (NbVisited (10,7,0,0)) (NbFood (7,0,3,1)))),Add (NbEmpty (0,0,1,1)) PointLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))),Mul (NbFood (10,0,0,3)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) PointLeft),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (Mul (NbFood (10,0,0,3)) (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1)))) Point,Const 1),(Sub (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Const 2)) (Const 4))) PointLeft,Mul (Mul (NbVisited (10,9,2,2)) (FoodHope (4,5,1,1))) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (NbFood (7,5,0,0)) (FoodHope (8,2,3,1)),Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (NbFood (7,0,3,1)) TimeLeft))),(If (IsFood (10,4,3,1)) (If (IsFood (10,4,3,1)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (10,4,3,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbEmpty (0,0,1,1)) (NbFood (7,0,3,1)))))) (NbFood (3,0,1,0)),Add (NbFood (3,7,2,2)) PointLeft),(Mul TimeLeft (Mul (NbFood (7,0,3,1)) TimeLeft),Mul (NbFood (10,0,0,3)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) TimeLeft)),(Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (NbFood (7,0,3,1)))) PointLeft,Add (Mul (Mul (NbVisited (1,6,1,2)) (Mul (Const 2) (NbFood (7,10,3,2)))) PointLeft) PointLeft),(Mul (Mul (NbFood (7,0,3,1)) (Mul (Mul TimeLeft (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))) (Add (NbEmpty (0,0,1,1)) PointLeft))) (Mul PointLeft PointLeft),PointLeft),(Add TimeLeft Point,Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (10,0,0,3)) (NbFood (7,10,3,2)))))),(Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (NbVisited (4,3,2,1)))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2))),Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbEmpty (3,4,3,0))) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))) PointLeft))))),(Mul (NbEmpty (0,0,1,1)) (Mul (NbFood (1,8,0,3)) (Const 1)),Add (NbFood (7,0,3,1)) PointLeft),(Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))) (Mul PointLeft PointLeft),Mul (NbFood (7,0,3,1)) (If (Or (IsFood (10,0,1,1)) (IsEnemy (8,1,3,1))) (Mul TimeLeft (NbEmpty (4,5,2,1))) (Mul TimeLeft (FoodHope (0,6,1,3))))),(NbFood (7,10,3,2),Add PointLeft (Add (If (IsSmaller (Add Point (Sub Point (NbEmpty (9,9,1,0)))) Point) (If (IsSmaller (Add Point (Sub Point (NbEmpty (9,9,1,0)))) Point) TimeLeft (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (9,3,1,0)) PointLeft))) (Add (FoodHope (8,3,1,3)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) Point (NbFood (2,3,2,2))) (NbFood (7,0,3,1))))),(NbFood (2,6,0,2),PointLeft),(Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))) TimeLeft,Mul (NbFood (7,0,3,1)) (Mul PointLeft PointLeft)),(Add (Add TimeLeft (NbFood (7,10,3,2))) (NbFood (7,10,3,2)),Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) (NbVisited (7,5,0,1))) (NbVisited (3,10,3,3)))),(If (Not (And (IsFood (4,6,1,1)) (IsFood (3,10,0,0)))) (Add (NbFood (7,0,3,1)) PointLeft) PointLeft,Add PointLeft (NbFood (7,0,3,1))),(Add (NbFood (3,0,1,0)) PointLeft,Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul TimeLeft (NbEmpty (0,0,1,1)))) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbFood (7,10,3,2))) (Add PointLeft (Const 2)))) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft PointLeft)),Mul (NbFood (10,0,0,3)) (Mul TimeLeft (If (Not (And (IsFood (9,7,2,3)) (IsFood (3,10,0,0)))) (Mul PointLeft TimeLeft) (NbEmpty (2,3,2,3))))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft)),Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) PointLeft) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul (NbEmpty (0,0,1,1)) (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbVisited (9,1,3,1))),PointLeft),(Mul (NbFood (7,0,3,1)) (Mul Point (Add PointLeft PointLeft)),TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add TimeLeft (FoodHope (3,8,1,3)))),Mul (NbFood (10,0,0,3)) (Mul TimeLeft (If (Not (And (IsEnemy (7,10,3,2)) (IsFood (3,10,0,0)))) (Mul PointLeft TimeLeft) (NbEmpty (2,3,2,3))))),(Mul (NbFood (10,0,0,3)) (Mul PointLeft (NbVisited (0,5,0,0))),Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) PointLeft) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (Add (NbEmpty (0,0,1,1)) PointLeft))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point))),(Mul (Mul (NbFood (7,0,3,1)) (Mul Point TimeLeft)) PointLeft,Mul (Add PointLeft (NbFood (7,10,3,2))) (NbFood (3,9,3,1))),(NbVisited (8,0,3,2),NbEmpty (4,2,2,2)),(Mul (NbFood (7,0,3,1)) PointLeft,Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (Mul (Const 4) (Add PointLeft PointLeft)) PointLeft))),(Add (Add (NbEmpty (0,0,1,1)) PointLeft) PointLeft,Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (NbEmpty (0,0,1,1)))),(Const 0,Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Add (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) PointLeft)) PointLeft)) (Add (If (IsFood (4,8,0,0)) (If (Not (And (IsFood (3,3,0,1)) (IsFood (4,8,0,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))))) (Const 2) (NbFood (7,0,3,1))))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (9,3,1,0)) PointLeft)),Mul (NbFood (7,0,3,1)) TimeLeft),(Add (NbFood (7,0,3,1)) PointLeft,Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1))),(If (Not (And (IsFood (4,6,1,1)) (IsFood (4,8,2,2)))) (Const 1) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbFood (7,10,3,2))) (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (Const 2))),Add PointLeft (Add PointLeft (Add (Const 3) (FoodHope (9,8,2,1))))),(Mul (Const 2) (Mul PointLeft (Add PointLeft PointLeft)),Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (NbFood (7,0,3,1)) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3)))))),(If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) (NbFood (7,10,1,2))) (NbEmpty (2,3,2,3)),Add (NbEmpty (0,0,1,1)) PointLeft),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) (Mul TimeLeft (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))))),PointLeft),(Add (If (IsEqual TimeLeft (NbFood (2,6,0,0))) (Add TimeLeft (NbFood (7,10,3,2))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (Mul TimeLeft PointLeft))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (10,0,0,3)) (Const 1))))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) PointLeft) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (FoodHope (8,3,1,3)) (NbFood (3,0,1,0))))),(Mul (Add TimeLeft (Add (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (10,0,0,3)))) TimeLeft,Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3))),(Add (Mul (NbFood (7,0,3,1)) (NbEmpty (0,0,1,1))) (Add (If (IsEnemy (2,8,1,3)) (NbVisited (9,5,3,3)) PointLeft) (FoodHope (8,3,1,3))),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (10,0,0,3)) PointLeft))),(Add (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))) (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (Mul (NbFood (7,0,3,1)) TimeLeft) PointLeft)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) PointLeft)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) (Const 1)),Mul (Add PointLeft (NbFood (7,10,3,2))) (Mul (NbVisited (6,2,3,2)) PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (2,7,1,2)) (Add PointLeft PointLeft)),Add (If (IsEqual TimeLeft (NbEmpty (6,5,2,2))) (NbEmpty (0,0,1,1)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Mul (Const 4) (Add PointLeft (Mul TimeLeft (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))))),PointLeft),(Add (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (10,0,0,3)) (Const 1))))) PointLeft,NbEmpty (0,0,1,1)),(NbFood (7,0,3,1),Add (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (NbFood (7,0,3,1)) (NbVisited (3,10,3,3)))) (NbEmpty (2,3,2,3))) PointLeft),(Sub PointLeft TimeLeft,Add (Add (Mul (NbFood (7,0,3,1)) (Add (Mul (NbFood (7,0,3,1)) (NbVisited (7,5,0,1))) (NbFood (7,10,3,2)))) (NbFood (7,10,3,2))) (Add TimeLeft (NbFood (7,10,3,2)))),(Add (Mul (NbFood (7,0,3,1)) PointLeft) PointLeft,Mul (NbFood (10,0,0,3)) (Mul TimeLeft (If (Not (And (IsFood (9,7,2,3)) (IsFood (3,10,0,0)))) (Mul (NbVisited (4,8,0,0)) TimeLeft) (NbEmpty (2,3,2,3))))),(Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0))),Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) PointLeft) (Mul (Add (Add (Add (Sub PointLeft TimeLeft) (NbFood (7,10,3,2))) (Add TimeLeft (NbFood (7,10,3,2)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) TimeLeft)),Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Const 1)))),(Mul (NbFood (7,0,3,1)) (Mul (Add (NbEmpty (1,8,2,3)) Point) (Const 1)),PointLeft),(Mul (NbFood (7,0,3,1)) (If (Or (IsFood (10,0,1,1)) (IsEnemy (8,1,3,1))) (Mul (NbFood (2,3,2,2)) (NbEmpty (4,5,2,1))) (Mul TimeLeft (FoodHope (0,6,1,3)))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) Point TimeLeft) (NbFood (7,0,3,1))))),(Add PointLeft (Add (If (IsSmaller (Add Point (Sub Point (NbEmpty (9,9,1,0)))) Point) (If (IsSmaller (Add Point (Sub (NbFood (2,6,0,2)) (NbEmpty (9,9,1,0)))) Point) (Const 0) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),Point),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbFood (7,0,3,1))),Add PointLeft PointLeft),(Add PointLeft (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),Mul (Add (If (IsEnemy (8,3,2,0)) (If (Not (IsEnemy (8,3,2,0))) (Const 2) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) PointLeft))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))) TimeLeft),(FoodHope (8,3,1,3),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (FoodHope (8,3,1,3)) PointLeft))))),(TimeLeft,Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (Const 1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Add PointLeft (Add (If (IsEnemy (8,3,2,0)) (If (Not (IsEnemy (8,3,2,0))) (Const 2) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) PointLeft))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),Add TimeLeft (NbFood (7,10,3,2))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) (If (IsEqual PointLeft (NbVisited (9,5,1,2))) (NbFood (10,9,1,2)) (If (IsEnemy (0,0,3,3)) PointLeft TimeLeft))) PointLeft)),Add TimeLeft (NbFood (5,8,3,3))),(Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add (NbEmpty (0,0,1,1)) PointLeft)) (FoodHope (8,3,1,3))),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (FoodHope (8,3,1,3)) PointLeft))),(If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (Mul (NbFood (7,0,3,1)) TimeLeft))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul (Add TimeLeft (NbVisited (8,7,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,10,3,2)) TimeLeft)) PointLeft),Mul (Add TimeLeft (NbEmpty (0,0,1,1))) (Mul (Sub (Const 10) (NbEmpty (2,3,2,3))) PointLeft)),(Mul (NbFood (6,7,0,1)) (Mul TimeLeft (Add (FoodHope (8,3,1,3)) PointLeft)),NbEmpty (4,2,1,2)),(Add TimeLeft (NbFood (7,10,3,2)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))))),(Mul (NbFood (10,0,0,3)) (Mul PointLeft (NbFood (10,0,0,3))),Mul (Add (NbEmpty (0,0,1,1)) PointLeft) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),(Add (Mul (NbFood (7,0,3,1)) (NbEmpty (0,0,1,1))) (Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul TimeLeft (NbEmpty (0,0,1,1)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (NbVisited (9,5,3,3)) PointLeft) (NbFood (10,0,0,3)))),(NbFood (3,0,1,0),Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (Mul (NbFood (7,0,3,1)) TimeLeft) PointLeft)) (NbEmpty (2,8,1,1))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add Point PointLeft))) (Add (FoodHope (8,3,1,3)) PointLeft)),If (Or (And (IsSmaller (NbFood (7,0,3,0)) TimeLeft) (IsEnemy (1,7,1,0))) (IsSmaller Point TimeLeft)) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) PointLeft),(NbFood (2,3,2,2),PointLeft),(Add (Mul (NbFood (7,0,3,1)) (NbEmpty (2,3,2,3))) (NbFood (7,0,3,1)),Mul (NbFood (7,0,3,1)) PointLeft),(Add (Add (Sub PointLeft TimeLeft) (NbFood (7,10,3,2))) (Add (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (7,10,3,2))),Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) TimeLeft (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul (Mul (NbFood (7,0,3,1)) (Add TimeLeft TimeLeft)) (Mul TimeLeft (Add TimeLeft TimeLeft)),FoodHope (5,1,2,3)),(Add (Add TimeLeft Point) TimeLeft,NbVisited (2,8,1,3)),(Const 2,Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Add PointLeft (NbEmpty (2,8,1,1))) (NbFood (10,0,0,3))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),(Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))),NbFood (10,5,2,2)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft PointLeft)),Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft))),(Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1)),Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Add (Mul PointLeft PointLeft) TimeLeft,Mul (NbFood (7,0,3,1)) (Add (Add TimeLeft PointLeft) (NbFood (7,10,3,2)))),(NbFood (10,0,0,3),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 0) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (Mul PointLeft (NbFood (8,0,3,0))))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))),Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul TimeLeft (NbVisited (4,1,2,2))))) (Mul (Add TimeLeft (Const 3)) Point)) PointLeft)),Add (Mul (NbVisited (9,10,1,2)) (NbFood (0,7,2,3))) (NbVisited (3,7,3,1))),(Mul (Add TimeLeft (Const 4)) (Add (NbEmpty (0,0,1,1)) PointLeft),FoodHope (2,1,0,2)),(Add (Add (NbFood (10,0,0,3)) PointLeft) (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (3,8,0,1)) (Const 1))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),Mul (NbFood (7,0,3,1)) TimeLeft),(Point,Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft))) (NbEmpty (1,8,2,3)))),(Add (Add (NbEmpty (0,0,1,1)) PointLeft) (NbFood (7,0,3,1)),If (Not (IsFood (10,8,1,0))) (Const 1) (NbEmpty (2,3,2,3))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (Sub (NbFood (8,0,3,0)) (NbEmpty (2,3,2,3))) TimeLeft)) PointLeft),Add PointLeft (Add (NbEmpty (0,0,1,1)) (NbFood (8,0,3,0)))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Add (NbFood (7,10,3,2)) TimeLeft),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) TimeLeft)),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5)),(Add (Mul (Mul (Const 1) TimeLeft) PointLeft) PointLeft,Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (NbFood (7,10,3,2))) (If (Or (Not (IsFood (0,8,1,3))) (IsEqual Point PointLeft)) (If (Not (Or (Not (IsFood (0,8,1,3))) (IsEqual Point PointLeft))) Point (NbFood (2,3,2,2))) (NbFood (7,0,3,1))))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))))) (NbFood (7,0,3,1)) (NbFood (7,0,3,1)))),Mul (NbFood (7,0,3,1)) (Const 2)),(Mul (NbFood (7,0,3,1)) (FoodHope (0,5,0,2)),Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (If (IsFood (7,3,3,0)) (If (IsFood (7,3,3,0)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsFood (7,3,3,0)) PointLeft (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (Mul (NbFood (7,0,3,1)) (Mul Point (NbEmpty (1,8,2,3)))) (Add (If (IsEnemy (2,8,1,3)) (If (IsFood (7,8,1,0)) (Mul (NbVisited (9,1,0,2)) Point) (NbEmpty (9,4,0,2))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1))))),PointLeft),(If (Not (IsFood (10,8,1,0))) (Const 1) (NbEmpty (2,3,2,3)),FoodHope (0,2,3,2)),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbEmpty (0,0,1,1))) PointLeft),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (Mul (NbEmpty (0,0,1,1)) PointLeft) PointLeft))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (NbEmpty (9,3,1,0)) PointLeft)),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2))),(Mul (NbEmpty (0,0,1,1)) (Mul PointLeft (Add PointLeft PointLeft)),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) PointLeft,NbFood (2,3,2,2)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (FoodHope (8,3,1,3))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (Const 1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (Add TimeLeft (Add (If (IsFood (1,8,1,3)) (If (IsFood (1,8,1,3)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (1,8,1,3)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))) (Mul (Mul (Mul TimeLeft PointLeft) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3))),Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (Sub (NbFood (7,0,3,1)) (FoodHope (0,3,1,3))) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul (NbFood (7,0,3,1)) (Add TimeLeft TimeLeft)))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),Mul Point PointLeft),(FoodHope (4,3,3,2),Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (Add TimeLeft (If (Not (And (Or (IsEnemy (2,10,3,0)) (IsEnemy (7,6,3,2))) (IsFood (3,8,1,3)))) (NbFood (5,2,0,1)) (Add TimeLeft (NbFood (6,0,0,0)))))),(Mul (NbFood (1,8,0,3)) (Const 1),Mul (NbFood (7,0,3,1)) (FoodHope (0,6,1,2))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft)),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5)),(Add (Mul (NbFood (7,0,3,1)) (Add TimeLeft TimeLeft)) (NbFood (7,0,3,1)),Add (NbEmpty (0,0,1,1)) PointLeft),(Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add (NbEmpty (0,0,1,1)) TimeLeft)) (FoodHope (8,3,1,3))),Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (Add PointLeft (NbFood (7,10,3,2))) (Add (NbEmpty (0,0,1,1)) PointLeft)))),(Add PointLeft Point,Mul PointLeft (Mul (NbFood (7,0,3,1)) TimeLeft)),(Add PointLeft (NbFood (5,9,1,2)),Mul (NbFood (7,0,3,1)) (NbEmpty (8,5,2,1))),(Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) PointLeft) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Mul TimeLeft (NbEmpty (0,0,1,1))))),(Mul (NbFood (7,0,3,1)) (Const 3),Add Point PointLeft),(Mul (NbFood (7,0,3,1)) (Const 3),PointLeft),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (Mul PointLeft PointLeft) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) PointLeft),Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 0) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add (NbEmpty (0,0,1,1)) PointLeft)) (FoodHope (8,3,1,3))),Add (If (IsFood (5,6,2,0)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),(Mul (NbFood (7,0,3,1)) (If (IsEnemy (9,8,2,3)) (Const 2) (Mul (FoodHope (8,3,0,0)) (If (Not (IsEnemy (9,8,2,3))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))),If (IsEnemy (9,8,2,3)) (NbEmpty (2,2,0,2)) (NbFood (3,0,1,0))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (NbFood (7,10,3,2)))),Mul (NbFood (7,0,3,1)) (Add (If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (Add (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (1,8,2,3)) PointLeft))) (Add (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (10,0,0,3)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3))),TimeLeft),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (If (Not (And (IsFood (9,7,2,3)) (IsFood (9,10,1,1)))) PointLeft (NbEmpty (2,3,2,3)))),Mul (NbFood (7,0,3,1)) (Mul (Const 3) TimeLeft)),(Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) PointLeft) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point)),If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) (NbEmpty (8,8,1,1))) (NbEmpty (2,3,2,3))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))),Mul (NbFood (7,0,3,1)) TimeLeft),(Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (Mul (NbFood (7,0,3,1)) PointLeft) (Mul (NbEmpty (0,3,3,1)) PointLeft),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (Add Point (Mul Point (NbEmpty (1,2,3,0)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Add TimeLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) TimeLeft))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),If (IsEnemy (2,8,1,3)) (Mul (Mul (Const 2) (FoodHope (3,1,2,1))) (FoodHope (8,3,1,3))) (NbFood (3,0,1,0))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbFood (7,10,3,2))) PointLeft),Mul (Add TimeLeft (Mul (NbEmpty (0,0,1,1)) TimeLeft)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,0,3,1)) PointLeft)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul PointLeft (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) PointLeft),Point),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft)),If (IsEnemy (9,8,2,3)) (If (IsEnemy (9,8,2,3)) (Const 2) (Mul (Const 2) (If (Not (IsEnemy (9,8,2,3))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))),(Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (9,3,1,0)) PointLeft))) (Add (FoodHope (8,3,1,3)) PointLeft))) Point),FoodHope (3,0,1,0)),(If (Or (IsEnemy (2,9,1,3)) (Not (IsFood (10,9,0,0)))) (If (Or (IsEnemy (2,9,1,3)) (Not (IsFood (10,9,0,0)))) (Const 2) (Mul (Const 2) (If (Not (Or (IsEnemy (2,9,1,3)) (Not (IsFood (10,9,0,0))))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0)),PointLeft),(Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))) (Mul PointLeft PointLeft),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5)),(Add Point (NbFood (7,10,3,2)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) TimeLeft (NbFood (2,3,2,2))) (NbFood (7,0,3,1))))),(Mul (Add TimeLeft (NbVisited (8,7,3,2))) (Mul (Add (NbEmpty (0,0,1,1)) PointLeft) PointLeft),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,10,3,2)) TimeLeft)))),(Mul (Add TimeLeft (NbEmpty (0,0,1,1))) (Mul (Sub (Const 10) (NbEmpty (2,3,2,3))) PointLeft),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbFood (6,0,1,1))),PointLeft),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Const 1)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 0) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (If (Not (And (IsFood (5,4,1,0)) (IsFood (3,10,0,0)))) (Mul PointLeft TimeLeft) (NbEmpty (2,3,2,3)))),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) (NbVisited (1,3,0,2)))),(Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) PointLeft) (Mul (Add (Sub (Mul (Const 5) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) PointLeft)) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point)),Mul (NbFood (7,0,3,1)) (Mul (NbVisited (0,5,0,0)) (Sub (FoodHope (4,8,3,0)) TimeLeft))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point PointLeft) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add (NbEmpty (0,0,1,1)) PointLeft)) (FoodHope (8,3,1,3))) (NbFood (7,0,3,1)))),Mul (NbFood (7,0,3,1)) (Const 2)),(Const 0,Mul (If (Not (And (IsEnemy (7,6,2,0)) (IsEnemy (2,4,0,1)))) (Const 2) (NbVisited (4,5,0,2))) TimeLeft),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul PointLeft TimeLeft)),Mul (If (IsSmaller TimeLeft (FoodHope (9,1,3,3))) (FoodHope (2,9,2,2)) (If (IsEnemy (0,1,1,2)) (Add (NbVisited (6,1,2,2)) (Mul (FoodHope (0,7,2,2)) (Const 3))) (Sub (Add (Add (NbFood (2,2,0,0)) Point) (FoodHope (1,8,1,1))) (FoodHope (4,6,1,1))))) (NbEmpty (3,10,0,0))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))),Mul (NbFood (10,0,0,3)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft PointLeft)),Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft))),(Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2))),Mul (NbFood (7,0,3,1)) (Mul (NbFood (1,8,0,3)) (Const 1))),(Mul (NbFood (10,0,0,3)) (Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Mul PointLeft PointLeft) (NbEmpty (2,3,2,3)))),Mul (NbFood (7,0,3,1)) TimeLeft),(NbVisited (10,7,0,0),Mul (Add (If (IsEnemy (7,5,0,1)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,9,2,2)) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbEmpty (7,2,0,3)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))) TimeLeft),(Mul (Const 1) PointLeft,Mul (NbFood (7,0,3,1)) (Add (NbFood (2,1,0,1)) TimeLeft)),(If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) (NbEmpty (8,8,1,1))) (NbEmpty (2,3,2,3)),Add TimeLeft Point),(Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) PointLeft)) (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul TimeLeft (NbVisited (4,1,2,2))))) (Mul (Add TimeLeft (Const 3)) Point)) PointLeft)),PointLeft),(Add (Mul (NbVisited (9,10,1,2)) (NbFood (0,7,2,3))) (Const 3),Add (If (IsEqual TimeLeft (NbFood (2,6,0,0))) PointLeft Point) (NbFood (7,0,3,1))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1)))),(Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbVisited (5,3,3,1))),Add Point (NbFood (6,7,0,3))),(Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft)))),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) PointLeft)),(Add (NbEmpty (0,0,1,1)) PointLeft,Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1)))),Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3)))),(Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add (NbEmpty (0,0,1,1)) PointLeft)) (FoodHope (8,3,1,3))),Mul (NbFood (7,0,3,1)) TimeLeft),(Add (Add (Add TimeLeft PointLeft) (NbFood (7,10,3,2))) TimeLeft,Mul PointLeft (NbFood (8,0,3,0))),(Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)),Add PointLeft (Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3)))))]