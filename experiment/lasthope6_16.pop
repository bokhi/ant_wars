[(Mul (NbVisited (0,2,1,2)) (Mul PointLeft (Add PointLeft PointLeft)),Mul (Const 5) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft))),(Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (3,8,0,1)) (Add (FoodHope (8,3,1,3)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft))))),Mul (NbFood (7,0,3,1)) (Mul (Add PointLeft (NbFood (7,10,3,2))) PointLeft)),(Mul (NbFood (10,0,0,3)) (Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (If (Not (Or (Or (IsFood (5,1,0,2)) (IsEnemy (0,9,2,0))) (IsFood (10,10,3,2)))) (Mul (Mul TimeLeft (Add (NbEmpty (0,0,1,1)) PointLeft)) PointLeft) (NbEmpty (2,3,2,3)))),Mul (Mul (NbFood (7,0,3,1)) (Mul Point PointLeft)) (Const 4)),(Add (If (IsFood (5,6,2,0)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Mul (NbFood (10,0,0,3)) (FoodHope (7,1,2,3)))) (NbFood (10,0,0,3)),Mul (Add (NbFood (6,9,2,0)) (NbFood (7,10,3,2))) PointLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Add (If (IsEqual TimeLeft PointLeft) PointLeft (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),Add (If (IsEqual TimeLeft (NbFood (2,6,0,0))) (NbFood (2,6,0,0)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Add Point (Add (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))) (NbFood (10,0,0,3))),Add PointLeft (Add (NbFood (7,0,3,1)) PointLeft)),(Add PointLeft (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft)),Mul (NbFood (8,9,0,2)) (Mul TimeLeft (Mul (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))))),(PointLeft,Add PointLeft (If (And (Or (Not (Or (IsSmaller (Add Point (Const 2)) (NbFood (1,10,2,3))) (Not (And (IsEnemy (8,8,1,2)) (And (IsEqual (NbEmpty (10,1,1,1)) (Sub (Const 1) (Sub TimeLeft (If (IsSmaller (NbEmpty (1,9,0,3)) (FoodHope (2,6,1,0))) TimeLeft PointLeft)))) (Not (And (IsFood (1,8,1,0)) (IsEqual TimeLeft (NbFood (2,3,0,3)))))))))) (IsFood (7,3,2,0))) (IsEnemy (4,7,1,2))) (Mul (Add (If (IsFood (10,9,3,1)) Point (If (IsSmaller (Sub (If (IsEnemy (6,1,3,0)) PointLeft (NbFood (0,8,0,1))) (FoodHope (9,8,3,0))) (Mul (FoodHope (1,4,1,2)) (NbVisited (4,2,1,3)))) (Add (If (Or (IsEnemy (8,8,0,2)) (Or (And (IsEnemy (0,0,0,2)) (IsEqual (Sub (NbEmpty (7,5,1,3)) (Mul (FoodHope (6,7,0,3)) Point)) PointLeft)) (IsFood (8,3,3,3)))) (NbVisited (8,4,2,3)) (NbVisited (9,0,2,0))) (NbFood (3,3,2,0))) (Add Point (Const 5)))) (NbEmpty (5,8,3,1))) (If (Not (IsEqual PointLeft (Sub (Add (If (IsFood (4,2,2,2)) (Add (Mul (Mul (If (IsFood (7,7,0,3)) (Sub (NbEmpty (1,0,1,2)) (NbEmpty (2,5,3,0))) (Const 3)) Point) TimeLeft) (Add (NbEmpty (9,4,3,1)) (Sub (Const 2) (Sub (NbVisited (4,9,0,0)) PointLeft)))) (NbEmpty (1,1,3,3))) (NbFood (1,0,3,0))) (If (Or (IsFood (9,8,1,2)) (IsSmaller (If (IsEnemy (4,8,3,3)) TimeLeft (FoodHope (4,5,3,2))) (Add Point (NbFood (2,10,2,0))))) (Const 2) (NbVisited (7,2,0,1)))))) (NbEmpty (1,4,3,1)) Point)) Point)),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))),Mul (NbFood (7,0,3,1)) TimeLeft),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) (If (IsEqual PointLeft (NbVisited (9,5,1,2))) (NbFood (10,9,1,2)) (If (IsEnemy (0,0,3,3)) PointLeft TimeLeft))) TimeLeft)),Mul (NbFood (10,0,0,3)) (Mul PointLeft (If (IsFood (0,2,1,0)) PointLeft (NbEmpty (2,3,2,3))))),(PointLeft,Add Point (Add TimeLeft (NbFood (5,8,3,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add TimeLeft PointLeft)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (Const 2) PointLeft)))))))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbFood (7,10,3,2)) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),PointLeft),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul TimeLeft (NbVisited (4,1,2,2))))) (Mul (Add TimeLeft (Const 3)) Point)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul (NbFood (10,0,0,3)) PointLeft,Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (NbVisited (10,7,0,0)))) (Mul PointLeft (Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Mul PointLeft PointLeft) (NbEmpty (2,3,2,3)))))),(Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add Point PointLeft))) (Add (FoodHope (8,3,1,3)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft))))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (Mul (NbFood (7,0,3,1)) (FoodHope (0,1,3,3))) (NbEmpty (1,8,2,3))))),(Mul (NbEmpty (1,8,2,3)) PointLeft,Mul Point (Mul (NbFood (7,0,3,1)) (Mul (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1))) TimeLeft))),(Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) PointLeft)) (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul PointLeft (NbVisited (4,1,2,2))))) (Mul (Add TimeLeft (Add (NbVisited (7,7,0,3)) (Add (If (IsFood (10,0,0,0)) (If (Not (And (IsFood (10,0,0,0)) (IsEnemy (8,3,2,0)))) (Add Point (Add (NbFood (7,0,3,1)) (NbFood (10,0,0,3)))) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))))) Point)) PointLeft)),Const 3),(If (Or (And (IsSmaller (NbFood (7,0,3,0)) (NbEmpty (0,0,1,1))) (IsEnemy (1,7,1,0))) (IsSmaller Point TimeLeft)) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (Const 2),TimeLeft),(Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (NbFood (7,0,3,1)),Sub (If (Not (IsFood (6,0,1,3))) PointLeft (NbFood (3,0,1,0))) (Const 5)),(TimeLeft,Mul (NbFood (7,0,3,1)) Point),(Mul (Add TimeLeft PointLeft) (Mul (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))) PointLeft),Mul (Mul TimeLeft TimeLeft) (NbEmpty (1,8,2,3))),(Mul (NbFood (7,0,3,1)) Point,Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Add PointLeft (NbFood (6,7,0,3))))),(Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add Point PointLeft))) (Add PointLeft (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft))))),Mul (Mul (NbFood (7,0,3,1)) (Add TimeLeft (NbFood (7,10,3,2)))) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (NbFood (7,0,3,1))) (Mul (Add TimeLeft (Const 3)) Point)) (FoodHope (8,3,1,3)))),Mul (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul TimeLeft (NbVisited (4,1,2,2)))) (NbFood (7,0,3,1))),(If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3)))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft))) (NbFood (10,0,0,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbFood (7,0,3,1))))) (NbFood (3,0,1,0))) (NbFood (3,0,1,0)),Add (If (IsEqual TimeLeft (NbFood (2,6,0,0))) PointLeft (NbFood (3,0,1,0))) (NbVisited (3,10,3,3))),(Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (FoodHope (8,3,1,3)) PointLeft))) (Mul TimeLeft (Add (NbFood (7,0,3,1)) PointLeft)),Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))),(Mul (NbFood (3,9,3,1)) (Const 2),Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (NbEmpty (9,3,1,0)))) PointLeft),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft (Mul TimeLeft (Const 1)))),Add PointLeft (Add (If (IsEnemy (1,4,3,0)) (If (Not (IsEnemy (1,4,3,0))) (Const 2) (Mul (NbFood (7,0,3,1)) PointLeft)) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) PointLeft))),(Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft)),Add PointLeft (Add (Mul Point (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) PointLeft)) (NbFood (10,0,0,3)))),(Add (NbVisited (7,7,0,3)) (Add (If (IsFood (10,0,0,0)) (If (Not (And (IsFood (10,0,0,0)) (IsEnemy (8,3,2,0)))) (Const 2) (FoodHope (8,3,1,3))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) (Mul TimeLeft (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))))),(Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (Mul TimeLeft (FoodHope (8,3,1,3))) PointLeft))) (NbFood (3,9,3,1)),Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) TimeLeft))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) PointLeft (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)))),(Const 2,Mul (NbFood (7,0,3,1)) (Add (If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsEnemy (3,1,2,0)))) (NbFood (10,0,0,3)) (NbVisited (4,5,0,2))) (Const 3)) PointLeft,Mul (NbFood (7,0,3,1)) (Mul TimeLeft PointLeft)),(Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul (NbFood (3,3,0,1)) (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Const 1)) (NbFood (3,0,1,0))) (Const 2))),Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) Point (NbVisited (3,10,3,3)))),(Mul (Const 3) (Add (NbFood (0,2,2,3)) Point),Add PointLeft (Add (Mul (If (IsEnemy (7,5,0,3)) (NbVisited (9,8,1,0)) (Sub (If (IsEqual (NbVisited (6,1,3,3)) (FoodHope (9,0,2,3))) Point TimeLeft) (Sub (Mul (Add (NbEmpty (1,1,0,2)) (Mul TimeLeft PointLeft)) (FoodHope (0,5,1,0))) (Const 5)))) (NbEmpty (9,5,0,0))) (NbFood (7,0,3,1)))),(Mul (NbVisited (7,7,0,3)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (FoodHope (8,3,1,3))),Add (If (IsEnemy (8,1,1,0)) (If (IsEnemy (8,1,1,0)) (Const 2) (Mul (NbFood (7,0,3,1)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),(Add Point (Add (Mul (NbFood (7,0,3,1)) (Const 4)) (NbFood (10,0,0,3))),Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (FoodHope (8,3,1,3)))),(Add PointLeft (Mul PointLeft (NbFood (3,2,2,1))),Mul (NbFood (7,0,3,1)) (Mul (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))) Point)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (Mul (Mul (NbFood (7,0,3,1)) TimeLeft) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft))) (NbFood (10,0,0,3)))),NbFood (7,0,3,1)),(If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul Point (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (3,0,1,0)),Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul (Const 2) (NbFood (0,5,2,3)))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) PointLeft) (FoodHope (2,3,1,1))),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (Mul (NbFood (7,0,3,1)) TimeLeft) PointLeft)))))))),(Mul (NbFood (7,0,3,1)) PointLeft,TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (FoodHope (8,3,1,3)) (If (IsSmaller Point (Mul Point (Add PointLeft (Add (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3)))) (FoodHope (3,1,2,1)))))) (Const 2) (NbFood (7,0,3,1))))),NbFood (7,0,3,1)),(Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (If (IsEnemy (5,5,3,3)) (Const 2) (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbVisited (6,2,3,0)))),Add (If (IsFood (5,6,2,0)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),(TimeLeft,Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (Add (NbEmpty (0,0,1,1)) PointLeft) (Add Point (Mul (NbFood (7,0,3,1)) Point)))))) (FoodHope (2,3,1,1)))),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft),Mul (NbEmpty (0,0,1,1)) PointLeft),(Mul (Add PointLeft (Add TimeLeft (NbFood (7,0,3,1)))) (Mul (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))) (Const 1)),If (Or (IsEnemy (6,0,3,3)) (IsEnemy (2,7,3,0))) (Sub (NbEmpty (10,7,0,2)) PointLeft) PointLeft),(Mul (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3))))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) (Const 1)),Mul PointLeft (Add (NbFood (7,0,3,1)) (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (NbVisited (6,4,1,1))) (NbFood (3,0,1,0))))),(PointLeft,Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbVisited (7,10,2,1)))),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Mul TimeLeft (NbFood (3,9,3,1))) (NbFood (2,3,2,2))) PointLeft)),Add (Add TimeLeft (NbFood (7,10,3,2))) (NbVisited (6,5,1,2))),(Mul (Add (NbEmpty (10,6,2,2)) (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))) (Add (FoodHope (8,3,1,3)) PointLeft)),Mul (Mul (Const 3) (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) PointLeft))) PointLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (Mul PointLeft PointLeft) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Mul (NbFood (7,0,3,1)) (NbVisited (7,7,0,3))),(Mul (NbFood (7,0,3,1)) (NbFood (5,2,1,3)),Sub PointLeft (Sub (Add (Mul (If (IsEnemy (2,6,0,2)) TimeLeft (Sub (Add PointLeft (NbEmpty (8,2,2,1))) (Add (Sub (Const 2) TimeLeft) (Mul (NbEmpty (5,6,3,2)) (NbEmpty (1,1,1,1)))))) Point) (If (And (IsEnemy (3,7,3,1)) (IsEqual (Const 2) TimeLeft)) TimeLeft Point)) (FoodHope (7,2,1,0)))),(Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) (NbVisited (6,5,1,2))) (NbFood (2,3,2,2))) (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (FoodHope (10,7,3,2)) (Mul (NbVisited (7,7,0,3)) PointLeft)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Mul (NbFood (7,0,3,1)) (Mul (NbFood (2,10,2,0)) (Add TimeLeft PointLeft))),(Mul (NbFood (10,0,0,3)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) TimeLeft))),Mul (Add (NbVisited (3,10,3,3)) (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))) PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) (NbFood (7,10,3,2)))),Mul (NbFood (10,0,0,3)) (Mul TimeLeft TimeLeft)),(Add TimeLeft (FoodHope (8,3,1,3)),Mul (NbFood (7,0,3,1)) PointLeft),(Mul (NbEmpty (0,0,1,1)) (Add (FoodHope (8,3,1,3)) PointLeft),Mul (NbFood (7,0,3,1)) (If (IsEqual (NbVisited (2,0,1,3)) (Mul (NbEmpty (2,6,3,2)) (NbVisited (5,7,3,1)))) PointLeft (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))))),(Mul (Mul (NbFood (7,0,3,1)) (NbVisited (7,7,0,3))) (Mul (Const 3) (If (IsSmaller Point (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))))) (NbFood (7,0,3,1)) (NbFood (7,0,3,1)))),PointLeft),(Mul (NbFood (10,0,0,3)) (Mul PointLeft (Mul (FoodHope (3,1,2,1)) TimeLeft)),Mul (Add TimeLeft (NbVisited (8,7,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,10,3,2)) (FoodHope (10,1,3,1)))) TimeLeft)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))))) (NbFood (7,0,3,1)) (NbFood (7,0,3,1)))),Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Mul (Mul (Add (NbFood (5,6,3,2)) (FoodHope (7,8,2,3))) TimeLeft) (If (IsEnemy (9,0,1,0)) (NbVisited (0,3,1,0)) (Const 3))))) (Const 2) (NbFood (7,0,3,1))))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Mul (NbFood (7,0,3,1)) TimeLeft) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Add (Mul TimeLeft (Const 2)) PointLeft),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (If (Not (And (IsFood (9,7,2,3)) (IsFood (3,10,0,0)))) (Mul (NbVisited (4,8,0,0)) TimeLeft) (NbEmpty (2,3,2,3)))),Mul (NbFood (10,0,0,3)) TimeLeft),(Mul (NbFood (7,0,3,1)) (If (IsEqual (NbVisited (2,0,1,3)) (Mul (NbEmpty (2,6,3,2)) (NbVisited (5,7,3,1)))) PointLeft (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (FoodHope (8,3,1,3)) PointLeft)))),Const 3),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add TimeLeft (Const 2))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbFood (7,10,3,2)) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) (Mul TimeLeft (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))))),(Add TimeLeft (NbFood (7,0,3,1)),Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (If (IsEqual TimeLeft (NbFood (2,6,0,0))) PointLeft (NbFood (3,0,1,0)))))),(Mul TimeLeft PointLeft,Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) PointLeft) TimeLeft)))),(Add (Add PointLeft (NbEmpty (0,2,0,1))) (Add (NbFood (7,0,3,1)) (NbFood (10,0,0,3))),Mul (Sub (Sub (If (And (And (Or (IsSmaller (NbEmpty (2,5,0,0)) (Const 3)) (IsEqual (FoodHope (6,6,1,3)) (If (IsEnemy (9,5,2,2)) (NbVisited (7,0,3,2)) (NbEmpty (5,7,2,1))))) (IsEnemy (5,4,3,1))) (IsEqual (Add (NbEmpty (1,6,0,0)) Point) (Add (Add PointLeft (NbEmpty (2,4,3,2))) PointLeft))) Point (If (And (IsSmaller (Add (NbVisited (10,10,1,3)) (Mul Point (NbEmpty (6,4,3,1)))) (Const 2)) (IsFood (8,3,0,2))) TimeLeft (NbFood (1,3,0,2)))) (NbFood (2,3,1,3))) (Const 3)) PointLeft),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul PointLeft (NbVisited (4,1,2,2))))) (Mul (Add TimeLeft (Const 3)) Point)) TimeLeft)) (FoodHope (2,3,1,1))),Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) PointLeft)) (Add (NbFood (7,0,3,1)) PointLeft))),(Mul Point TimeLeft,If (Or (And (IsSmaller (NbFood (7,0,3,0)) (NbEmpty (0,0,1,1))) (IsEnemy (1,7,1,0))) (IsSmaller Point TimeLeft)) (Const 5) TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Add (If (IsEqual TimeLeft (NbFood (2,6,0,0))) PointLeft (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Mul (FoodHope (8,3,1,3)) (If (IsSmaller Point (Mul Point (Add PointLeft (Add (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3)))) (FoodHope (3,1,2,1)))))) (Const 2) (NbFood (7,0,3,1)))),Add (If (IsFood (5,6,2,0)) (If (IsEnemy (5,5,3,3)) (Const 2) (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbVisited (6,2,3,0)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),(Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Add Point (Add (Mul (NbFood (7,0,3,1)) (Const 4)) (FoodHope (8,3,1,3)))),(Mul Point PointLeft,Mul (NbFood (7,0,3,1)) (Mul (Mul PointLeft (NbFood (3,2,2,1))) (NbFood (7,0,3,1)))),(NbFood (7,0,3,1),Mul (Add TimeLeft (NbVisited (8,7,3,2))) (Mul (Mul (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Mul (NbEmpty (0,0,1,1)) TimeLeft))) (Mul (NbFood (7,10,3,2)) (FoodHope (10,1,3,1)))) PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Mul (Mul TimeLeft TimeLeft) (If (IsEnemy (9,0,1,0)) (NbVisited (0,3,1,0)) (Const 3))))) (Const 2) (NbFood (7,0,3,1)))),Mul Point TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Mul TimeLeft TimeLeft)) (NbEmpty (5,5,2,3)))),Mul (NbFood (7,0,3,1)) (NbFood (3,0,1,0))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (FoodHope (8,3,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (FoodHope (8,5,1,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Mul (NbFood (7,0,3,1)) (Const 2)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft TimeLeft),Add PointLeft (Add (Mul (If (Or (IsSmaller (NbEmpty (7,9,3,0)) (NbFood (3,6,2,2))) (IsFood (1,10,2,2))) (NbVisited (9,8,1,0)) (Sub (If (IsEqual (NbVisited (6,1,3,3)) (FoodHope (9,0,2,3))) Point TimeLeft) (Sub (Mul (Add (NbEmpty (1,1,0,2)) (Add (NbFood (0,2,2,3)) Point)) (FoodHope (0,5,1,0))) (Const 5)))) (NbEmpty (9,5,0,0))) TimeLeft)),(Mul (Const 2) (NbFood (7,0,3,1)),Add (If (IsEnemy (8,1,1,0)) (If (IsEnemy (8,1,1,0)) (Add (Mul TimeLeft (NbFood (10,7,0,3))) PointLeft) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),(Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add Point PointLeft))) (Add (FoodHope (8,3,1,3)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft))))),Mul (Mul (NbFood (7,0,3,1)) (Mul (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1))) TimeLeft)) PointLeft),(Mul (NbFood (10,0,0,3)) (Mul (Add TimeLeft Point) TimeLeft),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) Point (NbFood (3,0,1,0))) (NbFood (3,4,0,2)))),(Mul (NbFood (7,0,3,1)) (Mul (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))) Point),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Const 1) (NbFood (2,3,2,2))) (NbFood (7,0,3,1))))),(PointLeft,Mul (NbFood (7,0,3,1)) (Mul (Mul (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3))))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) (Const 1))) (NbFood (7,10,3,2)))),(Mul (Mul (NbFood (7,0,3,1)) (Mul (Mul (FoodHope (2,1,0,2)) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) PointLeft))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1))))) (Const 1))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) (Mul TimeLeft (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))))),Add TimeLeft (NbFood (7,10,3,2))),(Mul (NbFood (10,0,0,3)) (Add (FoodHope (4,4,2,2)) (NbFood (7,10,3,2))),Mul (Mul TimeLeft (Mul (NbFood (7,0,3,1)) TimeLeft)) (Mul (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))) (Add (If (IsEnemy (2,8,1,3)) (If (IsFood (7,8,1,0)) (Mul (NbVisited (9,1,0,2)) Point) (NbEmpty (9,4,0,2))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1))))),(Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add Point PointLeft))) (Add (FoodHope (8,3,1,3)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft)))))),(Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbFood (7,0,3,1))) (NbFood (10,1,0,0))),Mul (FoodHope (7,4,3,1)) (If (IsFood (9,10,2,1)) (Const 2) (FoodHope (7,2,3,0)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbEmpty (0,0,1,1))),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) (NbVisited (6,5,1,2))) (NbFood (2,3,2,2))) PointLeft))),(Const 1,Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),(Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add PointLeft PointLeft)) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))),Mul PointLeft (Mul TimeLeft TimeLeft)),(Mul (Const 3) (NbFood (7,0,3,1)),Mul (If (IsSmaller (Mul (NbVisited (0,5,1,1)) (NbEmpty (9,10,3,1))) (Const 4)) (NbFood (7,0,3,1)) TimeLeft) (Mul Point Point)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft))) (NbFood (10,0,0,3)))),Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) PointLeft)),(If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) Point,Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbFood (3,0,1,0)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3)))) (NbFood (2,3,2,2))) PointLeft)),Mul (Add PointLeft (NbFood (7,10,3,2))) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul PointLeft (NbVisited (6,5,1,2)))) (NbEmpty (2,7,3,0))) (NbFood (10,0,0,3))))),(Mul (NbFood (7,0,3,1)) (NbFood (6,8,3,3)),Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft)),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) PointLeft) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (Mul (If (IsEqual PointLeft (NbVisited (9,5,1,2))) (NbFood (10,9,1,2)) (If (IsEnemy (0,0,3,3)) PointLeft TimeLeft)) PointLeft) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(NbVisited (7,7,0,3),Mul (NbFood (7,0,3,1)) (Add TimeLeft (NbFood (5,8,3,3)))),(Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,10,3,2)) PointLeft)) (Mul TimeLeft (Add (NbFood (7,0,3,1)) PointLeft)),Add (NbEmpty (1,8,2,3)) (Mul (Add TimeLeft (NbVisited (8,7,3,2))) (Mul (NbFood (7,0,3,1)) PointLeft))),(Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (NbEmpty (9,3,1,0)))) PointLeft,Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (NbVisited (3,1,1,2))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5)),(Add (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) PointLeft (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (NbVisited (6,4,1,1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) PointLeft) (Const 5)),(Add Point (Add (Mul (NbFood (7,0,3,1)) (Const 4)) (FoodHope (8,3,1,3))),Mul (NbFood (7,0,3,1)) (Mul (Mul PointLeft (NbFood (3,2,2,1))) Point)),(Mul (NbFood (7,0,3,1)) (Add (NbFood (0,6,0,2)) (NbVisited (3,3,1,0))),Mul (Mul (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (NbFood (1,4,2,0)))) (NbFood (3,0,1,0))) TimeLeft) TimeLeft),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (FoodHope (8,5,1,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (NbFood (7,0,3,1)) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))),(Mul (NbEmpty (6,3,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add TimeLeft (Const 2))),Mul (Add TimeLeft Point) (Mul (Mul (NbFood (7,0,3,1)) (NbEmpty (9,10,2,2))) (Const 1))),(Mul (Mul TimeLeft PointLeft) (Mul (NbFood (7,0,3,1)) TimeLeft),Mul (Add TimeLeft (Add (If (IsFood (1,8,1,3)) (If (IsFood (1,8,1,3)) (Const 2) (FoodHope (1,9,1,3))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))) (Mul (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbFood (7,10,3,2)) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))) (NbVisited (3,10,3,3)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (4,9,2,3)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (Mul PointLeft PointLeft) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) PointLeft))) PointLeft) (NbFood (10,0,0,3))))),(Mul (Mul (NbFood (7,0,3,1)) (NbEmpty (7,6,2,1))) (Mul (NbEmpty (0,3,3,1)) (NbFood (7,0,3,1))),Mul PointLeft (NbVisited (7,7,0,3))),(Mul (Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) PointLeft)) (NbVisited (7,9,3,3)),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) PointLeft (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5)),(Const 2,PointLeft),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft (NbFood (7,0,3,1)))),Mul (NbFood (10,0,0,3)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (NbFood (7,0,3,1)) (NbEmpty (2,3,2,3))))),(Mul PointLeft TimeLeft,NbFood (7,0,3,1)),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1)))),(Mul (NbFood (7,0,3,1)) TimeLeft,Mul (NbFood (7,0,3,1)) TimeLeft),(Mul (Add (NbFood (5,2,0,1)) (NbFood (7,10,3,2))) (Mul (Mul (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))) PointLeft) PointLeft),Mul (Add TimeLeft (NbFood (7,10,3,2))) PointLeft),(Mul (NbFood (7,0,3,1)) TimeLeft,Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,0,3,1)) PointLeft))),(Mul (Mul (NbFood (7,0,3,1)) (Mul (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1))) TimeLeft)) PointLeft,Mul (NbFood (7,0,3,1)) (Mul TimeLeft Point)),(Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (Add TimeLeft PointLeft) (Mul (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbFood (5,9,1,0)))) PointLeft),Mul (NbFood (7,0,3,1)) (Const 3)),(Mul (NbFood (7,0,3,1)) (Mul (Mul TimeLeft (Add PointLeft (Add (If (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0))) (If (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0))) (Const 2) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (Add (If (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0))) (If (IsFood (7,8,1,0)) (Mul (NbVisited (9,1,0,2)) Point) (NbEmpty (9,4,0,2))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1))))) (Const 1)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (IsEnemy (2,8,1,3))) (Const 2) (Mul (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (8,3,1,3)))) TimeLeft) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul (Mul (Mul (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1))) TimeLeft) (Add (FoodHope (0,8,0,2)) (NbFood (7,10,3,2)))) (Const 1)),NbEmpty (3,3,2,3)),(Mul (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3))))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) (Const 1)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft Point)),(NbFood (4,7,3,2),Mul (NbFood (7,0,3,1)) PointLeft),(Mul (Mul (NbFood (7,0,3,1)) (Mul TimeLeft TimeLeft)) (Const 4),Mul (Add (NbFood (6,9,2,0)) (NbFood (7,10,3,2))) (FoodHope (7,1,2,3))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (If (IsSmaller (Const 1) (Add TimeLeft (NbFood (7,10,3,2)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (FoodHope (7,2,0,3)) TimeLeft)) (FoodHope (2,3,1,1))) (NbFood (7,0,3,1)))) PointLeft),Sub (NbFood (6,7,3,1)) (Mul (NbVisited (1,7,2,0)) (NbFood (7,1,2,0)))),(NbEmpty (10,0,0,3),Add (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Const 2)) (Add (FoodHope (8,3,1,3)) (NbFood (10,0,0,3)))),(Mul (Add (NbFood (5,2,0,1)) (NbFood (7,10,3,2))) (Mul TimeLeft TimeLeft),Mul (Add PointLeft (NbFood (7,10,3,2))) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (Const 4) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbEmpty (2,7,3,0))) (NbFood (10,0,0,3))))),(TimeLeft,Mul (NbFood (7,0,3,1)) (Sub (NbEmpty (6,9,3,3)) PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) TimeLeft)),Mul (NbFood (10,0,0,3)) (Mul (Add (NbEmpty (0,0,1,1)) TimeLeft) (Mul (FoodHope (3,1,2,1)) TimeLeft))),(If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))))) (NbFood (3,0,1,0))) (NbFood (3,0,1,0)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Add PointLeft (Add (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))) (NbFood (7,0,3,1)))))) (NbFood (7,0,3,1)) (NbFood (7,0,3,1))))),(NbEmpty (2,4,0,2),Mul (Add (Mul (NbFood (7,10,3,2)) PointLeft) (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (Const 3) TimeLeft)) (FoodHope (2,3,1,1)))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (NbVisited (3,1,1,2))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)))),(Add PointLeft (Add (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul TimeLeft (NbVisited (4,1,2,2)))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),If (Or (And (IsSmaller (NbFood (7,0,3,0)) (NbEmpty (0,0,1,1))) (IsEnemy (1,7,1,0))) (IsSmaller Point TimeLeft)) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) PointLeft),(Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) PointLeft) (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (IsEnemy (1,4,3,0)) (If (Not (IsEnemy (1,4,3,0))) (Const 2) (Mul (NbFood (7,0,3,1)) PointLeft)) (NbFood (3,0,1,0)))) (Mul (Add TimeLeft (Const 3)) Point)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) PointLeft)) (Mul (NbFood (7,0,3,1)) TimeLeft))),(Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add Point PointLeft))) (Add (FoodHope (8,3,1,3)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))) (NbVisited (3,7,2,1))))))),Sub (Add (FoodHope (7,0,2,3)) (Add TimeLeft (Sub (NbVisited (9,0,3,0)) TimeLeft))) (Sub TimeLeft Point)),(Mul (Const 1) (Mul (Add TimeLeft (NbFood (7,10,3,2))) PointLeft),Mul (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3))))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) (NbFood (7,0,3,1)))),(Mul (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))) (NbFood (7,0,3,1)),Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) PointLeft)),Sub (If (IsEnemy (6,3,3,0)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (6,3,3,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (FoodHope (8,5,1,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5)),(Add Point (Add (Mul (NbFood (7,0,3,1)) (Mul (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1))) TimeLeft)) (NbFood (10,0,0,3))),Mul (Mul (NbFood (7,0,3,1)) PointLeft) PointLeft),(Add PointLeft (Add TimeLeft (NbFood (7,0,3,1))),Mul (NbFood (7,0,3,1)) (Mul (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) Point)),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (NbFood (7,0,3,1)),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1)))),(NbFood (7,0,3,1),Mul (Mul (NbFood (7,0,3,1)) TimeLeft) TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add TimeLeft (Const 2))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbEmpty (5,5,2,3))))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (FoodHope (8,5,1,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbFood (7,10,3,2)) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))))) (Const 5)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) PointLeft)) (Mul (Add TimeLeft (NbVisited (1,5,3,3))) Point)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (Mul PointLeft PointLeft) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul (Mul (NbFood (7,0,3,1)) (NbEmpty (7,6,2,1))) (Mul (NbVisited (7,7,0,3)) PointLeft),Mul (NbFood (7,0,3,1)) (NbEmpty (0,3,3,1))),(Add PointLeft (Add (If (IsEnemy (1,4,3,0)) (If (Not (IsEnemy (1,4,3,0))) (Const 2) (Mul (NbFood (7,0,3,1)) (NbVisited (4,1,2,2)))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) PointLeft)) (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul PointLeft PointLeft))) (Mul (Add TimeLeft (Const 3)) Point)) PointLeft))),(Add PointLeft (Add (Mul Point (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) PointLeft)) (NbFood (10,0,0,3))),If (Or (And (IsSmaller (NbFood (7,0,3,0)) (NbEmpty (0,0,1,1))) (IsEnemy (1,7,1,0))) (IsSmaller Point TimeLeft)) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) TimeLeft),(NbVisited (10,1,3,3),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (IsEnemy (0,8,0,1)) (Add (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) Point (NbFood (2,3,2,2))) (NbFood (7,0,3,1))))) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) PointLeft)) (Mul (Add TimeLeft (NbVisited (1,5,3,3))) Point)) PointLeft))),(Mul (NbEmpty (0,3,3,1)) (Mul PointLeft (NbFood (7,10,3,2))),Mul (Mul (NbFood (7,0,3,1)) (NbEmpty (7,6,2,1))) (Mul (NbFood (7,0,3,1)) PointLeft)),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Add (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) PointLeft (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (NbVisited (6,4,1,1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft PointLeft),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (If (Not (And (IsFood (9,7,2,3)) (IsFood (3,10,0,0)))) (Mul (NbVisited (4,8,0,0)) TimeLeft) (NbEmpty (2,3,2,3)))) (Const 5)),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (If (IsSmaller TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))) (NbFood (7,0,3,1)))) PointLeft),Mul (NbFood (7,0,3,1)) (Mul (Const 1) (NbFood (7,0,3,1)))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul TimeLeft (NbFood (10,7,0,3))),Mul (Add (Const 2) PointLeft) (NbFood (7,0,3,1))),(Const 2,Mul PointLeft (Mul (NbFood (7,0,3,1)) (NbEmpty (2,3,2,3)))),(TimeLeft,Mul (Mul (NbFood (7,0,3,1)) (NbVisited (7,7,0,3))) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))))) (NbFood (7,0,3,1)) (NbFood (7,0,3,1))))),(Mul (NbFood (7,0,3,1)) (Mul (NbVisited (3,10,3,0)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (NbFood (2,1,1,2)) (NbFood (2,3,2,2))) (NbFood (7,0,3,1))))),(Mul (NbFood (7,10,3,2)) TimeLeft,Mul (NbFood (7,0,3,1)) (Mul PointLeft (NbFood (7,0,3,1)))),(TimeLeft,Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1))) TimeLeft)) PointLeft))) (FoodHope (2,3,1,1)))),(Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft Point)),(Mul (NbFood (10,0,0,3)) (Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (If (Not (IsEqual PointLeft TimeLeft)) (Mul (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft)) PointLeft) (NbEmpty (2,3,2,3)))),Mul (NbFood (7,10,3,2)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1)))),(Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)),Add Point (Add (If (IsFood (5,6,2,0)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Mul (NbFood (10,0,0,3)) PointLeft)) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft PointLeft) (Mul (Mul (NbFood (7,0,3,1)) (Mul TimeLeft TimeLeft)) PointLeft)) (Add (NbEmpty (0,0,1,1)) PointLeft))),PointLeft),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Mul (NbFood (7,0,3,1)) PointLeft) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) TimeLeft),FoodHope (5,2,3,0)),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (NbFood (7,10,3,2)),Mul (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))) (Mul (NbFood (7,0,3,1)) TimeLeft)),(Add Point (Add (Mul PointLeft PointLeft) (NbFood (10,0,0,3))),Add (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,0,3,1)) PointLeft)))) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (IsEnemy (0,8,0,1)) (Add PointLeft (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul TimeLeft (NbVisited (4,1,2,2))))) (Mul (Add TimeLeft (Const 3)) Point)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add Point PointLeft))) (Add (FoodHope (8,3,1,3)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) (NbVisited (10,1,3,3)))))))),(Mul (NbFood (10,0,0,3)) (Mul (Mul (NbVisited (10,9,2,2)) (NbFood (7,0,3,1))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Mul PointLeft PointLeft) (NbEmpty (2,3,2,3)))),Mul PointLeft (Mul (Add TimeLeft (NbFood (7,10,3,2))) PointLeft)),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbVisited (8,7,3,2))) PointLeft),Add (NbEmpty (1,8,2,3)) (Mul (Add TimeLeft (If (IsSmaller (Const 1) (Add TimeLeft (NbFood (7,10,3,2)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))) (NbFood (7,0,3,1)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,10,3,2)) PointLeft)) PointLeft))),(Mul (Add TimeLeft (Const 2)) (Const 2),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (NbVisited (3,1,1,2))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5)),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (NbFood (7,0,3,1)) PointLeft)))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),NbVisited (3,10,3,3)),(Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (NbEmpty (9,3,1,0))),Mul (Mul (NbFood (7,0,3,1)) Point) PointLeft),(Mul (NbFood (7,0,3,1)) (NbEmpty (1,10,3,1)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft (NbFood (5,8,2,0))))))),(Mul (NbFood (10,0,0,3)) (Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Add TimeLeft (Const 4))),PointLeft),(Mul (Add (NbFood (5,2,0,1)) (NbFood (7,10,3,2))) (Mul (NbFood (7,0,3,1)) PointLeft),Mul (Mul PointLeft PointLeft) (Mul TimeLeft PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add TimeLeft PointLeft)),Mul (NbFood (7,0,3,1)) (Mul (Add (NbFood (7,0,3,1)) (NbFood (7,10,3,2))) (FoodHope (8,3,1,3)))),(Mul (NbFood (7,0,3,1)) (If (IsEqual (NbVisited (2,0,1,3)) (Mul (NbEmpty (2,6,3,2)) (NbVisited (5,7,3,1)))) PointLeft (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Add (FoodHope (8,3,1,3)) PointLeft)))),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbEmpty (0,0,1,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1)))),(Point,Add (Const 3) (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)))),(Mul (Add TimeLeft Point) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (Mul (Add (Const 2) TimeLeft) PointLeft) PointLeft))),(NbFood (7,0,3,1),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (Mul (NbFood (7,0,3,1)) TimeLeft) (NbFood (7,0,3,1))) PointLeft)),(Add Point (Add (Mul (Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)))) PointLeft) (NbFood (10,0,0,3))),NbFood (7,0,3,1)),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (7,0,3,1))) (NbFood (7,0,3,1))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (3,0,1,0)))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) (NbVisited (2,8,0,2))) PointLeft,Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (Mul PointLeft PointLeft) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(NbFood (7,0,3,1),Const 0),(NbFood (3,0,1,0),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) PointLeft (Mul (Const 2) (FoodHope (9,9,3,1)))))) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Const 2)))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5)),(Add (Const 2) (NbFood (3,6,0,3)),NbFood (7,10,3,2)),(Mul (NbFood (7,0,3,1)) (If (IsEqual (NbVisited (2,0,1,3)) (Mul (NbEmpty (2,6,3,2)) (NbVisited (5,7,3,1)))) PointLeft (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (FoodHope (8,3,1,3)) PointLeft)))),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (NbFood (7,0,3,1)))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5)),(Const 3,Mul (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))) PointLeft),(Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (FoodHope (8,3,1,3)) PointLeft))) (NbFood (7,0,3,1)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) (NbVisited (6,5,1,2))) (NbFood (2,3,2,2))) PointLeft))),(Mul TimeLeft (Const 2),Mul (Add (NbFood (3,9,3,1)) (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))) PointLeft)),(Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft PointLeft)),Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft))),(Mul (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)),Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) TimeLeft)),(Add (NbFood (7,0,3,1)) (NbFood (10,0,0,3)),Mul (NbFood (7,0,3,1)) (Add (If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(PointLeft,Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbEmpty (0,0,1,1)))))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (FoodHope (8,3,1,3)),Mul (NbFood (9,1,2,3)) (Const 1)),(Mul TimeLeft (Add (Mul (NbFood (7,0,3,1)) (FoodHope (0,1,3,3))) (NbEmpty (1,8,2,3))),Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) TimeLeft) TimeLeft)),(NbEmpty (1,8,2,3),Mul Point (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add TimeLeft PointLeft)),Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add Point PointLeft))) (Add PointLeft (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (NbFood (7,10,3,2)) PointLeft)))))),(Add PointLeft (Add (If (IsFood (5,2,2,0)) (If (Not (And (IsFood (3,3,0,1)) (IsFood (5,2,2,0)))) (NbFood (7,10,3,2)) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul TimeLeft (NbVisited (4,1,2,2))))) (Mul (Add TimeLeft (Const 3)) Point)) (NbEmpty (8,3,3,3))))),(Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft),Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul TimeLeft (NbVisited (4,1,2,2))))) (Mul (Add TimeLeft (Const 3)) Point)) PointLeft))))),(Mul (NbFood (10,0,0,3)) (Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Mul PointLeft PointLeft) (Const 2))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbEmpty (2,3,2,3)) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft TimeLeft)),Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Add TimeLeft TimeLeft)) (Const 1))),(If (IsEqual PointLeft (NbVisited (9,5,1,2))) (NbFood (10,9,1,2)) (If (IsEnemy (0,0,3,3)) PointLeft (NbFood (7,10,3,2))),Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (NbFood (7,0,3,1)))) PointLeft))),(Mul (Add TimeLeft (NbVisited (8,7,3,2))) (Mul (Mul (NbFood (7,0,3,1)) TimeLeft) PointLeft),Mul (NbFood (10,0,0,3)) (Mul (Mul (NbFood (7,10,3,2)) (FoodHope (10,1,3,1))) (If (IsFood (0,2,1,0)) PointLeft (NbEmpty (2,3,2,3))))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Mul (Mul (Add (NbFood (5,6,3,2)) (FoodHope (7,8,2,3))) TimeLeft) (If (IsEnemy (9,0,1,0)) (NbVisited (0,3,1,0)) TimeLeft)))) (Const 2) (NbFood (7,0,3,1)))),Add (Const 3) TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) (NbVisited (6,5,1,2))) (NbFood (2,3,2,2))) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (Mul PointLeft PointLeft) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))) PointLeft),Mul (NbFood (7,0,3,1)) (NbVisited (7,7,0,3))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (NbFood (7,0,3,1)) PointLeft)),Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (NbEmpty (9,3,1,0)))) PointLeft),(Mul (NbFood (7,0,3,1)) TimeLeft,Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (NbFood (7,0,3,1))) (NbFood (3,0,1,0))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbFood (2,10,3,3)) (NbVisited (3,10,3,3)))),(FoodHope (7,8,0,0),Mul (Mul (NbFood (7,0,3,1)) (NbVisited (7,7,0,3))) (Mul PointLeft (NbFood (7,0,3,1)))),(Mul (NbFood (10,0,0,3)) (Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (If (Not (IsEqual PointLeft (Const 0))) (Mul (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft)) PointLeft) (NbEmpty (2,3,2,3)))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft TimeLeft)),(Add (If (IsFood (5,6,2,0)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (NbVisited (6,5,2,1)))) (Mul (NbFood (10,0,0,3)) PointLeft)) (Mul (NbFood (7,0,3,1)) (FoodHope (8,3,1,3))),TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbEmpty (5,5,2,3)))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add TimeLeft (Const 2)))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (FoodHope (8,5,1,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Sub (Mul TimeLeft PointLeft) PointLeft)))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Add PointLeft (Const 4)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add TimeLeft (Const 2))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbFood (7,10,3,2)) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1)),Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul (NbFood (7,0,3,1)) (Mul (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))) (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) PointLeft (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (1,9,3,3)) (If (IsEnemy (1,9,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) TimeLeft)) (NbFood (3,0,1,0))) (NbEmpty (5,5,2,3))))),(Add (If (IsEqual TimeLeft (NbFood (2,6,0,0))) PointLeft (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (FoodHope (8,5,1,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5)),(If (Or (And (IsSmaller (NbFood (7,0,3,0)) (FoodHope (1,8,0,2))) (IsEnemy (1,7,1,0))) (IsSmaller Point TimeLeft)) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) PointLeft,Mul (Mul (NbFood (7,0,3,1)) PointLeft) (Add (NbEmpty (7,9,3,0)) PointLeft)),(Mul (NbFood (7,0,3,1)) (FoodHope (3,6,0,0)),Sub (If (IsEnemy (7,2,3,0)) (Const 1) (NbEmpty (2,1,2,3))) (NbFood (9,7,0,1))),(Mul (Add TimeLeft PointLeft) (Mul (Mul (NbFood (7,0,3,1)) Point) (FoodHope (2,3,1,1))),Mul (NbFood (10,0,0,3)) (Mul (Add TimeLeft (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbFood (7,2,1,3)))),(Mul (NbFood (7,0,3,1)) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) Point (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),TimeLeft),(Mul (Mul (NbFood (7,0,3,1)) (NbFood (7,10,3,2))) TimeLeft,Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft PointLeft) PointLeft)),(NbVisited (10,3,0,3),Mul (Add (NbFood (7,0,3,1)) (NbFood (10,0,0,3))) (Mul TimeLeft (FoodHope (4,4,2,3)))),(Mul (NbFood (7,0,3,1)) (Mul (Add (Mul (Add TimeLeft (Const 3)) Point) Point) (Add Point (Mul (NbFood (7,0,3,1)) Point))),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (IsEnemy (0,8,0,1)) (Mul (NbEmpty (6,10,0,3)) PointLeft) (NbEmpty (0,0,1,1))) PointLeft))),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (10,0,0,3)) PointLeft),Mul (NbEmpty (0,0,1,1)) (Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Mul PointLeft PointLeft) (NbEmpty (2,3,2,3))))),(Mul (Add TimeLeft (NbEmpty (9,3,1,3))) (Add (NbEmpty (0,0,1,1)) (Mul PointLeft (Const 2))),Mul (NbFood (7,0,3,1)) (FoodHope (2,7,0,1))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Mul (Mul (Sub Point (Add (If (IsSmaller (Sub (Mul (Const 4) (NbEmpty (3,1,3,1))) (Const 3)) (Mul (Add (NbFood (8,4,0,3)) (NbFood (9,3,2,1))) (NbEmpty (2,9,0,2)))) (If (IsFood (8,3,0,2)) PointLeft (NbVisited (5,3,1,3))) (NbVisited (9,1,3,2))) (FoodHope (7,10,0,0)))) (Add (Mul Point (Sub PointLeft (Const 1))) (Const 4))) Point)),Add (NbFood (7,10,3,2)) Point),(Add PointLeft (Add (If (IsFood (5,1,0,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (FoodHope (8,3,1,3)) PointLeft))) (Mul (NbEmpty (0,0,1,1)) TimeLeft))))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Add Point (Add (Mul (NbFood (7,0,3,1)) (Const 4)) (FoodHope (8,3,1,3)))),(PointLeft,Mul PointLeft (Mul (Mul (NbVisited (2,6,1,1)) (NbFood (3,2,2,1))) Point)),(Mul (NbFood (7,0,3,1)) (Mul (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,10,3,2)) TimeLeft)) (Add TimeLeft TimeLeft)) (Const 1)),Add (NbEmpty (1,8,2,3)) (Mul (Add TimeLeft (NbVisited (8,7,3,2))) (Mul TimeLeft PointLeft))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) (If (IsEqual PointLeft (NbFood (7,0,3,1))) (NbFood (10,9,1,2)) (If (IsEnemy (0,0,3,3)) PointLeft (NbFood (7,10,3,2))))) PointLeft)),Mul (NbVisited (9,5,1,2)) TimeLeft),(Add PointLeft (Mul (NbFood (7,0,3,1)) (NbFood (2,3,0,0))),Add (If (IsEnemy (2,8,1,3)) (Add Point (Mul Point (NbEmpty (1,2,3,0)))) (NbFood (3,0,1,0))) (NbFood (0,5,1,2))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))),Mul (NbFood (7,0,3,1)) TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Mul (NbFood (7,0,3,1)) PointLeft),(Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft (NbEmpty (0,0,1,1))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) PointLeft)) (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul PointLeft (NbVisited (4,1,2,2))))) (Mul (Add TimeLeft (Const 3)) Point)) PointLeft)),Add PointLeft (Add (If (IsFood (5,1,0,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,10,3,2)) (Add (FoodHope (8,3,1,3)) PointLeft))) (Mul (NbEmpty (0,0,1,1)) TimeLeft))))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(If (Or (And (IsSmaller (NbFood (7,0,3,0)) (NbEmpty (0,0,1,1))) (IsEnemy (1,7,1,0))) (IsSmaller Point TimeLeft)) (Add (Add TimeLeft PointLeft) PointLeft) TimeLeft,NbFood (7,10,3,2)),(Mul (NbFood (7,0,3,1)) (If (IsEqual (NbVisited (2,0,1,3)) (Mul (NbEmpty (2,6,3,2)) (NbVisited (5,7,3,1)))) PointLeft (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (FoodHope (8,3,1,3)) PointLeft)))),Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (Add (Mul (NbFood (7,0,3,1)) (Const 1)) (NbFood (10,0,0,3)))))) (Const 2) (NbFood (7,0,3,1))))),(Const 4,Add (NbFood (1,1,0,1)) TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsFood (8,4,0,2)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (7,0,3,1))) (Add (Add (NbFood (10,0,0,3)) PointLeft) (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (3,8,0,1)) (Const 1))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))) (NbFood (10,0,0,3)))),Mul (NbFood (3,0,1,0)) (NbFood (7,0,3,1))),(FoodHope (1,2,3,0),Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))))]