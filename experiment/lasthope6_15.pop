[(Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),Mul (NbFood (7,0,3,1)) (Add (If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (FoodHope (3,1,2,1)) TimeLeft)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))))) (NbFood (7,0,3,1)) (NbFood (7,0,3,1))))),(Point,Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) PointLeft) (Mul (NbFood (7,0,3,1)) (NbEmpty (10,9,0,3))))),(Add TimeLeft PointLeft,Add PointLeft PointLeft),(Mul (NbFood (7,0,3,1)) TimeLeft,Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3)))),(Const 2,Point),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (If (IsSmaller (Const 1) (Add TimeLeft (NbFood (7,10,3,2)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))) (NbFood (7,0,3,1)))) PointLeft),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Const 2)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Mul (NbEmpty (0,0,1,1)) TimeLeft)),Mul (NbFood (7,0,3,1)) TimeLeft),(Mul (Add (If (IsFood (5,2,3,1)) (If (IsFood (5,2,3,1)) (NbFood (7,10,3,2)) (Mul (NbVisited (7,7,0,3)) (If (IsFood (5,2,3,1)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))) TimeLeft,Add PointLeft PointLeft),(Mul (NbFood (10,0,0,3)) (Add TimeLeft (NbFood (3,9,2,1))),Mul (Mul (NbFood (7,0,3,1)) (NbVisited (10,9,2,2))) (Const 2)),(Add (NbFood (7,10,3,2)) (Mul PointLeft (Add (FoodHope (8,3,1,3)) PointLeft)),Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (7,0,3,1))),(Mul (Add TimeLeft PointLeft) (Mul (Mul (NbFood (7,0,3,1)) (Mul TimeLeft TimeLeft)) PointLeft),Mul (NbFood (7,0,3,1)) PointLeft),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add (NbEmpty (0,0,1,1)) PointLeft),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point PointLeft) (Mul (Add PointLeft (NbFood (7,10,3,2))) (FoodHope (8,3,1,3))) (NbFood (7,0,3,1))))),(Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (FoodHope (8,3,1,3)) PointLeft))) (NbFood (7,0,3,1)),Mul (NbFood (3,9,3,1)) (Const 2)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul PointLeft (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbVisited (6,2,1,1))) (NbFood (10,0,0,3)))),Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) PointLeft) TimeLeft)),(Add (NbVisited (7,7,0,3)) (Add (If (IsFood (10,0,0,0)) (If (Not (And (IsFood (10,0,0,0)) (IsEnemy (8,3,2,0)))) (Add Point (Add (NbFood (7,0,3,1)) (NbFood (10,0,0,3)))) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Const 2),(Mul (NbFood (10,0,0,3)) (Mul (NbFood (3,0,1,0)) PointLeft),Add Point (Add (Mul (NbFood (7,0,3,1)) (Add PointLeft PointLeft)) (NbFood (10,0,0,3)))),(Add (NbVisited (3,10,3,3)) (NbEmpty (0,0,1,1)),Mul (NbFood (7,0,3,1)) (Add (If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) PointLeft))) (NbFood (3,0,1,0))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1)),Mul TimeLeft (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add (NbFood (2,10,3,1)) TimeLeft)) (FoodHope (8,3,1,3)))),(PointLeft,Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (FoodHope (0,6,1,2))) (Add (NbEmpty (0,0,1,1)) PointLeft)))),(NbFood (7,0,3,1),Mul (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (9,3,1,0)) PointLeft))) (Add (FoodHope (8,3,1,3)) PointLeft))) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3)))),Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) Point (NbFood (2,3,2,2))) (NbFood (7,0,3,1))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul (NbFood (7,0,3,1)) (Mul (Add (NbEmpty (0,0,1,1)) PointLeft) (FoodHope (8,3,1,3))),Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft TimeLeft)) TimeLeft),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,0,3,1)) (Const 1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Mul PointLeft (Mul PointLeft PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) Point (NbFood (2,3,2,2))) (NbFood (7,0,3,1)))),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbEmpty (0,0,1,1))),Const 1),(Add (Mul (NbFood (7,0,3,1)) (Mul Point (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft)))) PointLeft,Mul (NbFood (5,9,2,1)) (Mul (NbEmpty (0,3,3,1)) PointLeft)),(NbFood (10,0,0,3),Add (Add (NbFood (10,0,0,3)) PointLeft) (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (3,8,0,1)) (Const 1))) (NbFood (3,0,1,0))) PointLeft)),(Mul (NbFood (7,0,3,1)) (NbFood (3,0,1,0)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (Add Point (Mul Point (NbEmpty (1,2,3,0)))) (Mul (NbEmpty (0,0,1,1)) (Add PointLeft PointLeft))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul (FoodHope (8,3,1,3)) (If (IsSmaller Point (Mul Point (Add PointLeft (Add (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3)))) (FoodHope (3,1,2,1)))))) (Const 2) (NbFood (7,0,3,1)))),Add (If (IsFood (5,6,2,0)) (If (IsEnemy (5,5,3,3)) (Const 2) (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbVisited (6,2,3,0)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),(Add PointLeft (Add PointLeft (Add PointLeft (NbFood (7,0,3,1)))),Mul PointLeft (Add (NbFood (7,0,3,1)) (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (NbVisited (6,4,1,1))) (NbFood (3,0,1,0))))),(Const 0,Add Point (If (And (IsFood (3,1,3,2)) (Not (Or (IsFood (3,4,2,0)) (IsEnemy (6,0,0,3))))) (FoodHope (3,2,0,1)) PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add Point PointLeft))) (Add PointLeft (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft))))),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul TimeLeft (NbVisited (4,1,2,2))))) (Mul (Add TimeLeft (Const 3)) Point)) (FoodHope (8,3,1,3))))),(Mul (NbFood (7,0,3,1)) (Mul (Add (Mul (NbVisited (9,10,1,2)) (NbFood (0,7,2,3))) (NbFood (7,10,3,2))) PointLeft),Add TimeLeft (NbVisited (3,7,3,1))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (NbFood (7,0,3,1)),Mul (Mul (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))) PointLeft) (Mul TimeLeft (FoodHope (8,3,1,3)))),(Mul (Add TimeLeft (If (And (IsFood (3,8,1,3)) (IsEnemy (6,1,2,2))) (Mul TimeLeft Point) (Mul (Const 5) (FoodHope (8,6,1,0))))) (NbEmpty (10,3,2,1)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (Const 1))) (FoodHope (7,5,2,1))) (NbFood (7,0,3,1)))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Sub (Add (Add (Mul (Const 4) (NbEmpty (2,6,3,0))) (If (IsEnemy (5,9,1,3)) (NbVisited (6,8,2,3)) (NbVisited (4,3,0,0)))) Point) (NbVisited (7,10,2,0))) (FoodHope (2,3,1,1))),Mul (NbFood (9,7,3,3)) TimeLeft),(NbFood (7,0,3,1),Mul (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),(Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) PointLeft)) (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul PointLeft (NbVisited (4,1,2,2))))) (Mul (Add TimeLeft (Const 3)) Point)) PointLeft)),If (Or (And (IsSmaller (NbFood (7,0,3,0)) (NbEmpty (0,0,1,1))) (IsEnemy (1,7,1,0))) (IsSmaller Point TimeLeft)) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) TimeLeft),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (If (IsFood (0,2,1,0)) PointLeft (NbEmpty (2,3,2,3)))),Add TimeLeft TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add Point PointLeft))) (Add (FoodHope (8,3,1,3)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft))))),Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) PointLeft)),(Mul (NbFood (7,0,3,1)) (If (IsEnemy (6,0,2,2)) (Add (If (IsEqual (FoodHope (6,3,3,3)) (If (IsEqual (If (Not (IsEqual (NbFood (3,4,0,0)) (Mul (Mul (Mul (NbFood (4,6,0,3)) (NbEmpty (5,4,0,3))) (Sub (Add (Sub (Sub (Const 3) (NbEmpty (1,10,3,1))) (Const 3)) (Const 3)) (Mul Point (Add (Add (NbEmpty (10,5,0,2)) (NbEmpty (5,10,3,3))) PointLeft)))) TimeLeft))) TimeLeft (Const 0)) (NbVisited (8,2,0,3))) (Mul (NbVisited (10,10,1,1)) (FoodHope (7,9,3,2))) PointLeft)) (Mul (If (IsSmaller Point (Add PointLeft (If (And (Or (IsFood (2,1,1,2)) (IsSmaller (Sub (If (Or (Or (IsEnemy (2,1,2,1)) (IsEnemy (10,7,2,2))) (Or (IsFood (5,9,1,3)) (IsEnemy (6,9,2,1)))) (NbFood (2,8,2,3)) PointLeft) (Sub (NbVisited (9,10,2,3)) (NbFood (2,6,2,2)))) (Add (NbFood (1,10,0,2)) (FoodHope (1,8,3,1))))) (Or (Or (IsEqual TimeLeft (FoodHope (9,3,2,3))) (IsEqual (FoodHope (4,2,2,1)) (Sub PointLeft (Const 4)))) (IsEqual TimeLeft (NbEmpty (0,0,3,3))))) (Const 1) TimeLeft))) (If (IsEqual (If (IsFood (5,8,2,0)) Point (If (And (Not (IsEnemy (10,9,0,1))) (IsSmaller Point (Mul (Const 4) (NbEmpty (3,10,2,0))))) (NbEmpty (4,5,2,2)) PointLeft)) TimeLeft) (FoodHope (6,1,3,1)) TimeLeft) (NbVisited (10,7,3,1))) (Add PointLeft (NbVisited (5,9,0,3)))) (NbFood (2,2,1,1))) (If (IsEnemy (1,1,1,0)) TimeLeft (Mul (NbEmpty (10,6,2,1)) Point))) (Sub (Const 2) TimeLeft)),Add (If (IsEqual TimeLeft (NbFood (2,6,0,0))) PointLeft (NbEmpty (7,3,0,0))) (NbFood (7,0,3,1))),(NbEmpty (10,4,2,1),Add (Mul (NbFood (7,0,3,1)) PointLeft) (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul Point (FoodHope (5,1,2,3))),NbFood (0,5,2,3)),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul TimeLeft TimeLeft),Mul (If (IsSmaller (Mul (NbVisited (0,5,1,1)) (NbEmpty (9,10,3,1))) (Const 4)) (Const 3) TimeLeft) (Mul Point Point)),(Mul (Add TimeLeft (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbEmpty (10,3,2,1)),Mul (NbFood (7,0,3,1)) Point),(Mul (NbFood (10,0,0,3)) (Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (If (Not (IsEqual PointLeft (Const 0))) (Mul (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft)) PointLeft) (NbEmpty (2,3,2,3)))),Add (If (IsFood (5,6,2,0)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Mul (NbFood (10,0,0,3)) PointLeft)) (NbFood (10,0,0,3))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add (NbFood (3,0,1,0)) (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2)),TimeLeft),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (Add Point (Mul Point (Mul (NbFood (7,0,3,1)) TimeLeft))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),NbEmpty (1,2,3,0)),(Add (If (IsFood (5,6,2,0)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Mul (NbFood (10,0,0,3)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft)))) (NbFood (10,0,0,3)),NbFood (3,0,1,0)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (Mul PointLeft PointLeft) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Mul (NbFood (7,0,3,1)) (NbVisited (7,7,0,3))),(Mul (Add TimeLeft (NbVisited (8,7,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,10,3,2)) (FoodHope (10,1,3,1)))) PointLeft),Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Mul (Mul (Add (NbFood (5,6,3,2)) (FoodHope (7,8,2,3))) TimeLeft) (If (IsEnemy (9,0,1,0)) (NbVisited (0,3,1,0)) (Const 3))))) (Const 2) (NbFood (7,0,3,1))))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (Mul PointLeft PointLeft) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Mul (NbFood (7,0,3,1)) (NbVisited (7,7,0,3))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbEmpty (5,5,2,3)))),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (FoodHope (8,5,1,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft PointLeft))))))),PointLeft),(Add (Add (NbEmpty (0,0,1,1)) PointLeft) PointLeft,Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) PointLeft)),(Mul (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))) (NbFood (7,0,3,1)),Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))),(Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) PointLeft)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Mul (NbFood (10,0,0,3)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3)))))),(Add PointLeft (Add (If (IsEnemy (1,4,3,0)) (If (Not (IsEnemy (1,4,3,0))) (Const 2) (Mul (NbFood (7,0,3,1)) PointLeft)) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),Add PointLeft (Add (Mul Point (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) PointLeft)) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (NbFood (7,0,3,1)) PointLeft)),Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (NbEmpty (9,3,1,0)))) PointLeft),(Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add Point PointLeft))) (Add (FoodHope (8,3,1,3)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft))))),Mul (Mul (NbFood (7,0,3,1)) (Mul (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1))) TimeLeft)) PointLeft),(Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) PointLeft),Mul (NbFood (7,0,3,1)) (Mul TimeLeft Point)),(Mul (NbFood (7,0,3,1)) (NbEmpty (10,9,3,2)),Mul (NbFood (10,0,0,3)) (FoodHope (3,9,1,1))),(NbFood (7,0,3,1),Mul (Mul (NbFood (7,0,3,1)) (NbVisited (7,7,0,3))) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))))) (NbFood (7,0,3,1)) (NbFood (7,0,3,1))))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (NbVisited (10,7,0,0)))) (Mul PointLeft PointLeft)),(Add (If (IsEqual (NbVisited (3,4,3,2)) (Const 2)) PointLeft (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbFood (2,6,0,0)) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,10,1,2)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbEmpty (5,5,2,3)))),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (FoodHope (8,5,1,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5)),(Add PointLeft (NbFood (7,10,3,2)),Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (FoodHope (8,3,1,3)) PointLeft))) (NbFood (3,9,3,1))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft TimeLeft),Mul (NbFood (7,0,3,1)) (FoodHope (8,3,1,3))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (Const 1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3)))),(Add (NbVisited (10,1,0,0)) (FoodHope (9,0,3,0)),Mul (Mul PointLeft PointLeft) (Mul (Add TimeLeft (NbFood (7,10,3,2))) Point)),(Mul (NbEmpty (4,0,1,1)) (NbVisited (7,7,0,3)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (FoodHope (4,0,0,3))) (NbFood (7,0,3,1)))),(Mul (Mul PointLeft (Add PointLeft PointLeft)) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))),Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))),(Mul (NbFood (10,0,0,3)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),(TimeLeft,Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (FoodHope (8,3,1,3)) PointLeft))) TimeLeft),(Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) PointLeft)) (Mul (Add TimeLeft (NbVisited (1,5,3,3))) Point)) PointLeft)),Mul (Mul (NbFood (7,0,3,1)) (NbEmpty (7,6,2,1))) (Mul (NbEmpty (0,3,3,1)) PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsFood (8,4,0,2)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (Add (Add (NbFood (10,0,0,3)) PointLeft) (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (3,8,0,1)) (Const 1))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))) (NbFood (10,0,0,3)))),FoodHope (1,2,3,0)),(Mul (NbFood (7,0,3,1)) PointLeft,Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (Mul PointLeft (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul TimeLeft (NbVisited (4,1,2,2))))) (Mul (Add TimeLeft (Const 3)) Point)) PointLeft)) PointLeft))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft))) (NbFood (10,0,0,3)))),If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (3,0,1,0))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) (NbVisited (6,5,1,2))) (NbFood (2,3,2,2))) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),(Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)),Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) PointLeft) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (NbEmpty (0,0,1,1))) (Add (Mul (NbEmpty (0,0,1,1)) (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3)))) TimeLeft)) (FoodHope (2,3,1,1))),If (IsEnemy (9,8,2,3)) (If (IsEnemy (9,8,2,3)) (Const 2) (NbFood (7,0,3,1))) (NbFood (3,0,1,0))),(Mul (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (IsEnemy (9,8,2,3))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))) TimeLeft,Mul (NbFood (7,0,3,1)) (Add (If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (NbFood (7,0,3,1)) (NbFood (3,0,1,0))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft PointLeft)),Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (NbFood (7,0,3,1)))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Mul (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))) PointLeft),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))),Mul (NbFood (7,0,3,1)) TimeLeft),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul TimeLeft TimeLeft)) PointLeft),Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (FoodHope (8,3,1,3)) PointLeft))),(Add (NbEmpty (1,8,2,3)) (Mul (Add TimeLeft (NbVisited (8,7,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,10,3,2)) PointLeft)) PointLeft)),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (NbVisited (3,1,1,2))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5)),(Mul (Mul (NbFood (7,0,3,1)) TimeLeft) TimeLeft,NbFood (7,0,3,1)),(Mul (Mul (NbFood (7,0,3,1)) (Mul (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1))) TimeLeft)) PointLeft,Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add Point PointLeft))) (Add (FoodHope (8,3,1,3)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft)))))),(Mul (Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) PointLeft)) (NbVisited (7,9,3,3)),PointLeft),(Add PointLeft (NbFood (10,0,0,3)),Mul (NbFood (7,0,3,1)) (NbFood (7,10,3,2))),(Mul TimeLeft (NbFood (3,9,3,1)),Mul (Mul (Const 3) (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (FoodHope (8,3,1,3)) PointLeft)))) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),(Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1)),Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Mul (NbFood (10,0,0,3)) (Mul TimeLeft (If (Not (And (IsFood (9,7,2,3)) (IsFood (3,10,0,0)))) (Mul (NbVisited (4,8,0,0)) TimeLeft) (NbEmpty (2,3,2,3))))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) (NbVisited (6,5,1,2))) (NbFood (2,3,2,2))) PointLeft)),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))) PointLeft)),(Point,Mul (Add TimeLeft (Mul (NbFood (7,0,3,1)) (NbEmpty (0,0,1,1)))) (NbEmpty (10,3,2,1))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) PointLeft (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) PointLeft (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft (Const 2)))),(FoodHope (5,9,3,0),Mul (NbFood (7,0,3,1)) (Const 2)),(Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) PointLeft) TimeLeft),Add Point (Add (NbFood (7,0,3,1)) (NbFood (10,0,0,3)))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) (If (IsEqual PointLeft (NbVisited (9,5,1,2))) (NbFood (10,9,1,2)) (If (IsEnemy (0,0,3,3)) PointLeft TimeLeft))) PointLeft)),Add TimeLeft (NbFood (5,8,3,3))),(Add Point (Add (Mul (NbFood (7,0,3,1)) (Const 4)) (FoodHope (8,3,1,3))),Mul (NbFood (7,0,3,1)) (Mul (Mul PointLeft (NbFood (3,2,2,1))) Point)),(Mul (NbFood (7,0,3,1)) (Add (If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (Const 1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbVisited (5,3,0,2)) (Mul TimeLeft (Add (NbFood (7,0,3,1)) PointLeft)),Mul (NbFood (10,0,0,3)) (NbFood (7,0,3,1))),(Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsEnemy (3,1,2,0)))) (NbFood (10,0,0,3)) (NbVisited (4,5,0,2))) (Add PointLeft (NbEmpty (9,3,1,0)))) PointLeft,Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul (NbFood (3,3,0,1)) (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) Point (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (Const 2)))),(Mul (NbFood (7,0,3,1)) (Add TimeLeft (NbFood (7,10,3,2))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft TimeLeft)),(Mul PointLeft (FoodHope (0,6,1,2)),Mul (NbFood (10,0,0,3)) (Mul (NbFood (7,0,3,1)) (Add (NbEmpty (0,0,1,1)) PointLeft))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) PointLeft)),Add (NbEmpty (10,0,0,3)) (Add (FoodHope (8,3,1,3)) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (NbFood (7,0,3,1)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add Point PointLeft))) (Add (FoodHope (8,3,1,3)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft)))))),(Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (NbEmpty (9,3,1,0)))) PointLeft,Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) PointLeft)),(Mul (NbFood (7,0,3,1)) (NbVisited (3,4,1,0)),Mul (NbFood (7,0,3,1)) (Mul (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add (NbFood (2,10,3,1)) TimeLeft)) (NbFood (0,2,3,0))) (Add (NbFood (7,0,3,1)) PointLeft))),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (FoodHope (9,6,3,2)) (Add (NbEmpty (0,0,1,1)) PointLeft))),Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (8,3,2,3)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (NbEmpty (9,3,1,0)))) PointLeft),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))),Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Mul (Const 2) (FoodHope (8,3,1,3))),(TimeLeft,TimeLeft),(Const 2,Add Point (NbFood (6,7,0,3))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Mul (NbFood (7,0,3,1)) TimeLeft))) (Const 2) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) Point),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Add (Const 1) PointLeft)) (FoodHope (2,3,1,1)))),(Add (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) (Mul TimeLeft (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (NbVisited (6,4,1,1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),Mul (Add TimeLeft (NbFood (7,10,3,2))) PointLeft),(Mul (NbFood (7,0,3,1)) (NbFood (10,0,0,3)),Mul (Mul PointLeft (Add (NbFood (7,10,3,2)) (NbFood (3,6,0,3)))) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) TimeLeft))),(Mul (NbFood (1,8,3,2)) Point,Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) PointLeft) (Mul (NbFood (7,0,3,1)) TimeLeft)))) (Mul TimeLeft (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))))),(Add (Mul TimeLeft (Mul (NbFood (7,0,3,1)) TimeLeft)) PointLeft,Mul (NbFood (10,0,0,3)) TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add (NbEmpty (0,0,1,1)) (NbFood (7,0,3,1)))) (FoodHope (8,3,1,3))),Mul PointLeft (Mul TimeLeft PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft PointLeft),Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (FoodHope (8,3,1,3)))),(Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))) (NbFood (9,1,2,1))),Add (If (IsFood (5,6,2,0)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) TimeLeft)) (Mul (NbFood (10,0,0,3)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft)))) (NbFood (10,0,0,3))),(Mul (NbFood (7,0,3,1)) (If (Or (IsFood (10,0,1,1)) (IsEnemy (8,1,3,1))) (Mul (NbEmpty (7,10,3,3)) (NbEmpty (4,5,2,1))) (Mul (NbFood (3,0,1,0)) (FoodHope (0,6,1,3)))),TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul (Mul TimeLeft (Add TimeLeft TimeLeft)) (Const 1)),Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) (If (IsEqual PointLeft (NbVisited (9,5,1,2))) (NbFood (10,9,1,2)) (If (IsEnemy (0,0,3,3)) PointLeft (NbFood (7,10,3,2))))) PointLeft))),(Mul (FoodHope (8,0,1,2)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) (Const 1)),PointLeft),(Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Mul (NbFood (7,0,3,1)) PointLeft),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (NbEmpty (9,3,1,0)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (FoodHope (9,9,3,1)) PointLeft))) (Add (FoodHope (8,3,1,3)) (NbFood (7,0,3,1))))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (Add Point (Mul (Mul (NbEmpty (0,0,1,1)) (If (And (IsFood (1,6,3,1)) (IsFood (2,6,3,0))) (NbFood (0,2,1,2)) (FoodHope (2,3,3,2)))) (Mul (NbFood (7,0,3,1)) TimeLeft))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Mul PointLeft Point),(Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft),Mul (NbEmpty (2,0,1,0)) (NbEmpty (1,2,3,0))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Mul (NbFood (7,0,3,1)) TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (NbFood (10,4,3,3)) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) PointLeft (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Mul (Mul (NbFood (7,0,3,1)) (Mul (If (IsSmaller Point (Const 3)) (Const 2) (NbFood (7,0,3,1))) TimeLeft)) PointLeft,Mul (NbFood (7,0,3,1)) (Mul (NbFood (4,1,3,0)) Point)),(Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),Mul (NbFood (7,0,3,1)) (Add (If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (NbEmpty (4,8,2,0))),Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) Point))),(PointLeft,Mul (NbFood (7,0,3,1)) (Add (If (IsEnemy (4,8,2,2)) (If (IsEnemy (4,8,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (Add PointLeft (NbFood (7,10,3,2))) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul PointLeft (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbEmpty (2,7,3,0))) (NbFood (10,0,0,3)))),NbFood (6,8,3,3)),(Add (NbVisited (7,7,0,3)) (Add (If (IsFood (10,0,0,0)) (If (Not (And (IsFood (10,0,0,0)) (IsEnemy (8,3,2,0)))) (Const 2) (FoodHope (8,3,1,3))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (Mul TimeLeft (FoodHope (8,3,1,3))) PointLeft))) (NbFood (3,9,3,1))),(Mul (Mul (NbFood (7,0,3,1)) (Mul TimeLeft TimeLeft)) (Const 4),Mul (Add (NbFood (6,9,2,0)) (NbFood (7,10,3,2))) (FoodHope (7,1,2,3))),(Mul (NbFood (7,0,3,1)) (If (IsEqual (NbVisited (2,0,1,3)) (Mul (NbEmpty (2,6,3,2)) (NbVisited (5,7,3,1)))) PointLeft (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (FoodHope (8,3,1,3)) PointLeft)))),Const 3),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) (NbVisited (2,8,0,2))) PointLeft,Const 0),(Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Add PointLeft (NbFood (2,3,2,2))))) (NbFood (7,0,3,1)) (NbFood (7,0,3,1))))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) PointLeft (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Const 2),(Mul PointLeft (Add (NbFood (7,0,3,1)) (FoodHope (10,5,0,1))),Add PointLeft (If (Not (IsEqual TimeLeft (FoodHope (0,10,3,1)))) (FoodHope (3,2,0,1)) PointLeft)),(Mul (NbFood (10,0,0,3)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (NbFood (7,0,3,1)) (NbEmpty (2,3,2,3)))),TimeLeft),(Add PointLeft (Add (NbFood (7,0,3,1)) (NbFood (7,0,3,1))),Mul (NbFood (8,9,0,2)) (Mul TimeLeft (Mul (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft))))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))),Mul (NbFood (7,0,3,1)) TimeLeft),(Mul (NbFood (10,0,0,3)) (Mul (Add TimeLeft Point) TimeLeft),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) Point (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Add TimeLeft (NbFood (7,10,3,2))),Mul (NbFood (10,0,0,3)) (Mul TimeLeft TimeLeft)),(Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) PointLeft) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3))),Add (NbVisited (4,5,0,2)) (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (Add (Add (Sub (Mul (Sub (NbFood (7,0,3,1)) (FoodHope (0,3,1,3))) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul (NbFood (7,0,3,1)) (Add TimeLeft TimeLeft)))) (NbFood (7,10,3,2))) (Mul PointLeft PointLeft),Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) (NbVisited (6,2,3,2)))) (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul TimeLeft (NbVisited (4,1,2,2))))) (Mul (Add TimeLeft (Const 3)) Point)) PointLeft))),(TimeLeft,NbVisited (5,4,2,2)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (Add (Mul (NbFood (7,0,3,1)) (Const 1)) (NbFood (10,0,0,3)))))) (Const 2) (NbFood (7,0,3,1)))),Add Point TimeLeft),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1))),Add PointLeft (Add (If (IsEnemy (8,3,2,0)) (If (Not (IsEnemy (8,3,2,0))) (Const 2) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) PointLeft))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft PointLeft)))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) (If (IsEqual PointLeft (NbVisited (9,5,1,2))) (NbFood (10,9,1,2)) (If (IsEnemy (0,0,3,3)) PointLeft TimeLeft))) (NbEmpty (7,0,1,0)))),Add PointLeft (Add (If (IsEnemy (1,4,3,0)) (If (Not (IsEnemy (1,4,3,0))) (Const 2) (Mul (NbFood (7,0,3,1)) PointLeft)) Point) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1))))),(Add (Const 2) (NbFood (5,8,3,3)),Add PointLeft (Add (Mul Point (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) TimeLeft PointLeft)) (NbFood (10,0,0,3)))),(Mul (NbFood (7,10,3,2)) (Mul (NbFood (7,0,3,1)) TimeLeft),Add (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,0,3,1)) PointLeft)))) PointLeft),(TimeLeft,NbVisited (7,10,1,3)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul TimeLeft (NbVisited (4,1,2,2))))) (Mul (Add TimeLeft (Const 3)) Point)) PointLeft)),Mul (NbFood (10,0,0,3)) (Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Mul PointLeft PointLeft) (NbEmpty (2,3,2,3))))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbFood (2,10,3,3)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),NbFood (2,3,2,2)),(Mul (If (Not (IsEnemy (1,4,3,0))) (Const 2) (Mul (NbFood (7,0,3,1)) PointLeft)) (Mul TimeLeft (NbEmpty (10,2,1,1))),Add PointLeft (Add (If (IsEnemy (1,4,3,0)) (NbFood (7,0,3,1)) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1))))),(Mul Point (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) PointLeft),Add PointLeft (Add (Mul Point (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) PointLeft)) (NbFood (10,0,0,3)))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) PointLeft,Mul (NbFood (7,0,3,1)) TimeLeft),(PointLeft,Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) TimeLeft) (Add (NbEmpty (9,3,1,0)) PointLeft))) (Add (FoodHope (8,3,1,3)) (NbFood (7,0,3,1))))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add TimeLeft (Const 2))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbFood (7,10,3,2)) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (10,0,0,3)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) (NbFood (7,10,3,2)))),Add TimeLeft PointLeft),(Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (FoodHope (8,3,1,3)) PointLeft))) (Mul (NbEmpty (0,0,1,1)) PointLeft)),Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) (If (IsEqual TimeLeft (NbVisited (9,5,1,2))) (NbFood (10,9,1,2)) (If (IsEnemy (0,0,3,3)) PointLeft TimeLeft))) PointLeft))),(NbFood (5,8,3,3),Add TimeLeft TimeLeft),(Mul (Mul (NbFood (7,0,3,1)) (Mul (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1))) TimeLeft)) PointLeft,Mul (NbFood (7,0,3,1)) (Mul TimeLeft Point)),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))),Mul (NbFood (7,0,3,1)) TimeLeft),(Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1)),Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (Add Point (Mul Point (Mul (NbFood (7,0,3,1)) TimeLeft))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),NbEmpty (1,2,3,0)),(NbVisited (10,7,2,1),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Or (IsFood (5,4,0,1)) (IsEnemy (4,4,0,1))) (Sub (NbVisited (2,7,2,0)) Point) Point))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft PointLeft)))))) (Const 5)),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Add (NbEmpty (0,0,1,1)) PointLeft)),Mul (NbEmpty (0,0,1,1)) TimeLeft),(Mul (Mul (NbFood (7,0,3,1)) PointLeft) TimeLeft,Add (NbFood (7,0,3,1)) (NbFood (10,0,0,3))),(Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (0,0,3,2)))) (Const 2) (NbVisited (4,5,0,2))) (Add (NbFood (7,0,3,1)) (Const 2))) (Mul Point (NbFood (0,5,2,3))),PointLeft),(Mul (NbFood (7,0,3,1)) (Mul (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))) (Const 1)),Mul (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3))))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) (Const 1))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Mul (NbFood (7,0,3,1)) Point),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) TimeLeft (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5)),(Point,Mul (NbFood (7,0,3,1)) (FoodHope (5,1,2,3))),(If (Or (And (IsSmaller (NbFood (7,0,3,0)) (NbEmpty (0,0,1,1))) (IsEnemy (1,7,1,0))) (IsSmaller Point TimeLeft)) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) PointLeft,Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) PointLeft) (Mul (NbFood (7,0,3,1)) TimeLeft))),(Add TimeLeft TimeLeft,Add PointLeft PointLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0))) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (Not (IsEnemy (5,5,3,3))) (Add (Add TimeLeft (NbFood (7,10,3,2))) (NbVisited (6,5,1,2))) (NbFood (2,3,2,2))) PointLeft))),(Add (If (Not (IsFood (6,0,1,3))) PointLeft (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),Point),(Add Point Point,Mul (Add TimeLeft (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbVisited (5,3,3,1)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul TimeLeft TimeLeft)) (Const 2))),(PointLeft,Add PointLeft (Add (If (IsSmaller (NbEmpty (6,5,0,0)) PointLeft) (If (IsSmaller (NbEmpty (6,5,0,0)) PointLeft) (Const 2) (Mul (NbFood (7,10,3,2)) (If (IsSmaller Point PointLeft) (Const 2) (Mul PointLeft (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))))))) (Const 4)) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (6,7,0,3)) (Const 1))))),(Mul (NbEmpty (8,10,1,2)) (Add PointLeft (NbFood (7,10,3,2))),Mul TimeLeft (Add (Const 2) (NbFood (7,10,3,2)))),(Mul (NbFood (10,0,0,3)) (NbEmpty (0,0,1,1)),Mul (Mul (NbFood (7,0,3,1)) (Mul (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft)) (Add (FoodHope (8,3,1,3)) PointLeft))) (NbFood (3,9,3,1))),(Add PointLeft (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (If (And (IsFood (1,6,3,1)) (IsFood (2,6,3,0))) (NbFood (0,2,1,2)) (FoodHope (2,3,3,2))))),Add (If (IsEnemy (2,8,1,3)) (Add Point (Mul Point (NbEmpty (1,2,3,0)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Add (If (IsFood (5,6,2,0)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (NbEmpty (2,0,1,0)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)),Mul (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),(Add PointLeft (Add (Mul (If (Or (IsSmaller (NbEmpty (7,9,3,0)) (NbFood (3,6,2,2))) (IsFood (1,10,2,2))) (NbVisited (9,8,1,0)) (Sub (If (IsEqual (NbVisited (6,1,3,3)) (FoodHope (9,0,2,3))) Point TimeLeft) (Sub (Mul (Add (NbEmpty (1,1,0,2)) (Add (NbFood (0,2,2,3)) Point)) (FoodHope (0,5,1,0))) (Const 5)))) (NbEmpty (9,5,0,0))) (NbFood (7,0,3,1))),Add (If (IsEnemy (8,1,1,0)) (If (IsEnemy (8,1,1,0)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (NbFood (7,0,3,1)) PointLeft)),Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (NbEmpty (9,3,1,0)))) PointLeft),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft (NbFood (7,0,3,1)))),Mul PointLeft (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbVisited (10,9,2,2)) PointLeft)),Mul (Mul (NbEmpty (0,0,1,1)) PointLeft) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Add (NbEmpty (1,8,2,3)) (Mul (Add TimeLeft (NbVisited (8,7,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,10,3,2)) TimeLeft)) PointLeft)),Mul (NbFood (7,0,3,1)) TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Add (If (IsEqual TimeLeft (NbFood (2,6,0,0))) PointLeft (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbFood (7,0,3,1))),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (Add PointLeft PointLeft) (NbFood (7,0,3,1))) PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) (Add TimeLeft (Mul (NbFood (7,0,3,1)) Point)))),Mul PointLeft (NbEmpty (10,3,2,1))),(Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3)),Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Add Point (NbFood (6,7,0,3))))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (Add Point (Mul Point (NbEmpty (1,2,3,0)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Add (If (IsFood (5,6,2,0)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (0,0,0,0))) (NbFood (10,0,0,3))),(Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1)),Mul TimeLeft (Mul (Mul (NbEmpty (2,3,2,3)) PointLeft) TimeLeft)),(Mul (NbFood (8,9,0,2)) (NbFood (10,0,0,3)),Add Point (Add (NbFood (7,0,3,1)) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft)))))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (NbEmpty (8,2,2,2)) (FoodHope (2,3,1,1))),Mul (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Mul (Const 2) TimeLeft))) (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft))),(NbFood (9,2,1,0),TimeLeft),(Add (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) PointLeft (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (NbVisited (6,4,1,1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) PointLeft) (Const 5)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Const 2)),Add (NbFood (7,10,3,2)) (NbFood (3,6,0,3))),(Mul (NbFood (9,8,1,2)) (Mul (NbFood (7,0,3,1)) (Mul (Add PointLeft (NbFood (7,10,3,2))) (Add (NbEmpty (0,0,1,1)) PointLeft))),Mul (NbFood (7,0,3,1)) (NbEmpty (2,3,2,3))),(Mul (NbFood (8,9,0,2)) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft)))),Mul (Add TimeLeft (NbEmpty (0,0,1,1))) Point),(Mul (NbFood (7,0,3,1)) TimeLeft,Mul (NbFood (7,0,3,1)) (FoodHope (0,6,1,2))),(Mul (Add TimeLeft Point) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) (Const 1)),Mul (Add TimeLeft (Add (If (IsFood (1,8,1,3)) (If (IsFood (1,8,1,3)) (Const 2) (FoodHope (1,9,1,3))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))) (Mul (Mul (Mul TimeLeft PointLeft) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3)))),(Mul (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))) (NbFood (7,0,3,1)),Mul (Mul PointLeft PointLeft) (Add (NbEmpty (0,0,1,1)) PointLeft)),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Const 2),(If (Or (And (IsSmaller (NbFood (7,0,3,0)) (FoodHope (1,8,0,2))) (IsEnemy (1,7,1,0))) (IsSmaller Point TimeLeft)) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) PointLeft,Mul (Mul (NbFood (7,0,3,1)) PointLeft) (Add (NbEmpty (7,9,3,0)) PointLeft)),(Add TimeLeft PointLeft,Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,3,3,1)) PointLeft)),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (NbFood (7,0,3,1)))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Mul (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))) PointLeft),(Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft PointLeft),Mul (NbEmpty (0,0,1,1)) (Mul TimeLeft PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (FoodHope (8,3,1,3))),PointLeft),(Mul (NbFood (7,0,3,1)) PointLeft,Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)))),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Const 1)),Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (NbEmpty (9,3,1,0)))) PointLeft),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) (Mul TimeLeft (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))))),Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) TimeLeft))),(Add Point (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Add PointLeft (Add (If (IsFood (5,1,0,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (FoodHope (8,3,1,3)) PointLeft))) (Mul (NbEmpty (0,0,1,1)) TimeLeft))))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),PointLeft),(TimeLeft,Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (If (IsSmaller (Const 1) (Add TimeLeft (NbFood (7,10,3,2)))) (Const 2) (NbFood (7,0,3,1)))) PointLeft),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Mul (NbEmpty (0,0,1,1)) TimeLeft))),(Mul (NbFood (7,0,3,1)) (Mul (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (Add (If (IsEnemy (2,8,1,3)) (If (IsFood (7,8,1,0)) (Mul (NbVisited (9,1,0,2)) Point) (NbEmpty (9,4,0,2))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1))))) (Const 1)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (Mul (NbFood (7,0,3,1)) (Mul Point (NbEmpty (1,8,2,3)))) (NbEmpty (1,8,2,3))))),(Mul (NbFood (7,0,3,1)) (Mul (Mul (FoodHope (2,1,0,2)) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) PointLeft))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1))))) (Const 1)),Mul (Add (FoodHope (4,4,2,2)) (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))) (Add (If (IsEnemy (2,8,1,3)) (If (IsFood (7,8,1,0)) (Mul (NbVisited (9,1,0,2)) Point) (NbEmpty (9,4,0,2))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1))))),(Mul (NbFood (7,0,3,1)) (NbVisited (8,9,0,1)),Mul (Add TimeLeft (Mul (Mul TimeLeft (Add (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (1,5,2,1)) (NbEmpty (1,8,2,3)))) (NbEmpty (1,8,2,3)))) Point)) (NbEmpty (10,3,2,1))),(Mul (Add (NbFood (5,2,0,1)) (NbFood (7,10,3,2))) (Mul (Mul PointLeft PointLeft) PointLeft),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,0,3,1)) PointLeft))),(Mul (NbFood (7,0,3,1)) (Mul (Add (NbEmpty (0,0,1,1)) PointLeft) (Add Point (Mul (NbFood (7,0,3,1)) Point))),Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) PointLeft)),(Mul Point (NbFood (7,0,3,1)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (If (IsEnemy (0,8,0,1)) (NbEmpty (1,6,1,1)) (Mul (Add TimeLeft (Const 3)) Point)) PointLeft))),(Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (NbVisited (3,7,3,1)) (NbFood (10,0,0,3)))),Add (Mul (NbVisited (9,10,1,2)) (NbFood (0,7,2,3))) (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0)))),(Add PointLeft (Add (If (Not (IsEnemy (3,10,2,3))) (FoodHope (4,0,1,1)) (Mul TimeLeft (NbVisited (4,1,2,2)))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),Mul (NbFood (7,0,3,1)) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) Point)) PointLeft)) (Add (If (IsEnemy (0,8,0,1)) (Add (NbVisited (10,1,3,3)) (If (IsEnemy (1,4,3,0)) (If (Not (IsEnemy (1,4,3,0))) (Const 2) (Mul (NbFood (7,0,3,1)) PointLeft)) (NbFood (3,0,1,0)))) (Mul (Add TimeLeft (Const 3)) Point)) PointLeft))),(Add PointLeft (Add (Mul Point (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) PointLeft)) (NbFood (10,0,0,3))),Mul (NbFood (10,0,0,3)) (Mul TimeLeft (If (Not (And (IsFood (9,7,2,3)) (IsFood (9,10,1,1)))) PointLeft (NbEmpty (2,3,2,3))))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul PointLeft (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbVisited (6,2,1,1))) (NbFood (10,0,0,3)))),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1)))),(Add TimeLeft (Add (If (IsFood (10,0,0,0)) (If (Not (And (IsFood (10,0,0,0)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Mul (NbFood (7,0,3,1)) (NbVisited (7,7,0,3))),(Mul (NbFood (10,0,0,3)) (Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (If (Not (IsEqual PointLeft (Const 0))) (Mul PointLeft (NbFood (7,0,3,1))) (NbEmpty (2,3,2,3)))),Mul PointLeft (Mul TimeLeft (FoodHope (8,3,1,3)))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (Const 1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))))) PointLeft) (NbFood (2,3,2,2)),NbFood (7,10,3,2)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) Point (NbFood (2,3,2,2))) (NbFood (7,0,3,1)))),Mul (NbFood (7,0,3,1)) (Mul PointLeft (NbFood (7,10,3,2)))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (2,3,1,1))),Mul (NbFood (7,0,3,1)) TimeLeft),(Mul (NbFood (7,0,3,1)) (Mul (Mul TimeLeft (Add PointLeft (Add (If (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0))) (If (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0))) (Const 2) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (Add (If (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0))) (If (IsFood (7,8,1,0)) (Mul (NbVisited (9,1,0,2)) Point) (NbEmpty (9,4,0,2))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1))))) (Const 1)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (IsEnemy (2,8,1,3))) (Const 2) (Mul (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (8,3,1,3)))) TimeLeft) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (Mul (NbFood (7,0,3,1)) (FoodHope (0,1,3,3))) (NbEmpty (1,8,2,3)))),Mul Point (NbEmpty (1,8,2,3))),(Add Point (NbFood (7,0,3,1)),Mul (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) PointLeft) (Mul (Add (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3))) (Add (NbFood (5,5,3,2)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 0)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Add PointLeft (Add (If (Or (IsEqual (NbEmpty (5,5,3,3)) (If (Or (IsEnemy (10,4,0,3)) (IsSmaller PointLeft PointLeft)) (Const 0) (Mul (FoodHope (8,3,1,3)) Point))) (Or (Or (IsEqual TimeLeft (Add (NbEmpty (9,7,3,1)) (Add TimeLeft (Const 4)))) (Or (IsSmaller (Add (NbFood (8,6,0,2)) (FoodHope (8,7,0,3))) (Const 1)) (IsEqual (FoodHope (10,2,2,3)) Point))) (Not (IsFood (0,0,3,2))))) (If (IsSmaller (Add Point (Sub Point (NbEmpty (9,9,1,0)))) PointLeft) (Const 0) (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbEmpty (10,7,1,1)) (Const 3)) (NbVisited (0,5,0,0))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbFood (7,0,3,1))),Mul (Add (Mul TimeLeft (NbFood (10,7,0,3))) PointLeft) (NbFood (7,0,3,1))),(Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))),Mul (Mul (NbVisited (10,9,2,2)) PointLeft) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbFood (7,0,3,1)) (NbEmpty (0,0,1,1)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))))]