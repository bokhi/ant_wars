[(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft PointLeft)),If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) (NbFood (7,10,1,2))) (NbEmpty (2,3,2,3))),(Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul (NbVisited (10,9,2,2)) PointLeft),PointLeft),(NbFood (3,0,1,0),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) Point (NbFood (2,3,2,2))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1)))),Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3)))),(Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (FoodHope (8,2,3,1))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (Add (Add (Const 5) (NbFood (7,10,3,2))) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))) (NbFood (7,0,3,1)))),Mul (NbFood (7,0,3,1)) TimeLeft),(Add (Add (NbFood (3,9,3,1)) PointLeft) (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),If (IsEnemy (2,8,1,3)) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbFood (2,1,2,1))),(Mul PointLeft (Mul (Mul (NbFood (7,0,3,1)) (Const 1)) (NbVisited (3,10,3,3))),If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) (Add TimeLeft (NbFood (7,10,3,2)))) (NbEmpty (2,3,2,3))),(NbEmpty (10,0,0,3),Point),(Const 10,Add (If (IsEqual Point (NbFood (2,6,0,0))) (If (IsEqual Point (NbFood (2,6,0,0))) (Const 2) (Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Add (NbEmpty (0,0,1,1)) PointLeft)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(NbFood (9,1,3,1),Mul (NbFood (7,0,3,1)) (Mul PointLeft Point)),(Const 2,Mul (Add TimeLeft Point) TimeLeft),(NbEmpty (7,3,3,3),Mul PointLeft (Mul (Mul (NbFood (7,0,3,1)) (Add TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))) (NbVisited (3,10,3,3)))),(Add (Add (Add TimeLeft PointLeft) (NbFood (7,10,3,2))) TimeLeft,Mul PointLeft (NbFood (8,0,3,0))),(NbVisited (2,6,3,3),PointLeft),(Add TimeLeft (NbFood (7,10,3,2)),Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft PointLeft) (FoodHope (0,3,1,3))) Point)) (Sub TimeLeft (Sub (Add (FoodHope (0,2,0,2)) (NbFood (8,8,0,0))) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (8,4,0,3)) (FoodHope (9,6,3,2)))))) (Const 4))),(Point,Add (Add PointLeft (NbFood (7,10,3,2))) (NbFood (7,0,3,1))),(Mul (FoodHope (4,6,3,1)) (NbVisited (2,0,0,3)),Point),(Add PointLeft (Add (Sub PointLeft (NbEmpty (2,3,2,3))) (NbFood (8,0,3,0))),Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) PointLeft)),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (Mul (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) PointLeft)),NbFood (7,0,3,1)),(Mul (Const 4) PointLeft,Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1))))),(Add PointLeft (FoodHope (9,5,3,3)),Mul (Mul (NbEmpty (7,1,2,3)) (Const 5)) (Mul TimeLeft (NbVisited (5,0,0,0)))),(NbFood (7,10,3,2),Mul (NbFood (10,0,0,3)) (Mul TimeLeft (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (Mul (NbFood (7,0,3,1)) PointLeft)) PointLeft) (NbEmpty (2,3,2,3))))),(NbFood (2,4,1,2),Point),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (NbEmpty (2,3,2,3)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbFood (7,0,3,1))))),Const 1),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (NbEmpty (0,0,1,1)) PointLeft)),Mul (Add PointLeft (NbFood (7,10,3,2))) (Mul PointLeft PointLeft)),(If (Not (And (IsEnemy (2,7,3,3)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2)),Add (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (If (Not (And (IsSmaller TimeLeft (NbEmpty (2,0,0,2))) (Or (IsEqual TimeLeft (NbFood (0,5,0,2))) (Not (IsFood (1,6,0,2)))))) (Sub (Mul (Mul (Mul PointLeft (NbFood (7,6,3,2))) (Add (NbEmpty (5,6,1,1)) (NbVisited (5,1,3,1)))) (Add (Sub (Const 3) (NbFood (5,4,3,0))) Point)) (Sub (Mul (NbFood (3,1,0,0)) (NbVisited (5,5,2,3))) (NbFood (9,10,1,0)))) (Add (If (Or (Or (IsFood (3,6,1,3)) (IsEnemy (6,6,0,1))) (Or (IsFood (0,8,1,1)) (IsEnemy (1,6,1,3)))) (NbEmpty (1,3,1,3)) Point) (NbVisited (5,3,3,0))))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Mul Point (NbVisited (2,0,0,3))) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul Point (Mul (NbFood (7,0,3,1)) TimeLeft)) PointLeft)),(NbVisited (9,10,3,3),FoodHope (2,2,0,1)),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Add (NbEmpty (0,0,1,1)) PointLeft) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Const 2))),(PointLeft,Add PointLeft (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Const 1)))),(Add TimeLeft (FoodHope (1,9,2,2)),Mul (NbFood (7,10,3,2)) (Mul PointLeft (NbEmpty (4,2,1,1)))),(Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft PointLeft) (FoodHope (0,3,1,3))) Point)) (Sub TimeLeft (Sub (Add (FoodHope (0,2,0,2)) (NbFood (8,8,0,0))) (Sub (Add PointLeft (Const 2)) (Add (NbFood (8,4,0,3)) (FoodHope (9,6,3,2)))))) (Const 4)),If (And (IsFood (0,3,2,0)) (And (IsFood (1,2,0,3)) (IsEnemy (1,1,3,1)))) (Add (NbFood (7,0,3,1)) PointLeft) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbVisited (4,5,0,2))) (Sub (Const 5) PointLeft))),(Add TimeLeft (NbFood (7,10,3,2)),If (Not (And (IsFood (4,6,1,1)) (IsFood (3,10,0,0)))) (Add (NbFood (7,0,3,1)) PointLeft) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2)))),(Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft PointLeft) (FoodHope (0,3,1,3))) Point)) (NbFood (7,10,1,3)) (Const 4)),Mul (Sub TimeLeft (Sub (Add (FoodHope (0,2,0,2)) (NbFood (8,8,0,0))) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (8,4,0,3)) (FoodHope (9,6,3,2)))))) (NbVisited (10,5,1,1))),(Add TimeLeft Point,Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (NbEmpty (0,7,2,2)) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))),(Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft PointLeft) (FoodHope (0,3,1,3))) Point)) (Sub TimeLeft (Sub (Add (FoodHope (0,2,0,2)) (NbFood (8,8,0,0))) (Add PointLeft (Mul Point (NbFood (8,3,0,1)))))) (Const 4)),Sub (Sub (Const 5) PointLeft) (Add (NbFood (8,4,0,3)) (FoodHope (9,6,3,2)))),(Mul (NbFood (7,0,3,1)) PointLeft,If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) (NbEmpty (8,8,1,1))) (NbEmpty (2,3,2,3))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) (FoodHope (8,2,3,1))) (NbFood (2,3,2,2)),If (Not (And (IsEnemy (7,6,2,0)) (IsEnemy (7,8,3,2)))) (NbFood (3,2,2,3)) PointLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1))))),TimeLeft),(If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Add (Mul Point (NbVisited (2,0,0,3))) (NbFood (10,0,0,3))) (Mul (Const 3) (NbFood (7,0,3,1)))))) (NbFood (3,0,1,0)),Mul (NbFood (7,0,3,1)) (Add PointLeft (Const 2))),(NbFood (7,0,3,1),Mul (Add TimeLeft (NbFood (7,10,3,2))) (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) (NbFood (9,0,1,0))) (FoodHope (4,6,3,1)))),(NbFood (7,0,3,1),Mul (Mul (NbVisited (0,6,2,0)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3))),(Mul TimeLeft PointLeft,Add (NbFood (10,0,0,3)) (Add (Sub (Mul (NbEmpty (6,10,0,1)) (If (Or (IsEnemy (3,2,0,2)) (IsSmaller TimeLeft TimeLeft)) (Add TimeLeft (Const 3)) TimeLeft)) (NbVisited (7,1,3,2))) (NbFood (7,0,3,1)))),(PointLeft,Const 1),(NbEmpty (0,0,1,1),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (Mul (Const 2) Point) TimeLeft)) PointLeft)),(PointLeft,Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (10,0,0,3)) (Mul (NbFood (10,0,0,3)) (Mul Point (NbFood (9,1,3,1))))) (Add (NbFood (7,0,3,1)) PointLeft))),(Add PointLeft (Add (Sub PointLeft (NbEmpty (2,3,2,3))) (Mul PointLeft (Add (FoodHope (8,3,1,3)) PointLeft))),Mul (NbFood (7,0,3,1)) (NbFood (8,0,3,0))),(Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)),Add PointLeft (Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul TimeLeft (NbEmpty (0,0,1,1)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Add TimeLeft (FoodHope (7,4,3,2)),Mul TimeLeft (NbFood (8,0,3,0))),(Add (Add (Sub PointLeft (NbEmpty (2,3,2,3))) (NbFood (7,10,3,2))) (Add TimeLeft (NbFood (7,10,3,2))),Mul PointLeft (Mul (Mul Point (Mul (NbVisited (8,10,0,2)) (NbFood (7,0,3,1)))) PointLeft)),(Mul (NbFood (0,5,2,3)) (Mul (Sub PointLeft (NbEmpty (2,3,2,3))) PointLeft),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (Add TimeLeft (NbFood (7,10,3,2)))) (Const 2) (NbFood (7,0,3,1))))),(NbVisited (7,7,0,3),Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (Add (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbFood (8,0,3,0))) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Add PointLeft (Add TimeLeft (NbFood (7,0,3,1)))),(Add PointLeft (Mul Point (NbFood (8,3,0,1))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (10,0,0,3)) (If (IsEnemy (7,3,0,2)) (Const 2) (NbFood (7,0,3,1)))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (NbFood (7,0,3,1)))) (NbFood (3,0,1,0))) TimeLeft)),(Add PointLeft (Add (If (IsEnemy (7,5,0,1)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) PointLeft),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (NbFood (7,10,3,2)))) PointLeft)),Add TimeLeft TimeLeft),(Mul (FoodHope (0,3,1,3)) PointLeft,Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft PointLeft) (Add TimeLeft (NbFood (7,10,3,2)))) Point)) (Sub TimeLeft (Sub (Add (FoodHope (0,2,0,2)) (NbFood (8,8,0,0))) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (8,4,0,3)) (FoodHope (9,6,3,2)))))) (Const 4))),(If (Not (And (IsFood (4,6,1,1)) (IsFood (3,10,0,0)))) (Add (NbFood (7,0,3,1)) PointLeft) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbFood (7,0,3,1))) (Add PointLeft (Const 2))),Add (Add (NbFood (7,10,3,2)) PointLeft) (NbVisited (4,5,0,2))),(Mul (NbFood (7,10,1,3)) (Const 2),If (IsEqual Point (NbFood (2,6,0,0))) (If (IsEqual Point (NbFood (2,6,0,0))) (NbVisited (10,5,1,1)) (Const 10)) (NbFood (3,0,1,0))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),Add PointLeft (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,0,3,1)) PointLeft)),If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) Point (NbFood (2,3,2,2))) (NbFood (7,0,3,1)))),NbFood (2,6,0,2)),(Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(If (Not (And (IsFood (4,6,1,1)) (IsFood (3,10,0,0)))) (Add (NbFood (7,0,3,1)) PointLeft) (Add (FoodHope (3,7,1,1)) (Add PointLeft (Const 2))),Mul (Add TimeLeft (Add (If (IsFood (1,8,1,3)) (If (IsFood (1,8,1,3)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (1,8,1,3)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3)))),(Mul (NbFood (7,10,1,3)) (Const 3),FoodHope (3,2,2,2)),(Add TimeLeft (Add (Const 2) (NbFood (7,10,3,2))),Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (2,5,1,2)) (Const 1))),(Mul (NbFood (7,0,3,1)) TimeLeft,Add (If (Not (And (IsEnemy (0,2,0,3)) (IsEnemy (0,1,3,2)))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (Mul TimeLeft (Mul Point (NbFood (8,3,0,1))))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add TimeLeft (NbFood (10,0,0,3)))),Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))),(Add PointLeft (Mul Point (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft)),NbFood (8,3,0,1)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Add PointLeft (Mul Point (NbFood (8,3,0,1)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft Point)),Mul (NbFood (7,0,3,1)) (Mul (Const 4) (Add (NbEmpty (0,0,1,1)) PointLeft))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (Const 2)) (NbFood (7,0,3,1))),Add PointLeft (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)))),(FoodHope (3,1,2,1),If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (NbFood (3,0,1,0)))))) (NbFood (3,0,1,0))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (NbEmpty (2,3,2,3)) PointLeft),Add PointLeft (Add (Sub PointLeft (Mul Point (Mul (NbFood (7,0,3,1)) TimeLeft))) (NbFood (8,0,3,0)))),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3))),Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),(Add PointLeft (Add (If (IsSmaller Point (NbFood (0,5,2,3))) (If (IsSmaller Point (NbFood (0,5,2,3))) (Const 2) (Mul TimeLeft TimeLeft)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (NbFood (7,0,3,1))))),(If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul TimeLeft (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0)),Add PointLeft (Add (FoodHope (8,3,1,3)) (NbVisited (6,10,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add (NbEmpty (0,0,1,1)) PointLeft)),Add PointLeft PointLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Const 1))),(Add PointLeft (Add (If (IsEnemy (2,6,0,2)) (If (Not (And (IsEnemy (2,6,0,2)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul Point (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Mul (NbFood (7,0,3,1)) (Mul (If (IsSmaller Point (NbFood (0,5,2,3))) (Const 2) (NbEmpty (6,9,1,1))) (Mul TimeLeft (FoodHope (3,1,2,1))))),(NbFood (7,0,3,1),Mul (Const 4) (NbVisited (3,5,0,2))),(If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2)),NbFood (0,8,3,1)),(NbEmpty (4,10,0,0),Add PointLeft (Add (If (IsFood (1,6,1,3)) (If (IsFood (1,6,1,3)) (Const 2) (Mul (Const 2) (If (IsFood (1,6,1,3)) (Const 2) (Mul (NbVisited (0,6,2,0)) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2))) (NbFood (7,0,3,1)))),Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point))),(Const 5,Const 2),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) PointLeft),Add PointLeft (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)))),(Mul (Sub (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Const 2)) PointLeft)) (FoodHope (4,5,1,1))) TimeLeft,If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Mul (Const 1) (FoodHope (0,3,1,3))) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))),(If (IsEnemy (9,7,0,0)) PointLeft (Add (Sub (NbEmpty (4,6,1,1)) (NbVisited (6,3,1,1))) TimeLeft),Mul (Add (Add (NbFood (2,1,2,3)) TimeLeft) TimeLeft) (Mul (Mul (NbFood (7,0,3,1)) (Add TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))) (NbVisited (3,10,3,3)))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Mul PointLeft PointLeft) (NbEmpty (2,3,2,3)))),NbEmpty (7,2,0,3)),(Add (NbFood (7,10,3,2)) (NbFood (8,0,3,0)),Add PointLeft (Add (If (IsEnemy (8,3,2,0)) (If (Not (IsEnemy (8,3,2,0))) (Const 2) (Mul TimeLeft (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) PointLeft))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1))))),(Sub (Add Point PointLeft) Point,Add (Add (Sub PointLeft (NbEmpty (2,3,2,3))) (NbFood (7,10,3,2))) PointLeft),(If (Not (And (IsFood (4,6,1,1)) (IsFood (3,10,0,0)))) (Add (NbFood (7,0,3,1)) PointLeft) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))),Mul (NbFood (7,10,1,3)) (NbVisited (10,5,1,1))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),NbFood (10,0,0,3)),(NbVisited (0,5,2,2),Add PointLeft (Add (If (IsEnemy (7,5,0,1)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (0,1,1,3)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft PointLeft)),Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Const 2)))) (Const 5),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Add TimeLeft (NbFood (7,10,3,2))) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(If (IsEqual (Add (FoodHope (9,5,2,3)) Point) (Mul (NbEmpty (1,6,2,3)) PointLeft)) (Add (NbFood (7,0,3,1)) PointLeft) (Add (If (Not (IsEqual (Add (FoodHope (9,5,2,3)) Point) (Mul (NbEmpty (1,6,2,3)) PointLeft))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))),Add (If (IsEqual Point (NbFood (2,6,0,0))) (If (IsEqual Point TimeLeft) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (If (Not (And (Or (IsEnemy (2,10,3,0)) (IsEnemy (7,6,3,2))) (IsFood (3,8,1,3)))) (NbFood (5,2,0,1)) (FoodHope (0,6,1,2)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (FoodHope (8,3,1,3))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (Const 1))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Add (NbEmpty (0,0,1,1)) PointLeft,Mul (NbFood (7,0,3,1)) (Mul PointLeft (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1))))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Const 1)),If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Const 1) (NbEmpty (2,3,2,3))),(Mul (NbFood (7,0,3,1)) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (Const 2)) (NbFood (7,0,3,1)))),Mul TimeLeft (NbEmpty (2,3,2,3))),(NbFood (3,0,1,0),Const 1),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Sub (Mul (Const 2) Point) (NbEmpty (2,3,2,3))) PointLeft),Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (NbFood (10,0,0,3)) PointLeft))),(Add PointLeft (NbFood (8,0,3,0)),Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)),(Mul (Add (Const 3) (NbFood (7,10,3,2))) (NbFood (7,0,3,1)),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul TimeLeft (Add TimeLeft (Add (If (IsFood (2,1,1,1)) (FoodHope (2,6,2,1)) (NbEmpty (4,4,3,1))) (Add (NbVisited (9,3,1,2)) (Const 4))))) (NbVisited (3,10,3,3)))),(Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Const 1))) (NbVisited (3,10,3,3)),TimeLeft),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),Mul (NbFood (10,0,0,3)) (FoodHope (3,1,2,1))),(PointLeft,NbFood (10,0,0,3)),(Mul (NbFood (10,0,0,3)) (Add TimeLeft (NbFood (7,10,3,2))),Const 1),(Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (Sub (Mul TimeLeft PointLeft) (FoodHope (0,3,1,3))) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point)),Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (NbVisited (9,1,1,3))) Point)) (Sub TimeLeft (Sub (Add (FoodHope (0,2,0,2)) (NbFood (8,8,0,0))) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (8,4,0,3)) (FoodHope (9,6,3,2)))))) (Const 4))),(If (Not (And (IsFood (4,6,1,1)) (IsFood (3,10,0,0)))) (Add (NbFood (7,0,3,1)) PointLeft) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Point,Add (If (IsEqual (Mul (NbFood (7,10,1,3)) (NbVisited (10,5,1,1))) (NbFood (2,6,0,0))) (If (IsEqual Point (NbFood (2,6,0,0))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,10,3,2)) PointLeft)),Add (Add (NbEmpty (0,0,1,1)) PointLeft) (NbFood (7,0,3,1))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2)),If (IsEqual Point (NbFood (2,6,0,0))) (If (IsEqual Point (NbFood (2,6,0,0))) (Const 2) (Const 10)) (NbFood (3,0,1,0))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) Point,Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbEmpty (0,0,1,1))) (NbFood (10,0,0,3)))),(If (IsEqual Point (Sub (Sub (FoodHope (3,9,3,0)) (NbEmpty (1,9,2,2))) (NbEmpty (1,6,0,0)))) (Const 1) (NbEmpty (2,3,2,3)),If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbFood (3,0,1,0)) PointLeft) (FoodHope (4,6,3,1))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (NbFood (7,0,3,1)))) PointLeft),Mul TimeLeft (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),(Mul (NbFood (7,0,3,1)) (Const 1),If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Mul PointLeft (Add (NbFood (7,0,3,1)) PointLeft)) (NbEmpty (2,3,2,3))),(Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Const 5) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbFood (5,3,3,3)) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1))))),(NbFood (10,0,0,3),Const 5),(Mul (FoodHope (1,9,2,2)) (Mul PointLeft (NbEmpty (4,2,1,1))),If (And (IsFood (0,3,2,0)) (And (IsFood (1,2,0,3)) (IsEnemy (1,1,3,1)))) (Add (NbFood (7,0,3,1)) PointLeft) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2)))),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3))),If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Const 1) (NbEmpty (2,3,2,3))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (7,10,3,2)),Mul (Add TimeLeft (NbFood (2,3,2,2))) (Mul (Mul Point (Mul (NbFood (7,0,3,1)) TimeLeft)) PointLeft)),(Mul (NbVisited (10,6,2,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10)),Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1)))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (FoodHope (8,3,1,3)) PointLeft))),(Add PointLeft (Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul TimeLeft (NbEmpty (0,0,1,1)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3)))),(Mul (NbFood (7,0,3,1)) TimeLeft,Mul TimeLeft (Mul TimeLeft (If (IsEnemy (7,3,0,2)) (Const 2) (NbFood (7,0,3,1))))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (NbFood (7,0,3,1)) (NbVisited (3,10,3,3))),Mul (NbFood (7,0,3,1)) (Add (Mul (NbFood (7,0,3,1)) (NbVisited (7,5,0,1))) (NbFood (7,10,3,2)))),(NbVisited (2,0,0,3),Mul (FoodHope (4,6,3,1)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul PointLeft PointLeft))),(Add (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) Point,Add (If (IsEnemy (2,8,1,3)) (NbVisited (10,9,2,2)) PointLeft) (NbFood (10,0,0,3))),(NbVisited (4,8,2,0),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (Add (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul TimeLeft (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) PointLeft))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))) (NbFood (7,0,3,1))))),(Mul (Sub (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (10,0,0,3)) (FoodHope (0,3,1,3)))) PointLeft)) (FoodHope (4,5,1,1))) TimeLeft,Add (Add (NbFood (3,9,3,1)) PointLeft) (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (3,8,0,1)) (Const 1))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Add PointLeft (Add (If (IsEnemy (7,5,0,1)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,9,2,2)) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Const 2) (NbFood (2,3,2,2))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft)),If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Const 1) (NbEmpty (2,3,2,3))),(Mul TimeLeft (Mul TimeLeft (If (IsFood (6,9,1,0)) (Const 2) (NbFood (7,0,3,1)))),Mul TimeLeft (Add (Sub (Mul (If (IsEnemy (0,4,0,3)) Point PointLeft) Point) TimeLeft) TimeLeft)),(Add (Const 1) (NbFood (7,10,3,2)),Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Add (FoodHope (7,6,1,1)) (NbFood (7,10,3,2))))),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2))) (NbFood (7,0,3,1)))),Mul (Add TimeLeft (NbFood (7,10,3,2))) TimeLeft),(NbFood (7,0,3,1),Mul (Mul (Const 2) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3))),(Mul Point (Mul (NbFood (7,0,3,1)) TimeLeft),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) PointLeft) PointLeft)),(Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3)),Mul (NbFood (7,0,3,1)) (Mul (Mul PointLeft (Const 5)) (Mul TimeLeft (NbVisited (5,0,0,0))))),(NbFood (4,6,0,2),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) PointLeft)) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1)))))),(Const 3,If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Mul (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (7,0,3,1)))))) (NbFood (3,0,1,0))),(NbFood (10,0,0,3),Mul TimeLeft (NbVisited (2,0,0,3))),(Mul (NbFood (10,0,0,2)) (Const 1),Add TimeLeft (NbEmpty (3,9,3,0))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) PointLeft),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Const 2),Add (If (IsEqual Point (NbFood (2,6,0,0))) (If (IsEqual Point (NbFood (2,6,0,0))) (Mul PointLeft (Add (NbFood (7,0,3,1)) PointLeft)) (Const 10)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Add (If (IsEqual Point (NbFood (2,6,0,0))) PointLeft (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),NbEmpty (7,9,0,0)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Add PointLeft (Mul Point (NbFood (8,3,0,1)))),(NbFood (4,8,1,2),Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (9,3,1,0)) PointLeft)),NbEmpty (2,8,1,1)),(Mul (NbFood (7,0,3,1)) TimeLeft,Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbVisited (7,5,0,1))) (NbVisited (3,10,3,3)))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))),PointLeft),(NbEmpty (2,7,0,0),Point),(Const 0,NbFood (6,0,1,3)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) (FoodHope (9,4,2,2)))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller (Const 1) PointLeft) (Const 2) (NbFood (7,0,3,1))))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2)),Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3)))),(Add PointLeft (Add (If (IsEnemy (8,3,2,0)) (If (Not (IsEnemy (8,3,2,0))) (Const 2) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) PointLeft))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),Add TimeLeft (NbFood (7,10,3,2))),(NbFood (2,7,3,1),Add (Add (Sub (Add Point PointLeft) Point) (NbFood (7,10,3,2))) TimeLeft),(Add (Add (NbVisited (4,5,0,2)) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft)) (NbFood (7,0,3,1)),If (Not (And (IsFood (4,6,1,1)) (IsFood (3,10,0,0)))) (Add (NbFood (7,0,3,1)) PointLeft) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbFood (7,10,3,2))) (Add PointLeft (Const 2)))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) PointLeft (NbFood (2,3,2,2)),Mul (NbFood (7,10,1,3)) (NbVisited (10,5,1,1))),(Add TimeLeft (Add (NbFood (3,0,1,0)) (NbFood (7,10,3,2))),Add PointLeft (Add (If (IsEnemy (7,5,0,1)) (If (IsEnemy (5,5,3,3)) (Const 2) (FoodHope (1,3,3,3))) TimeLeft) (NbFood (10,0,0,3)))),(Add (Add (NbVisited (3,10,3,3)) (NbFood (7,10,3,2))) PointLeft,Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) TimeLeft)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (FoodHope (8,3,1,3)) PointLeft)),Add PointLeft (Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul TimeLeft (NbEmpty (0,0,1,1)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Add PointLeft (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))),(Mul (Add TimeLeft (Add (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3))),Mul (NbFood (7,0,3,1)) PointLeft),(Point,Point),(Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),Add PointLeft (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul PointLeft PointLeft))),(Add (Mul (NbFood (7,0,3,1)) (NbFood (2,6,0,0))) (Add (NbEmpty (9,2,3,0)) (NbFood (10,0,0,3))),Add (If (IsEqual Point (Mul (NbFood (7,0,3,1)) TimeLeft)) (If (IsEqual Point (NbFood (2,6,0,0))) (FoodHope (6,0,1,2)) (Const 10)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (NbFood (10,0,0,3)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (Const 2) TimeLeft))),(NbVisited (10,7,0,0),Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (Const 1) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(PointLeft,Mul (NbFood (7,0,3,1)) (Mul (Add PointLeft (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)))) (Const 1))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) PointLeft),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,0,3,1)) PointLeft))),(Add (Mul (NbFood (7,0,3,1)) TimeLeft) PointLeft,Add TimeLeft (NbFood (7,10,3,2))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (NbVisited (10,9,2,2)) (NbFood (2,3,2,2)),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbVisited (7,5,0,1))) (NbVisited (3,10,3,3)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft)),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2))),(Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add (NbEmpty (0,0,1,1)) PointLeft)),Add PointLeft PointLeft),(Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (NbVisited (6,3,1,1))) (Mul TimeLeft (FoodHope (5,2,2,0)))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point)),If (IsEnemy (9,7,0,0)) PointLeft (Add (Sub (NbEmpty (4,6,1,1)) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (NbEmpty (4,4,0,1)))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbEmpty (2,3,2,3)),Mul (Add (Add (NbFood (2,1,2,3)) TimeLeft) TimeLeft) (Mul (Mul (NbFood (7,0,3,1)) (Add TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))) (NbVisited (3,10,3,3)))),(Add (NbFood (8,0,3,0)) (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),Add (Add (NbEmpty (0,0,1,1)) (NbVisited (8,4,3,2))) PointLeft),(If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (8,0,3,0)) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0)),Const 3),(Add TimeLeft (Add TimeLeft (NbFood (7,10,3,2))),Add (Add (NbFood (7,10,3,2)) (Add (Add (NbVisited (5,6,0,3)) (NbFood (7,10,3,2))) PointLeft)) (NbFood (7,0,3,1))),(Mul (Add TimeLeft (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) PointLeft (NbFood (2,3,2,2)))) (Mul (Mul (NbFood (7,0,3,1)) (NbFood (1,3,0,1))) (NbVisited (3,10,3,3))),NbFood (7,10,3,2)),(Add (NbFood (7,10,3,2)) PointLeft,Add (Add (Add (NbFood (7,10,3,2)) PointLeft) (NbEmpty (7,9,0,2))) (NbEmpty (7,9,0,2))),(NbEmpty (7,8,2,0),NbEmpty (7,8,2,0)),(NbFood (7,0,3,1),Add PointLeft (Add TimeLeft (Add TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Add PointLeft (Add (Sub (Mul (NbEmpty (6,10,0,1)) (If (Or (IsEnemy (3,2,0,2)) (IsSmaller TimeLeft TimeLeft)) (Add TimeLeft (Const 3)) TimeLeft)) (NbVisited (7,1,3,2))) (NbFood (7,0,3,1))),Mul (NbFood (7,0,3,1)) (Mul PointLeft PointLeft)),(TimeLeft,Add PointLeft (Add (If (IsEnemy (9,0,3,0)) (If (Not (And (IsEnemy (9,0,3,0)) (IsEnemy (8,3,2,0)))) (Const 0) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (Const 2) (NbFood (7,0,3,1)))),Add (Add (NbFood (7,10,3,2)) (Add (Add TimeLeft (NbFood (7,10,3,2))) TimeLeft)) (NbFood (7,0,3,1))),(Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) PointLeft (NbFood (2,3,2,2))),(Mul TimeLeft (Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) Point) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Point),(Const 2,Mul (NbFood (7,0,3,1)) (Const 1)),(Mul (Add (If (IsEnemy (7,5,0,1)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,9,2,2)) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))) TimeLeft,Add PointLeft (NbFood (7,0,3,1))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbVisited (7,5,0,1))) (NbVisited (3,10,3,3))),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Const 2) (NbFood (2,3,2,2))),(Mul (NbFood (7,0,3,1)) (Mul Point (FoodHope (8,3,1,3))),Add PointLeft (Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul (NbFood (7,0,3,1)) (Mul PointLeft PointLeft))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul TimeLeft (Mul (NbFood (7,0,3,1)) (Const 2)),Mul (Const 2) (FoodHope (3,1,2,1))),(Mul (Mul (NbFood (7,0,3,1)) TimeLeft) (Mul PointLeft PointLeft),Const 5),(Add PointLeft (Add (If (IsFood (3,0,3,1)) (If (Not (And (IsFood (3,0,3,1)) (IsEnemy (8,3,2,0)))) (Const 0) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbVisited (7,5,0,1))) (NbEmpty (10,8,0,1)))),(Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add (NbEmpty (0,0,1,1)) PointLeft)),Add PointLeft PointLeft),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbFood (2,7,3,3)) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),NbEmpty (0,4,0,3)),(Mul TimeLeft (Mul TimeLeft (If (IsEnemy (0,1,3,2)) (Const 2) (NbFood (7,0,3,1)))),Add (If (Not (And (IsEnemy (7,6,2,0)) (IsEnemy (7,3,0,2)))) (NbFood (0,5,2,3)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Mul (Const 2) (Add (NbFood (7,0,3,1)) (NbFood (7,10,3,2))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) TimeLeft)) (NbFood (7,0,3,1)) (NbFood (7,0,3,1))))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (Const 2) (NbFood (1,9,2,3)))),Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (If (And (IsEqual TimeLeft (If (Not (IsFood (3,1,1,2))) PointLeft (Add PointLeft (FoodHope (6,0,3,1))))) (Not (IsEqual (NbFood (1,6,0,3)) (FoodHope (7,4,3,3))))) Point PointLeft)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1))))),If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (NbFood (7,0,3,1)))))) (NbFood (3,0,1,0))),(If (Not (And (IsFood (4,6,1,1)) (IsFood (3,10,0,0)))) (Add (NbFood (7,0,3,1)) PointLeft) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))),Mul (NbFood (7,10,1,3)) (NbVisited (10,5,1,1))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (If (Not (And (Or (IsEnemy (2,10,3,0)) (IsEnemy (7,6,3,2))) (IsFood (3,8,1,3)))) (NbFood (5,2,0,1)) (FoodHope (0,6,1,2))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul PointLeft PointLeft),If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbVisited (7,7,0,3)) PointLeft) (FoodHope (4,6,3,1))),(Add (Mul (NbFood (7,0,3,1)) (NbEmpty (0,0,1,1))) (Add (If (IsEnemy (2,8,1,3)) (NbVisited (9,5,3,3)) PointLeft) (NbFood (10,0,0,3))),Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (Mul (NbFood (7,0,3,1)) TimeLeft) PointLeft)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(PointLeft,If (Not (And (IsFood (4,6,1,1)) (IsFood (3,10,0,0)))) (Add (NbFood (7,0,3,1)) PointLeft) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbVisited (4,5,0,2))) (Add (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1))) (Const 2)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (NbFood (7,10,1,3))),Mul (Const 1) (NbVisited (10,5,1,1))),(Mul (NbFood (7,0,3,1)) (Add TimeLeft TimeLeft),Add TimeLeft Point),(Mul PointLeft (Const 1),Mul (NbFood (7,0,3,1)) Point),(Mul (NbEmpty (1,8,2,3)) (Const 5),Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1)))),(If (IsEnemy (2,8,1,3)) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbFood (2,1,2,1)),If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Const 1) (NbEmpty (2,3,2,3))),(Mul (NbFood (7,0,3,1)) TimeLeft,Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (Add TimeLeft (NbFood (7,0,3,1))) (Mul (Mul (NbFood (7,0,3,1)) (NbVisited (7,5,0,1))) (NbVisited (3,10,3,3))),NbFood (7,10,3,2)),(Add (NbVisited (5,8,1,3)) (Add PointLeft (NbFood (7,10,3,2))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add Point PointLeft))),(Add (NbFood (7,10,3,2)) PointLeft,If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))) PointLeft) (NbFood (2,3,2,2))),(Add PointLeft (Add (If (IsEnemy (7,5,0,1)) (Mul TimeLeft (NbFood (7,10,3,2))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (Const 1)) PointLeft) (NbFood (2,3,2,2))),(If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3)))),Mul (NbVisited (10,6,2,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10))),(Mul (NbFood (7,0,3,1)) (Mul (Mul (If (IsFood (6,6,3,0)) Point (Mul (If (IsEqual TimeLeft (NbVisited (1,7,1,2))) (NbVisited (4,2,2,3)) (Const (-2))) TimeLeft)) (Add (Mul (Sub (Add (FoodHope (2,8,1,3)) (NbEmpty (0,9,1,2))) Point) PointLeft) (FoodHope (8,5,3,1)))) (Mul Point (FoodHope (3,1,2,1)))),Add (NbEmpty (6,9,1,1)) (Add TimeLeft Point)),(Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft,Mul (NbFood (7,0,3,1)) (NbVisited (3,5,0,2))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft PointLeft),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 0) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (10,0,0,3)) (Const 1),Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (NbVisited (9,1,1,3))) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point))),(Add TimeLeft (NbFood (8,0,3,0)),Add TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))),(Sub PointLeft (NbEmpty (2,3,2,3)),Add (Add (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (7,10,3,2))) PointLeft),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add PointLeft PointLeft) Point,If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (2,7,1,1)) TimeLeft) (FoodHope (4,6,3,1))),(If (IsEqual Point (Sub (Sub (FoodHope (3,9,3,0)) (NbVisited (0,6,2,0))) (NbEmpty (1,6,0,0)))) (Const 1) (NbEmpty (2,3,2,3)),NbEmpty (1,9,2,2)),(Add (Mul (FoodHope (1,9,2,2)) (Mul PointLeft (NbEmpty (4,2,1,1)))) (NbFood (7,0,3,1)),Add (NbFood (7,10,3,2)) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft)),(If (Not (IsSmaller (NbFood (6,10,2,0)) (NbVisited (3,1,2,0)))) PointLeft (NbFood (2,3,2,2)),If (And (IsFood (0,3,2,0)) (And (IsFood (1,2,0,3)) (IsEnemy (1,1,3,1)))) (Add (NbFood (7,0,3,1)) PointLeft) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) TimeLeft) (Add PointLeft (Const 2)))),(Mul (Add TimeLeft (Mul (Mul (Mul Point PointLeft) Point) (NbVisited (3,10,3,3)))) (Mul (Sub PointLeft (NbEmpty (2,3,2,3))) PointLeft),Mul (FoodHope (8,4,2,3)) (NbFood (7,10,3,2))),(Add (Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1))) (NbFood (8,0,3,0)),Mul (NbFood (10,0,0,3)) (Mul (NbFood (7,0,3,1)) TimeLeft)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft PointLeft),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 0) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Add (FoodHope (4,1,1,0)) (NbFood (7,10,3,2)),Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (If (IsFood (3,0,2,2)) (NbVisited (1,6,1,0)) Point) Point)) (Sub TimeLeft (Sub (Add (FoodHope (0,2,0,2)) (NbFood (8,8,0,0))) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (8,4,0,3)) (FoodHope (9,6,3,2)))))) (Const 4))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (If (Not (And (IsFood (9,7,2,3)) (IsFood (3,10,0,0)))) (Mul PointLeft TimeLeft) (NbEmpty (2,3,2,3)))),Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) PointLeft) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point))),(Const 5,PointLeft),(Add PointLeft (Add (Mul (NbFood (7,0,3,1)) (Const 1)) (NbFood (10,0,0,3))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft PointLeft)),(If (IsEnemy (7,6,3,1)) (If (IsEnemy (7,6,3,1)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 3)))) (NbFood (3,0,1,0)),Mul (NbFood (7,0,3,1)) TimeLeft),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),NbFood (10,0,0,3)),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),NbFood (10,0,0,3)),(NbEmpty (4,4,2,2),Mul (NbFood (7,0,3,1)) (NbVisited (1,1,2,1))),(Mul (Add PointLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbVisited (7,5,0,1))) (NbVisited (3,10,3,3))),Add TimeLeft PointLeft),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))),(NbFood (10,8,1,3),Mul (NbFood (7,0,3,1)) (Mul (NbFood (1,8,0,3)) (Const 1)))]