[(Mul PointLeft (NbFood (2,1,0,0)),Point),(PointLeft,Const 4),(Sub TimeLeft (NbVisited (6,4,3,3)),Add (Sub Point PointLeft) (NbFood (4,0,1,1))),(NbEmpty (4,3,3,1),Add Point (If (IsEqual (Sub TimeLeft (If (IsFood (10,1,3,0)) (Add Point (NbEmpty (0,10,3,1))) (NbVisited (8,6,0,0)))) (NbFood (1,7,0,0))) (Add (Mul PointLeft (Add (NbEmpty (0,7,1,1)) (NbFood (9,1,1,0)))) (Sub PointLeft Point)) (NbVisited (9,1,3,0)))),(NbVisited (0,6,1,0),Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft Point) (FoodHope (0,3,1,3))) Point)) (Sub TimeLeft (Sub (FoodHope (10,0,3,2)) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (4,7,2,0)) (FoodHope (9,6,3,2)))))) (Const 4))),(NbVisited (1,5,0,3),Const 3),(Sub (NbVisited (0,6,1,0)) (FoodHope (10,9,1,0)),TimeLeft),(If (IsEqual (If (Not (IsEqual (NbVisited (5,8,3,0)) Point)) (Sub (NbVisited (3,8,3,3)) PointLeft) TimeLeft) (If (IsFood (0,8,3,1)) (Mul (FoodHope (9,6,3,2)) PointLeft) (Const 3))) (FoodHope (9,4,1,0)) TimeLeft,Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft Point) (FoodHope (0,3,1,3))) Point)) (Sub TimeLeft (Sub (FoodHope (10,0,3,2)) (Sub (Sub (Const 5) Point) (Add (NbFood (4,7,2,0)) PointLeft)))) (Const 4))),(Add TimeLeft (NbFood (7,10,3,2)),NbVisited (4,0,1,3)),(Const 3,Add (If (Or (And (IsEqual (Const 7) (FoodHope (2,2,3,2))) (IsEqual (Mul (FoodHope (6,2,1,0)) (NbVisited (10,3,3,1))) (Const 4))) (IsEqual (NbEmpty (6,6,2,0)) Point)) (FoodHope (10,3,2,3)) (FoodHope (4,7,1,1))) (NbVisited (7,5,3,1))),(TimeLeft,Mul TimeLeft (Sub TimeLeft (NbVisited (6,4,3,3)))),(Add (Sub Point PointLeft) (NbEmpty (5,4,0,0)),NbFood (4,0,1,1)),(Mul (NbVisited (7,9,2,2)) (NbEmpty (2,0,1,3)),NbFood (10,5,3,0)),(Sub (Mul (If (Not (And (IsEqual (FoodHope (8,4,2,2)) (Const 4)) (Not (IsFood (7,1,2,3))))) Point (Sub TimeLeft (Mul (Mul (NbFood (8,3,3,0)) (Const 4)) Point))) (Const 1)) Point,Const 0),(If (IsEnemy (7,1,0,3)) TimeLeft Point,Mul (FoodHope (9,9,1,1)) (NbVisited (9,7,1,3))),(If (Or (IsSmaller (NbFood (6,8,2,3)) PointLeft) (IsEqual (NbVisited (2,3,1,1)) (FoodHope (1,5,0,3)))) (If (IsEqual (Mul (NbFood (8,0,1,1)) (Add (Sub (NbEmpty (3,0,0,3)) (Const 2)) (If (IsEnemy (0,9,0,1)) (FoodHope (4,5,3,0)) (NbFood (10,6,0,2))))) (If (And (IsEqual (FoodHope (0,4,3,1)) (Const 3)) (Not (IsEnemy (3,8,3,1)))) (Add (Const 1) (Sub (NbFood (0,3,0,3)) Point)) PointLeft)) TimeLeft TimeLeft) Point,Point),(Mul (NbVisited (10,8,2,0)) (Add (NbEmpty (2,10,0,1)) (If (IsEqual PointLeft (If (IsFood (6,6,0,3)) (NbEmpty (7,4,2,0)) TimeLeft)) (Mul (NbEmpty (4,1,0,2)) TimeLeft) (Mul (NbFood (4,5,3,3)) (Mul (FoodHope (6,9,2,1)) (If (IsFood (6,0,1,0)) (FoodHope (5,1,3,0)) (Sub (NbEmpty (2,10,0,0)) (Const 1))))))),TimeLeft),(Sub (Const 2) (FoodHope (9,3,3,0)),TimeLeft),(NbVisited (0,6,1,0),Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft Point) (FoodHope (0,3,1,3))) Point)) (Sub TimeLeft (Sub (FoodHope (10,0,3,2)) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (4,7,2,0)) (FoodHope (9,6,3,2)))))) (Const 4))),(NbVisited (4,8,2,2),Mul (Sub (If (Not (IsEnemy (8,3,3,0))) Point (Const 5)) (FoodHope (4,5,1,1))) TimeLeft),(NbEmpty (3,8,1,1),Add Point TimeLeft),(Const 1,NbVisited (7,6,0,1)),(If (IsEnemy (9,8,2,2)) (FoodHope (1,2,3,0)) (NbVisited (10,7,0,0)),Mul (Mul Point (NbVisited (2,0,0,3))) (FoodHope (4,6,3,1))),(Const 1,Mul (NbVisited (10,8,0,2)) (If (And (And (IsSmaller (Const 3) Point) (IsEqual (Const 4) (If (IsFood (6,8,3,0)) (FoodHope (5,2,2,3)) (NbFood (4,2,1,3))))) (And (Not (IsEnemy (4,1,0,2))) (IsSmaller PointLeft PointLeft))) PointLeft (NbFood (4,3,2,3)))),(If (IsEqual Point (Mul (NbFood (9,9,0,3)) (NbFood (10,4,0,2)))) (NbEmpty (6,3,1,3)) (NbFood (0,9,1,1)),Point),(NbVisited (6,6,3,2),PointLeft),(FoodHope (8,2,3,1),Add Point (NbVisited (10,6,2,3))),(Const 0,NbVisited (0,5,0,2)),(FoodHope (1,8,3,0),Const 2),(NbEmpty (5,4,1,0),TimeLeft),(NbVisited (8,10,1,1),Sub PointLeft (Mul (Mul (FoodHope (4,8,0,2)) TimeLeft) PointLeft)),(Point,Point),(Mul (NbEmpty (10,6,1,1)) (NbVisited (4,10,3,1)),TimeLeft),(Mul (NbVisited (10,8,0,2)) (If (And (And (IsSmaller (Const 3) Point) (IsEqual (Const 4) (If (IsFood (6,8,3,0)) (FoodHope (5,2,2,3)) (NbFood (4,2,1,3))))) (And (Not (IsEnemy (4,1,0,2))) (IsSmaller PointLeft PointLeft))) PointLeft (NbFood (4,3,2,3))),Const 2),(FoodHope (5,2,0,3),Add PointLeft PointLeft),(If (IsFood (8,8,1,3)) (FoodHope (10,8,1,3)) (If (Not (IsSmaller (If (IsFood (6,9,0,0)) (Sub (NbFood (10,8,0,1)) (FoodHope (2,9,1,0))) Point) Point)) (NbVisited (7,2,2,3)) (If (IsEqual Point (NbFood (5,7,1,1))) (NbFood (9,3,1,2)) (NbVisited (0,3,2,1)))),If (IsFood (2,0,3,2)) (Sub (NbVisited (9,5,3,0)) (NbEmpty (4,3,0,0))) (Mul Point (NbFood (2,5,2,3)))),(FoodHope (3,10,1,2),Point),(Const 1,FoodHope (0,4,3,3)),(NbVisited (6,2,3,3),FoodHope (4,9,1,1)),(Mul (Sub (NbVisited (4,5,2,1)) (NbFood (10,4,2,2))) PointLeft,TimeLeft),(Mul (Add PointLeft (Add PointLeft (Const 2))) (Add (Sub (Mul (Mul Point (NbVisited (2,0,0,3))) (FoodHope (4,6,3,1))) (Const 4)) (NbEmpty (9,6,1,3))),Point),(NbFood (4,2,1,3),Mul (NbVisited (10,8,0,2)) (If (And (And (IsSmaller (Const 3) Point) (IsEqual (Const 4) (If (IsFood (6,8,3,0)) (FoodHope (5,2,2,3)) TimeLeft))) (And (Not (IsEnemy (4,1,0,2))) (IsSmaller PointLeft PointLeft))) PointLeft (NbFood (4,3,2,3)))),(If (And (IsSmaller (Mul (Add (NbVisited (0,2,3,1)) (NbFood (0,8,3,3))) (Const 5)) (FoodHope (7,3,0,1))) (Not (IsEnemy (6,1,3,3)))) (Mul Point (Add PointLeft (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbEmpty (2,3,2,3))))) (Const 5),NbEmpty (3,0,1,2)),(Sub (NbFood (3,1,0,1)) (FoodHope (2,4,0,3)),TimeLeft),(If (IsFood (0,5,3,1)) (Add TimeLeft (NbVisited (2,9,1,1))) TimeLeft,Const 3),(NbVisited (5,8,2,2),Point),(Mul (NbVisited (10,8,2,0)) (Add (NbEmpty (2,10,0,1)) (If (IsEqual PointLeft (If (IsFood (6,6,0,3)) (NbEmpty (7,4,2,0)) TimeLeft)) (Mul (NbEmpty (4,1,0,2)) TimeLeft) (Mul (NbFood (4,5,3,3)) (Mul (NbVisited (1,3,0,2)) (If (IsFood (6,0,1,0)) (FoodHope (5,1,3,0)) TimeLeft))))),TimeLeft),(Sub (Const 0) (FoodHope (9,3,3,0)),TimeLeft),(Mul TimeLeft TimeLeft,FoodHope (7,3,0,1)),(Sub (NbFood (8,0,3,0)) (FoodHope (2,4,0,3)),NbFood (3,1,0,1)),(NbFood (1,1,2,2),Add (FoodHope (1,7,3,2)) (Add (NbVisited (5,4,1,1)) (If (Or (IsSmaller (If (IsFood (8,9,1,1)) (Const 2) (NbVisited (6,7,1,3))) (FoodHope (0,9,1,3))) (IsFood (4,7,1,1))) Point (Sub (FoodHope (5,6,0,3)) (FoodHope (2,5,1,1)))))),(FoodHope (0,10,2,3),Mul (NbFood (7,0,3,1)) PointLeft),(NbFood (5,0,3,0),FoodHope (7,10,1,1)),(If (Not (IsEnemy (9,7,0,1))) TimeLeft (Const 1),PointLeft),(TimeLeft,Mul (Mul (NbFood (4,1,3,3)) (NbFood (6,8,0,3))) (If (IsSmaller (Add TimeLeft (NbVisited (9,9,2,0))) (NbEmpty (2,9,3,3))) TimeLeft (Add Point (NbFood (7,8,1,2))))),(TimeLeft,NbEmpty (5,9,2,2)),(Point,Point),(NbVisited (7,7,3,3),Const 4),(NbVisited (3,10,3,3),NbEmpty (3,5,2,1)),(TimeLeft,If (Or (IsEqual (NbFood (3,7,0,3)) (Add PointLeft (Mul (NbVisited (7,8,3,0)) (NbVisited (6,8,3,0))))) (And (IsSmaller PointLeft (Sub (Add (NbEmpty (1,4,1,2)) (Const 3)) (Const 2))) (IsEqual (Add (NbVisited (4,1,0,0)) (Sub TimeLeft (NbEmpty (6,9,2,3)))) (NbVisited (10,10,2,0))))) (If (IsSmaller (FoodHope (2,7,0,2)) (Sub PointLeft (Mul (NbFood (1,8,1,3)) Point))) PointLeft (NbVisited (10,0,0,3))) (NbVisited (7,9,0,0))),(Const 0,NbVisited (5,0,2,0)),(If (IsFood (1,1,2,1)) (If (Or (IsFood (0,9,2,1)) (IsEqual Point (NbFood (0,7,3,1)))) Point Point) (Add (Mul PointLeft PointLeft) (If (Or (Not (IsEqual (Const 1) PointLeft)) (IsFood (7,3,0,1))) PointLeft (FoodHope (6,9,3,1)))),PointLeft),(NbVisited (4,0,1,3),TimeLeft),(TimeLeft,Mul (Sub PointLeft (Mul (NbEmpty (4,8,2,2)) (Mul TimeLeft (NbFood (6,6,3,0))))) (Mul (NbEmpty (4,9,1,0)) (Add (Mul (Const 3) (NbFood (10,1,3,3))) PointLeft))),(NbVisited (0,6,1,0),NbVisited (6,2,3,3)),(Point,Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft Point) (FoodHope (0,3,1,3))) (NbFood (10,4,2,2)))) (Sub TimeLeft (Sub (FoodHope (10,0,3,2)) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (4,7,2,0)) (FoodHope (9,6,3,2)))))) (Const 4))),(If (IsFood (0,5,3,1)) (Add Point (NbVisited (2,9,1,1))) (Const 0),TimeLeft),(Const 2,If (IsEqual (Mul (NbVisited (5,8,2,2)) PointLeft) (Mul (If (Or (IsEnemy (4,5,1,3)) (IsEnemy (0,0,1,0))) PointLeft (NbVisited (8,8,1,2))) PointLeft)) (NbEmpty (0,6,1,3)) (Const 4)),(TimeLeft,NbFood (0,6,0,3)),(Const 3,Const 0),(NbFood (7,10,3,2),Add TimeLeft Point),(PointLeft,Add (If (Or (And (IsEqual (Const 7) (FoodHope (2,2,3,2))) (IsEqual (Mul (FoodHope (6,2,1,0)) (NbVisited (10,3,3,1))) (Const 4))) (IsEqual (NbEmpty (6,6,2,0)) (Const 3))) (FoodHope (10,3,2,3)) (FoodHope (4,7,1,1))) (NbVisited (7,5,3,1))),(NbFood (5,7,3,0),Mul (NbVisited (7,3,0,2)) (Add (Add (NbEmpty (0,9,2,0)) (NbVisited (7,7,0,3))) (NbFood (8,8,0,0)))),(Mul (Add PointLeft (Add PointLeft (Const 2))) (Add (Sub (FoodHope (1,10,3,3)) (Const 4)) (NbEmpty (9,6,1,3))),TimeLeft),(NbVisited (4,8,1,2),If (IsSmaller (FoodHope (2,2,3,3)) (NbEmpty (3,8,1,0))) (FoodHope (7,4,0,3)) (NbEmpty (3,9,3,0))),(NbVisited (4,0,1,3),Point),(If (IsEnemy (4,8,1,0)) TimeLeft (Const 5),TimeLeft),(NbVisited (9,4,2,0),FoodHope (6,7,3,0)),(If (IsEnemy (4,8,1,0)) TimeLeft (Const 5),Point),(TimeLeft,TimeLeft),(FoodHope (6,8,1,1),Point),(Add (FoodHope (1,7,3,2)) (Add (NbVisited (5,4,1,1)) (If (Or (IsSmaller (If (IsFood (8,9,1,1)) (Const 2) (NbVisited (6,7,1,3))) (FoodHope (0,9,1,3))) (IsFood (4,7,1,1))) Point (Sub (FoodHope (5,6,0,3)) (FoodHope (2,5,1,1))))),Mul (NbFood (7,0,3,1)) (FoodHope (0,10,2,3))),(TimeLeft,FoodHope (4,9,1,3)),(Point,NbEmpty (5,8,0,0)),(Point,Add (NbVisited (4,10,3,1)) (NbVisited (10,6,2,3))),(NbVisited (3,9,1,1),TimeLeft),(Mul (NbVisited (10,8,2,0)) (NbFood (7,10,3,2)),Add TimeLeft (Add (NbEmpty (2,10,0,1)) (If (IsEqual PointLeft (If (IsFood (6,6,0,3)) (NbEmpty (7,4,2,0)) TimeLeft)) (Mul (NbEmpty (4,1,0,2)) TimeLeft) (Mul (NbFood (4,5,3,3)) (Mul (FoodHope (6,9,2,1)) (If (IsFood (6,0,1,0)) (FoodHope (5,1,3,0)) TimeLeft)))))),(TimeLeft,Add (If (Or (And (IsEqual (Const 7) (FoodHope (2,2,3,2))) (IsEqual (Mul (FoodHope (6,2,1,0)) (NbVisited (10,3,3,1))) (Const 4))) (IsEqual (NbEmpty (6,6,2,0)) (Const 3))) (Sub TimeLeft (FoodHope (9,3,3,0))) (NbEmpty (5,3,2,3))) (NbVisited (7,5,3,1))),(NbVisited (4,1,2,3),Const 2),(NbVisited (1,8,1,1),Mul Point (Const 1)),(Add (FoodHope (10,10,1,2)) (FoodHope (8,7,2,2)),NbFood (7,5,3,3)),(PointLeft,FoodHope (2,2,1,3)),(NbVisited (1,8,1,1),PointLeft),(If (IsSmaller (Add (Add PointLeft PointLeft) (NbFood (8,0,0,1))) (Sub (NbEmpty (4,9,0,2)) (If (And (Not (IsFood (10,3,3,3))) (And (IsEnemy (0,4,1,2)) (IsFood (3,2,0,0)))) (If (IsSmaller (NbEmpty (8,4,3,0)) PointLeft) (If (IsFood (1,0,0,1)) (Const 5) TimeLeft) (NbVisited (4,7,2,1))) (Const 1)))) (NbFood (4,4,2,3)) (Mul (NbFood (0,7,3,3)) (Add (NbVisited (10,5,3,3)) Point)),Mul Point (Sub (Add TimeLeft (NbVisited (4,8,2,2))) (If (IsEnemy (4,0,2,3)) (FoodHope (6,2,2,1)) (NbFood (4,4,0,0))))),(Add PointLeft (Mul (Add (NbEmpty (3,8,2,1)) Point) (NbEmpty (6,3,1,3))),Mul (Mul (NbFood (0,6,3,3)) PointLeft) (NbVisited (5,0,1,0))),(NbVisited (6,6,3,2),NbFood (7,0,2,2)),(Sub TimeLeft (NbVisited (0,3,3,3)),Add (If (And (IsEnemy (9,2,3,0)) (And (IsFood (7,0,2,1)) (Not (And (IsEnemy (10,4,1,0)) (IsFood (1,6,2,1)))))) (FoodHope (1,0,0,2)) (Mul (Add (Mul (NbEmpty (2,3,3,2)) (NbFood (8,3,3,3))) (FoodHope (7,6,2,2))) (Mul (NbVisited (4,8,0,2)) Point))) (Add (FoodHope (10,9,1,0)) Point)),(If (IsEqual PointLeft (If (IsFood (0,8,3,1)) (Mul PointLeft PointLeft) (Const 3))) (FoodHope (9,4,1,0)) TimeLeft,If (Not (IsEqual (NbVisited (5,8,3,0)) (NbEmpty (9,9,2,0)))) (Sub (NbVisited (3,8,3,3)) PointLeft) TimeLeft),(Mul (Mul Point (NbVisited (2,0,0,3))) (FoodHope (4,6,3,1)),Mul (NbVisited (10,8,0,2)) (If (And (And (IsSmaller (Const 3) Point) (IsEqual (Const 4) (If (IsFood (6,8,3,0)) (FoodHope (5,2,2,3)) (NbFood (4,2,1,3))))) (And (Not (IsEnemy (4,1,0,2))) (IsSmaller PointLeft PointLeft))) PointLeft (NbFood (4,3,2,3)))),(Add (NbVisited (1,6,2,2)) (NbFood (7,10,3,2)),Add (If (Or (And (IsEqual (Const 7) (FoodHope (2,2,3,2))) (IsEqual (Mul (FoodHope (6,2,1,0)) (NbVisited (10,3,3,1))) (Const 4))) (IsEqual (NbFood (4,4,2,3)) (Const 3))) (FoodHope (10,3,2,3)) (FoodHope (4,7,1,1))) (NbVisited (7,5,3,1))),(NbVisited (5,0,2,0),Point),(If (IsFood (10,10,0,0)) (If (Or (Not (IsEqual (Add PointLeft (NbVisited (10,4,2,1))) PointLeft)) (IsSmaller (NbVisited (5,5,1,0)) Point)) PointLeft (Sub (NbEmpty (9,8,3,0)) (Mul TimeLeft Point))) (NbFood (3,6,2,1)),If (IsFood (1,1,2,1)) (If (Or (IsFood (0,9,2,1)) (IsEqual Point (NbFood (0,7,3,1)))) Point Point) PointLeft),(Add (Add (NbEmpty (4,1,0,0)) (NbEmpty (7,2,1,3))) (NbEmpty (1,10,2,2)),Mul (Add TimeLeft (NbEmpty (0,2,0,0))) (If (IsEnemy (2,9,0,2)) PointLeft (NbFood (4,0,2,3)))),(If (And (IsSmaller (Mul (Add (NbVisited (0,2,3,1)) (NbFood (0,8,3,3))) (Const 5)) (NbEmpty (3,0,1,2))) (Not (IsEnemy (6,1,3,3)))) (Mul Point (Add PointLeft (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbEmpty (2,3,2,3))))) (Const 5),TimeLeft),(TimeLeft,Add TimeLeft (NbFood (7,10,3,2))),(TimeLeft,Add (If (Or (And (IsEqual (Const 7) (FoodHope (2,2,3,2))) (IsEqual (Mul (FoodHope (6,2,1,0)) (NbVisited (10,3,3,1))) (Const 4))) (IsEqual (NbEmpty (6,6,2,0)) (Const 3))) (FoodHope (10,3,2,3)) (FoodHope (4,7,1,1))) (NbVisited (7,5,3,1))),(PointLeft,Sub (NbVisited (3,9,3,3)) (Const 1)),(Add (FoodHope (10,10,1,2)) (Add Point (NbVisited (0,1,1,1))),NbVisited (1,2,2,0)),(NbVisited (7,10,2,3),PointLeft),(Const 1,FoodHope (2,8,2,3)),(Const 0,Const 0),(PointLeft,Add (NbFood (2,7,2,0)) (Mul Point (If (IsSmaller (NbFood (8,10,0,1)) PointLeft) (NbEmpty (6,3,0,2)) (NbFood (5,0,2,2))))),(If (IsEnemy (7,1,0,3)) TimeLeft Point,Point),(TimeLeft,Mul (FoodHope (9,9,1,1)) (NbEmpty (1,1,2,0))),(NbVisited (8,7,3,3),Point),(NbVisited (5,2,1,0),NbVisited (6,9,1,3)),(Add PointLeft (Add (FoodHope (3,3,3,2)) (NbFood (10,0,0,3))),PointLeft),(NbFood (9,4,0,3),Sub PointLeft (If (Not (IsEnemy (4,2,1,3))) (NbVisited (9,2,2,1)) (Add (NbEmpty (10,0,1,2)) (Const 5)))),(Sub (NbEmpty (5,3,1,1)) (If (And (Or (Or (IsEqual (Const 4) (NbFood (8,0,2,3))) (And (IsEnemy (9,8,3,3)) (IsEnemy (3,1,2,0)))) (IsFood (6,6,0,2))) (IsSmaller (Add (Sub TimeLeft Point) (Add (Const 2) (NbFood (8,8,3,0)))) (NbVisited (7,5,0,1)))) (NbFood (9,1,2,1)) (Add TimeLeft (Add (Sub (FoodHope (6,5,2,1)) (Mul TimeLeft Point)) (Mul (NbEmpty (8,8,2,1)) (Add Point (FoodHope (9,4,1,0))))))),NbVisited (4,10,3,1)),(Const 3,Const 2),(Mul (If (IsEnemy (3,1,2,1)) (If (IsEnemy (1,10,1,3)) TimeLeft (NbVisited (8,9,1,0))) (NbFood (3,7,3,2))) (NbFood (6,5,2,1)),PointLeft),(NbVisited (10,9,2,2),NbEmpty (5,6,2,0)),(Const 0,NbVisited (9,7,2,2)),(Mul (Add PointLeft (Add PointLeft (Const 2))) (Add (Sub (FoodHope (1,10,3,3)) (Const 4)) (NbEmpty (9,6,1,3))),TimeLeft),(Mul PointLeft PointLeft,Sub (Mul (Add (FoodHope (7,8,0,3)) (Const 2)) (NbFood (9,2,1,0))) (NbFood (2,1,0,0))),(TimeLeft,PointLeft),(Point,Const 0),(If (IsEqual (Mul (Const 2) PointLeft) (Mul (If (Or (IsEnemy (4,5,1,3)) (IsEnemy (0,0,1,0))) PointLeft (NbVisited (8,8,1,2))) PointLeft)) (NbEmpty (0,6,1,3)) (Const 4),NbVisited (1,5,3,2)),(FoodHope (0,6,3,3),TimeLeft),(NbVisited (6,2,3,3),NbFood (10,4,2,2)),(NbVisited (0,6,1,0),TimeLeft),(Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft Point) (FoodHope (0,3,1,3))) Point)) (Sub TimeLeft (Sub (FoodHope (10,0,3,2)) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (4,7,2,0)) (FoodHope (9,6,3,2)))))) (Const 4)),NbVisited (10,9,2,2)),(Point,Mul (Mul (NbVisited (4,0,1,3)) (NbVisited (2,0,0,3))) (FoodHope (4,6,3,1))),(NbEmpty (6,2,1,3),Mul (NbVisited (4,4,1,2)) (If (And (And (IsSmaller (Const 3) Point) (IsEqual (Const 4) (If (IsFood (6,8,3,0)) (FoodHope (5,2,2,3)) (NbFood (4,2,1,3))))) (And (Not (IsEnemy (4,1,0,2))) (IsSmaller PointLeft PointLeft))) PointLeft (NbFood (4,3,2,3)))),(NbEmpty (3,8,3,1),Point),(PointLeft,PointLeft),(Point,Add (If (And (IsEnemy (9,2,3,0)) (And (IsFood (7,0,2,1)) (Not (And (IsEnemy (10,4,1,0)) (IsFood (1,6,2,1)))))) (FoodHope (1,0,0,2)) (Mul (Add (Mul (NbEmpty (2,3,3,2)) (NbFood (8,3,3,3))) (FoodHope (7,6,2,2))) (Mul (NbVisited (4,8,0,2)) Point))) (Add (NbVisited (0,3,3,3)) Point)),(PointLeft,NbVisited (6,9,1,3)),(Add TimeLeft (NbFood (7,10,3,2)),Add (If (Or (And (IsEqual (Const 7) (FoodHope (2,2,3,2))) (IsEqual (Mul (FoodHope (6,2,1,0)) (NbVisited (10,3,3,1))) (Const 4))) (IsEqual (NbEmpty (6,6,2,0)) (Const 3))) (FoodHope (10,3,2,3)) (FoodHope (4,7,1,1))) (NbVisited (7,5,3,1))),(Point,Const 2),(Add (FoodHope (10,10,1,2)) (Add (FoodHope (6,0,0,0)) (NbVisited (0,1,1,1))),Sub (If (And (And (And (Not (IsEnemy (10,5,2,2))) (Not (IsFood (5,9,2,1)))) (Not (IsFood (3,7,1,1)))) (Or (Or (Not (IsFood (2,2,1,3))) (IsFood (1,7,3,1))) (IsEqual (If (IsFood (1,6,2,3)) (Const 4) (NbVisited (6,10,3,0))) Point))) Point (Const 4)) (Add TimeLeft (NbFood (3,9,0,1)))),(NbVisited (1,6,1,1),FoodHope (2,2,1,3)),(Add Point (Add PointLeft (NbVisited (0,1,1,3))),NbVisited (10,6,2,3)),(PointLeft,NbVisited (0,5,0,2)),(Point,Point),(If (IsFood (6,8,3,0)) (FoodHope (5,2,2,3)) (NbFood (4,2,1,3)),Mul (NbVisited (10,8,0,2)) (If (And (And (IsSmaller (Const 3) Point) (IsEqual (Const 4) (Mul Point (Const 1)))) (And (Not (IsEnemy (4,1,0,2))) (IsSmaller PointLeft PointLeft))) PointLeft (NbFood (4,3,2,3)))),(NbEmpty (1,4,3,1),If (Not (IsEqual (NbVisited (2,3,3,2)) (FoodHope (6,1,0,3)))) (Const 2) PointLeft),(Sub (Sub (Const 4) (Sub (If (IsFood (10,5,2,0)) (Add (NbVisited (6,3,0,3)) (Const 2)) (NbFood (8,10,1,3))) (NbVisited (10,10,0,1)))) (Mul (Add TimeLeft (NbFood (8,6,0,2))) (NbEmpty (7,8,2,2))),NbFood (1,2,3,2)),(PointLeft,Add (FoodHope (1,0,3,1)) Point),(If (IsEnemy (9,8,2,2)) (FoodHope (1,2,3,0)) (NbVisited (10,7,0,0)),Const 1),(Point,PointLeft),(Const 2,NbVisited (9,1,2,1)),(Add (Mul PointLeft Point) (NbEmpty (1,0,2,2)),PointLeft),(TimeLeft,TimeLeft),(FoodHope (2,1,1,3),Sub PointLeft (If (Not (IsEnemy (4,2,1,3))) (NbVisited (9,2,2,1)) (Add (NbEmpty (10,0,1,2)) TimeLeft))),(NbVisited (0,6,1,0),Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft Point) (FoodHope (0,3,1,3))) Point)) (Sub TimeLeft (Sub (FoodHope (10,0,3,2)) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (4,7,2,0)) (FoodHope (9,6,3,2)))))) (Const 4))),(PointLeft,NbVisited (5,0,2,0)),(If (IsFood (1,1,2,1)) (If (Or (IsFood (0,9,2,1)) (IsEqual Point (NbFood (0,7,3,1)))) Point Point) (NbEmpty (4,9,0,2)),If (IsSmaller (Add (Add PointLeft PointLeft) (NbFood (8,0,0,1))) (Sub PointLeft (If (And (Not (IsFood (10,3,3,3))) (And (IsEnemy (0,4,1,2)) (IsFood (3,2,0,0)))) (If (IsSmaller (NbEmpty (8,4,3,0)) PointLeft) (If (IsFood (1,0,0,1)) (Const 5) TimeLeft) (NbVisited (4,7,2,1))) (Sub (Add TimeLeft (NbVisited (4,8,2,2))) (If (IsEnemy (4,0,2,3)) (FoodHope (6,2,2,1)) (NbFood (4,4,0,0))))))) (NbFood (4,4,2,3)) (Mul (NbFood (0,7,3,3)) (Add (NbVisited (10,5,3,3)) Point))),(Point,PointLeft),(NbFood (2,0,1,3),If (IsEqual (Add (If (IsEnemy (3,2,0,3)) Point PointLeft) (Mul (NbVisited (10,7,2,1)) (NbFood (6,4,1,3)))) (Sub (Add (FoodHope (2,4,2,1)) Point) (NbFood (9,9,3,2)))) (NbEmpty (0,6,3,1)) (Add (Mul (NbEmpty (6,2,0,2)) (Add (NbFood (5,7,2,0)) (If (IsSmaller (NbVisited (4,3,1,0)) (NbEmpty (0,5,1,1))) (Sub (NbEmpty (9,3,3,1)) (NbEmpty (0,9,2,1))) (NbEmpty (10,8,2,1))))) (Const 2))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),PointLeft),(Point,NbFood (10,5,3,3)),(Add PointLeft (Add PointLeft (Const 2)),Mul (NbVisited (2,4,2,1)) (Add (Sub (FoodHope (1,10,3,3)) (Const 4)) (NbEmpty (9,6,1,3)))),(NbFood (9,3,1,0),PointLeft),(NbVisited (2,5,2,1),If (Or (And (IsEqual (FoodHope (8,10,3,1)) Point) (IsEnemy (2,10,2,3))) (IsSmaller (NbFood (9,5,2,0)) (NbVisited (9,8,3,0)))) PointLeft (FoodHope (2,7,3,3))),(Point,Const 0),(FoodHope (1,2,3,0),If (IsEnemy (9,8,2,2)) (FoodHope (7,3,0,1)) (NbVisited (10,7,0,0))),(Sub (Const 1) (FoodHope (2,4,0,3)),NbFood (3,1,0,1)),(Point,NbFood (0,6,0,3)),(Const 0,Mul (If (IsEqual (If (IsEqual (Add (FoodHope (4,7,0,0)) (NbFood (0,0,0,0))) (NbVisited (5,8,0,2))) TimeLeft (If (IsSmaller (NbFood (9,0,2,2)) (Const 2)) (NbEmpty (6,3,2,1)) Point)) TimeLeft) TimeLeft (Const 3)) TimeLeft),(Mul (If (IsEqual (Sub (FoodHope (9,10,3,1)) Point) (NbVisited (5,5,3,1))) Point (Add TimeLeft (NbEmpty (1,7,3,2)))) TimeLeft,NbFood (10,10,0,0)),(FoodHope (2,7,3,2),If (IsEqual (NbFood (2,1,1,3)) (Sub TimeLeft (NbFood (9,9,3,2)))) (NbEmpty (0,6,3,1)) (Add (Mul (NbEmpty (6,2,0,2)) (Add (NbFood (5,7,2,0)) (If (IsSmaller (NbVisited (4,3,1,0)) (NbEmpty (0,5,1,1))) (Add (FoodHope (2,0,1,2)) Point) (NbEmpty (10,8,2,1))))) (Const 2))),(Point,NbVisited (7,3,2,1)),(Point,Sub TimeLeft (Mul (Mul TimeLeft (NbEmpty (10,1,1,0))) (FoodHope (7,6,0,1)))),(NbVisited (4,1,2,3),Mul (NbFood (4,8,2,3)) (Mul (NbEmpty (4,2,3,0)) (NbEmpty (2,7,0,3)))),(Const 2,Sub (Const 3) (NbEmpty (3,6,2,0))),(Point,Mul (NbVisited (1,5,0,3)) PointLeft),(Const 0,Add (NbFood (2,7,2,0)) (Mul PointLeft (If (IsSmaller (NbFood (8,10,0,1)) PointLeft) (NbEmpty (6,3,0,2)) (NbFood (5,0,2,2))))),(NbFood (5,7,3,0),NbVisited (4,0,1,3)),(NbVisited (7,7,0,3),Mul (NbVisited (7,3,0,2)) (Add (Add (NbEmpty (0,9,2,0)) Point) (NbFood (8,8,0,0)))),(Mul (Add (FoodHope (7,8,0,3)) (Const 2)) (NbFood (9,2,1,0)),Sub (NbEmpty (9,4,0,0)) PointLeft),(TimeLeft,TimeLeft),(NbEmpty (10,8,2,3),Add PointLeft (Add (If (Or (Or (IsEnemy (1,8,1,0)) (IsEnemy (10,10,2,0))) (Or (IsFood (0,1,3,3)) (IsEnemy (5,0,3,0)))) (If (Not (Or (Or (IsEnemy (1,8,1,0)) (IsEnemy (10,10,2,0))) (Or (IsFood (0,1,3,3)) (IsEnemy (5,0,3,0))))) (Const 2) (Mul (Const 2) PointLeft)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(If (IsSmaller (Add (Add PointLeft PointLeft) (NbFood (8,0,0,1))) (Sub (NbEmpty (4,9,0,2)) (If (And (Not (IsFood (10,3,3,3))) (And (IsEnemy (0,4,1,2)) (IsFood (3,2,0,0)))) (If (IsSmaller (NbEmpty (8,4,3,0)) PointLeft) (If (IsFood (1,0,0,1)) (Const 5) Point) (NbVisited (4,7,2,1))) (Sub (Add TimeLeft (NbVisited (4,8,2,2))) (If (IsEnemy (4,0,2,3)) (FoodHope (6,2,2,1)) (NbFood (4,4,0,0))))))) (NbFood (4,4,2,3)) (Mul (NbFood (0,7,3,3)) (Add (NbVisited (10,5,3,3)) Point)),TimeLeft),(If (IsEnemy (7,1,0,3)) (NbEmpty (2,9,1,2)) Point,TimeLeft),(Mul (FoodHope (9,9,1,1)) (NbEmpty (9,2,2,1)),NbVisited (2,6,0,0)),(NbFood (1,2,3,2),NbVisited (4,1,2,3)),(Const 2,NbVisited (6,4,1,3)),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) Point)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),FoodHope (3,1,2,1)),(NbVisited (7,7,3,3),Point),(Sub (Add PointLeft TimeLeft) (Mul (NbVisited (10,1,0,0)) (NbFood (10,5,3,0))),FoodHope (8,5,1,3)),(Sub TimeLeft (Mul (Mul (NbFood (8,3,3,0)) (Const 4)) Point),Sub (Mul (If (Not (And (IsEqual (FoodHope (8,4,2,2)) (Const 4)) (Not (IsFood (7,1,2,3))))) Point (Const 4)) (Const 1)) (NbVisited (3,1,3,3))),(Point,NbEmpty (6,3,1,3)),(Point,NbVisited (6,6,3,2)),(Add (Add (Sub (FoodHope (1,10,3,3)) (Const 4)) (NbEmpty (9,6,1,3))) (FoodHope (8,3,3,2)),Mul (Add PointLeft (Add PointLeft (Const 2))) (NbEmpty (2,3,1,0))),(TimeLeft,Const 5),(Sub PointLeft (If (IsEnemy (7,4,1,2)) (NbVisited (4,4,1,1)) TimeLeft),NbFood (2,8,3,3)),(NbVisited (10,1,1,0),NbVisited (0,5,0,2)),(FoodHope (8,1,3,2),NbVisited (4,0,1,3)),(NbVisited (4,3,0,1),Point),(NbEmpty (10,0,1,2),NbFood (0,2,3,2)),(TimeLeft,PointLeft),(TimeLeft,NbEmpty (3,8,1,1)),(TimeLeft,Const 1),(TimeLeft,Point),(Point,Point),(Point,Const 1),(TimeLeft,If (IsFood (10,10,0,0)) (If (Or (Not (IsEqual (Add PointLeft (NbVisited (10,4,2,1))) PointLeft)) (IsSmaller (NbVisited (5,5,1,0)) Point)) PointLeft (Sub (NbEmpty (9,8,3,0)) (Mul TimeLeft Point))) (NbFood (3,6,2,1))),(NbVisited (2,0,0,3),Mul (Mul Point (Mul (Add PointLeft (Add PointLeft (Const 2))) (Add (Sub (FoodHope (1,10,3,3)) (Const 4)) (NbEmpty (9,6,1,3))))) (FoodHope (4,6,3,1))),(If (And (And (IsSmaller (Const 3) Point) (IsEqual (Const 4) (If (IsFood (6,8,3,0)) (FoodHope (5,2,2,3)) (NbFood (4,2,1,3))))) (And (Not (IsEnemy (4,1,0,2))) (IsSmaller PointLeft PointLeft))) PointLeft (NbFood (4,3,2,3)),Mul (NbVisited (10,8,0,2)) TimeLeft),(NbFood (10,5,3,0),Sub (Mul (If (Not (And (IsEqual (FoodHope (8,4,2,2)) (Const 4)) (Not (IsFood (7,1,2,3))))) Point (Sub TimeLeft (Mul (Mul (NbFood (8,3,3,0)) (Const 4)) Point))) (Const 1)) (NbVisited (3,1,3,3))),(Point,NbVisited (6,9,1,3)),(Const 1,Sub (Mul PointLeft (Const 2)) (If (IsEnemy (3,5,0,0)) (NbFood (8,3,1,0)) PointLeft)),(If (IsFood (8,8,1,3)) (FoodHope (10,8,1,3)) TimeLeft,If (Not (IsSmaller (If (IsFood (6,9,0,0)) (Sub (NbFood (10,8,0,1)) (FoodHope (2,9,1,0))) Point) Point)) (NbVisited (7,2,2,3)) (If (IsEqual Point (NbFood (5,7,1,1))) (NbFood (9,3,1,2)) (If (And (IsSmaller (Const 0) (NbFood (10,1,1,2))) (IsEnemy (4,1,1,2))) PointLeft (If (IsFood (2,0,3,2)) (Sub PointLeft (NbEmpty (4,3,0,0))) (Mul Point (NbFood (2,5,2,3))))))),(Mul (If (IsEqual (Sub (NbFood (10,10,0,0)) Point) (NbVisited (5,5,3,1))) Point (Add TimeLeft (NbEmpty (1,7,3,2)))) TimeLeft,TimeLeft),(TimeLeft,FoodHope (0,0,1,3)),(NbVisited (7,10,2,3),Sub (Mul PointLeft (Const 2)) (Const 1)),(Const 1,TimeLeft),(FoodHope (2,1,1,3),Sub PointLeft (If (Not (IsEnemy (4,2,1,3))) (NbVisited (9,2,2,1)) (Add (NbEmpty (10,0,1,2)) TimeLeft))),(Add (NbEmpty (2,3,1,0)) (FoodHope (8,3,3,2)),Const 5),(Const 3,TimeLeft),(NbFood (3,5,2,0),NbVisited (10,9,2,2)),(Mul (Mul Point (NbVisited (2,0,0,3))) (FoodHope (4,6,3,1)),Mul (NbVisited (10,8,0,2)) (If (And (And (IsSmaller (Const 3) Point) (IsEqual (Const 4) (If (IsFood (6,8,3,0)) (FoodHope (5,2,2,3)) (NbFood (4,2,1,3))))) (And (Not (IsEnemy (4,1,0,2))) (IsSmaller PointLeft PointLeft))) PointLeft (NbFood (4,3,2,3)))),(Add PointLeft (Add (If (IsEnemy (2,0,0,0)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),NbEmpty (6,7,1,3)),(Add (FoodHope (1,5,0,0)) (NbFood (7,10,3,2)),TimeLeft),(Add (If (Or (And (IsEqual (Const 7) (FoodHope (2,2,3,2))) (IsEqual (Mul (FoodHope (6,2,1,0)) (NbVisited (10,3,3,1))) (Const 4))) (IsEqual (NbEmpty (6,6,2,0)) (Const 3))) (FoodHope (10,3,2,3)) (FoodHope (4,7,1,1))) (NbVisited (7,5,3,1)),TimeLeft),(NbFood (8,2,1,0),Const 1),(FoodHope (7,6,0,1),Sub TimeLeft (Mul (Mul TimeLeft (NbEmpty (10,1,1,0))) (Const 5))),(If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbEmpty (2,3,2,3)),If (And (IsSmaller (Mul (Add (NbVisited (0,2,3,1)) (NbFood (0,8,3,3))) (Const 5)) (NbEmpty (3,0,1,2))) (Not (IsEnemy (6,1,3,3)))) (Mul Point (Add PointLeft (Add (FoodHope (1,7,3,2)) (Add (NbVisited (5,4,1,1)) (If (Or (IsSmaller (If (IsFood (8,9,1,1)) (Const 2) (NbVisited (6,7,1,3))) (FoodHope (0,9,1,3))) (IsFood (4,7,1,1))) Point (Sub (FoodHope (5,6,0,3)) (FoodHope (2,5,1,1)))))))) (Const 5)),(TimeLeft,NbFood (9,5,2,3)),(Sub (FoodHope (1,10,3,3)) (Const 4),Mul (Add PointLeft (Add PointLeft (Const 2))) (Add (NbEmpty (1,0,2,2)) (NbEmpty (9,6,1,3)))),(TimeLeft,NbVisited (9,3,0,0)),(NbVisited (1,8,1,1),NbVisited (7,10,2,3)),(Mul Point (Const 1),Const 1),(NbVisited (4,10,3,1),Const 2),(NbVisited (10,2,0,0),Point),(Const 3,FoodHope (1,7,3,3)),(NbEmpty (3,5,2,1),PointLeft),(Sub (Add PointLeft TimeLeft) (Mul (NbVisited (10,1,0,0)) (FoodHope (8,5,1,3))),Const 4),(PointLeft,TimeLeft),(TimeLeft,NbFood (5,6,2,1)),(Mul (FoodHope (9,9,1,1)) TimeLeft,Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft Point) (FoodHope (0,3,1,3))) Point)) (Sub (NbVisited (9,7,1,3)) (Sub (FoodHope (10,0,3,2)) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (4,7,2,0)) (FoodHope (9,6,3,2)))))) (Const 4))),(NbVisited (10,6,2,3),Add Point Point),(If (IsEnemy (3,3,3,1)) (Mul (If (Or (Or (And (IsFood (4,4,2,3)) (IsEnemy (2,4,1,0))) (IsFood (0,7,0,3))) (Not (IsSmaller PointLeft (NbEmpty (0,5,3,1))))) (NbVisited (1,8,1,1)) (Const 0)) (FoodHope (5,5,3,3))) (Mul (Add (Sub (NbFood (10,0,0,0)) Point) (Add (NbFood (5,2,0,0)) (Sub (NbEmpty (3,1,3,2)) (Add (FoodHope (10,0,3,0)) TimeLeft)))) (If (IsSmaller (FoodHope (5,1,1,3)) (NbEmpty (9,10,0,1))) (NbEmpty (9,0,0,0)) (NbFood (8,7,0,1)))),NbVisited (0,5,0,2)),(NbFood (0,2,3,2),PointLeft),(Add TimeLeft (NbVisited (7,2,3,0)),Point),(FoodHope (5,9,2,0),FoodHope (9,5,2,2)),(If (IsFood (4,9,2,1)) (Add PointLeft (Const 5)) (Sub Point PointLeft),NbEmpty (8,10,1,2)),(NbVisited (6,2,3,3),NbEmpty (4,8,1,0)),(PointLeft,NbEmpty (0,8,2,2))]