[(Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft PointLeft) (FoodHope (0,3,1,3))) Point)) (Sub TimeLeft (Sub (Add (FoodHope (0,2,0,2)) (NbFood (8,8,0,0))) (Sub (Const 0) (Add (Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))) (FoodHope (9,6,3,2)))))) (Const 4)),NbFood (8,4,0,3)),(Mul (NbEmpty (2,3,2,3)) (Const 5),If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Const 1) (NbFood (7,0,3,1))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (If (IsFood (3,10,0,0)) (If (Not (And (IsFood (3,3,0,1)) (IsFood (3,10,0,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))))) PointLeft),Add PointLeft (Add TimeLeft (NbFood (10,0,0,3)))),(Const 2,If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) TimeLeft (NbEmpty (2,3,2,3))),(NbFood (7,0,3,1),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (Mul (NbFood (7,0,3,1)) TimeLeft)) PointLeft)),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (NbVisited (10,9,2,2)) (NbFood (2,3,2,2)),TimeLeft),(FoodHope (10,4,2,1),Add Point (Add PointLeft (Const 5))),(Mul (Const 2) Point,Mul (NbFood (10,0,0,3)) (Mul (NbFood (10,0,0,3)) (Mul Point (NbFood (9,1,3,1))))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsEnemy (7,3,0,2)) (Const 2) (NbFood (7,0,3,1)))),Add PointLeft (Add (If (IsEnemy (7,5,0,1)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (NbFood (7,0,3,1)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) PointLeft),(Add (If (Not (And (IsEnemy (7,6,2,0)) (IsEnemy (0,1,3,2)))) (NbFood (0,5,2,3)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) TimeLeft)) (Const 2) (NbFood (7,0,3,1))))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),Add PointLeft (Mul Point (NbFood (8,3,0,1)))),(TimeLeft,Mul (NbFood (7,0,3,1)) (Add PointLeft (Add (Mul Point (NbVisited (2,0,0,3))) (NbFood (10,0,0,3))))),(If (IsEnemy (9,7,0,0)) PointLeft (Add (Sub (NbEmpty (4,6,1,1)) (NbVisited (6,3,1,1))) TimeLeft),Mul (Add (Add (NbFood (2,1,2,3)) TimeLeft) TimeLeft) (Mul (Mul (NbFood (7,0,3,1)) (Add TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))) (NbVisited (3,10,3,3)))),(NbFood (7,0,3,1),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5)),(Mul (NbFood (3,0,1,0)) PointLeft,NbFood (10,0,0,3)),(Add PointLeft (Add (If (IsEnemy (8,3,2,0)) (If (Not (IsEnemy (8,3,2,0))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) PointLeft))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),Sub (Add Point PointLeft) Point),(TimeLeft,Mul (NbFood (7,0,3,1)) (NbFood (10,0,0,3))),(Mul (NbFood (7,0,3,1)) (Mul (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbEmpty (2,3,2,3))),Add PointLeft (Add TimeLeft (NbFood (7,0,3,1)))),(TimeLeft,FoodHope (1,4,0,3)),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (NbFood (7,0,3,1)),Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbEmpty (2,3,2,3)))),PointLeft),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add (NbFood (7,0,3,1)) (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (Const 2) TimeLeft))),(If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbVisited (7,7,0,3)) PointLeft) (FoodHope (4,6,3,1)),Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbEmpty (0,0,1,1)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Add (Const 3) (NbFood (7,0,3,1)),Mul (Add Point (NbFood (7,0,3,1))) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft))),(Add PointLeft (Add (If (IsFood (10,8,3,2)) (If (IsFood (10,8,3,2)) PointLeft (Mul (If (IsFood (10,8,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Const 3),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) TimeLeft)) PointLeft),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbFood (7,0,3,1)) PointLeft))),(TimeLeft,If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Const 1) (NbEmpty (2,3,2,3))),(NbFood (2,7,3,3),NbEmpty (1,2,1,3)),(Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)),If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Const 1) (NbEmpty (2,3,2,3))),(NbEmpty (2,1,1,1),Mul TimeLeft (Mul PointLeft Point)),(Mul (Add TimeLeft (Add (If (IsFood (4,4,2,2)) (If (IsFood (4,4,2,2)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (4,4,2,2)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3))),Point),(Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (NbFood (7,0,3,1))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point)),Mul (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0))) TimeLeft),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbVisited (7,5,0,1))) (NbVisited (3,10,3,3))),Const 5),(FoodHope (2,2,0,1),FoodHope (3,3,1,3)),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1))))) (Add TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))) (NbVisited (3,10,3,3))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (NbFood (7,0,3,1))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Add (Add TimeLeft PointLeft) PointLeft,Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,10,3,2)) (Const 1))),(NbEmpty (9,3,1,0),If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (FoodHope (8,3,1,3)) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (NbVisited (10,9,2,2)) (NbFood (2,3,2,2)))),(TimeLeft,Add (Add (Add PointLeft (Add (FoodHope (8,3,1,3)) (NbFood (10,0,0,3)))) (NbFood (7,10,3,2))) PointLeft),(If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (NbEmpty (9,3,1,0)),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (NbVisited (10,9,2,2)) (NbFood (2,3,2,2))),(Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft PointLeft) (FoodHope (0,3,1,3))) (Mul (NbEmpty (0,1,1,1)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3)))))) (Sub TimeLeft (Sub (Add (FoodHope (0,2,0,2)) (NbFood (8,8,0,0))) (Sub (Const 0) (Add (NbFood (8,4,0,3)) (FoodHope (9,6,3,2)))))) (Const 4)),Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) Point) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Const 5),If (IsEnemy (2,8,1,3)) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbFood (2,1,2,1))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),NbFood (7,0,3,1)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft)),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2))),(Add PointLeft (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbVisited (4,5,0,2))),Mul (NbFood (7,0,3,1)) (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 0) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Add PointLeft (Const 7),Add (If (Or (And (IsEqual (NbFood (0,4,3,0)) (FoodHope (2,2,3,2))) (IsEqual (Mul (FoodHope (6,2,1,0)) (NbVisited (10,3,3,1))) (Const 4))) (IsEqual (NbEmpty (6,6,2,0)) (Const 3))) (FoodHope (10,3,2,3)) (FoodHope (4,7,1,1))) (NbVisited (7,5,3,1))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft PointLeft),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 0) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Add PointLeft (Add (If (IsEnemy (8,2,3,1)) (If (IsEnemy (8,2,3,1)) (Const 2) (Mul (Const 2) (If (Not (And (IsEnemy (8,2,3,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbEmpty (8,6,3,1))) (Add PointLeft (NbFood (0,4,3,0)))),TimeLeft),(If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbEmpty (2,3,2,3)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft)),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2))),(Const 4,Mul (NbFood (7,0,3,1)) (NbVisited (1,0,2,3))),(If (Not (And (IsEnemy (7,6,2,0)) (IsEnemy (7,1,1,1)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (FoodHope (4,6,3,1)),Add PointLeft (Add (If (IsEnemy (8,2,3,1)) (If (IsEnemy (8,2,3,1)) (Const 2) (NbFood (6,8,0,3))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbEmpty (2,3,2,3)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1))))),(Const 1,Add PointLeft (Add (If (And (IsEqual (Add (NbFood (8,9,1,2)) (NbEmpty (2,9,2,3))) (Sub (Const 2) Point)) (IsFood (2,6,0,2))) (If (And (IsEqual (Add (NbFood (8,9,1,2)) (NbEmpty (2,9,2,3))) (Sub (Const 2) Point)) (IsFood (2,6,0,2))) (Const 2) (Mul (Const 2) (If (And (IsEqual (Add (NbFood (8,9,1,2)) (NbEmpty (2,9,2,3))) (Sub (Const 2) Point)) (IsFood (2,6,0,2))) (NbVisited (10,7,0,0)) (NbFood (10,0,0,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) Point (NbEmpty (2,3,2,3)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller (Const 1) (NbFood (0,5,2,3))) (Const 2) (NbFood (7,0,3,1))))),(Mul (NbVisited (10,6,2,3)) (If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Const 2) (Const 10)),Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (Const 2) (NbFood (7,0,3,1)))),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (Const 2) (NbFood (7,0,3,1))))),(Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (3,10,3,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (7,7,0,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (NbFood (7,10,3,2))),Add TimeLeft (Add TimeLeft TimeLeft)),(Add (Add (Add TimeLeft (NbFood (7,10,3,2))) (NbFood (7,10,3,2))) PointLeft,Mul PointLeft (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbVisited (3,10,3,3)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft PointLeft),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft)))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) Point,If (IsEqual Point (Sub (Sub (FoodHope (3,9,3,0)) (NbEmpty (1,9,2,2))) (NbEmpty (1,6,0,0)))) (Const 1) (NbEmpty (2,3,2,3))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller (NbFood (10,0,0,3)) (NbFood (0,5,2,3))) (Const 2) (NbFood (7,0,3,1)))),Mul Point (Mul TimeLeft Point)),(Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (Mul TimeLeft (NbFood (0,9,2,1)))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),Mul (NbFood (10,0,0,3)) (NbVisited (3,10,3,3))),(Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point)),Const 5),(Add TimeLeft (Add TimeLeft (NbFood (7,10,3,2))),Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Mul Point (NbVisited (2,0,0,3))) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (7,0,3,1))))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point))),(NbFood (1,4,1,0),Mul (Const 2) (Mul TimeLeft PointLeft)),(Add PointLeft (Add (Sub (Mul (NbEmpty (6,10,0,1)) (If (Or (IsEnemy (3,2,0,2)) (IsSmaller TimeLeft TimeLeft)) (Add TimeLeft (Const 3)) TimeLeft)) (NbVisited (7,1,3,2))) (NbFood (7,0,3,1))),PointLeft),(Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft PointLeft)) (Const 5),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2))))) (NbFood (2,3,2,2))),(PointLeft,NbFood (10,0,0,3)),(Add PointLeft (Add (Mul (NbFood (7,10,3,2)) (NbVisited (2,0,0,3))) (NbFood (10,0,0,3))),Add TimeLeft Point),(If (IsEnemy (2,8,1,3)) (FoodHope (2,2,3,2)) (NbFood (3,0,1,0)),Mul (NbFood (7,0,3,1)) (Mul (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,3,3,1)) (Mul (Const 2) (FoodHope (3,1,2,1)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))) (If (IsEqual Point PointLeft) (Const 2) (NbFood (7,0,3,1))))),(Mul (NbVisited (10,7,2,3)) TimeLeft,Mul (NbFood (7,0,3,1)) (Mul (NbFood (2,6,0,0)) (NbEmpty (2,3,2,3)))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Const 1)) (NbVisited (3,10,3,3))),NbVisited (7,5,0,1)),(Add (Add (NbFood (7,10,3,2)) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft)) (NbFood (7,0,3,1)),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) PointLeft (NbFood (2,3,2,2))),(If (IsEqual Point (NbFood (2,6,0,0))) (If (IsEqual Point (NbFood (2,6,0,0))) (Const 2) (Const 10)) (NbFood (3,0,1,0)),Mul (NbVisited (10,6,2,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbEmpty (2,3,2,3))),Const 1),(Mul (NbFood (7,0,3,1)) TimeLeft,Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbVisited (7,5,0,1))) (NbVisited (3,10,3,3)))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) PointLeft),Mul (Sub (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (Const 1) (FoodHope (0,3,1,3)))) PointLeft)) (FoodHope (4,5,1,1))) TimeLeft),(TimeLeft,TimeLeft),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))) (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2)),TimeLeft),(If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (FoodHope (8,2,3,1)),PointLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2))) (NbFood (7,0,3,1)))),Const 2),(Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbEmpty (0,0,1,1))) (NbFood (10,0,0,3))),If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbFood (3,0,1,0)) PointLeft) (FoodHope (4,6,3,1))),(Add (Add (NbFood (7,10,3,2)) PointLeft) (NbEmpty (7,9,0,2)),NbEmpty (7,8,2,0)),(Mul (FoodHope (4,6,3,1)) (NbVisited (2,0,0,3)),Point),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add PointLeft PointLeft)),Mul (NbFood (7,0,3,1)) (Mul (NbEmpty (0,0,1,1)) (Add (NbEmpty (0,0,1,1)) PointLeft))),(If (Not (And (IsFood (10,8,3,2)) (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))))) (Const 1) (NbEmpty (2,3,2,3)),If (IsFood (3,10,0,0)) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2))),(Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft,If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (NbVisited (10,9,2,2)) (NbFood (2,3,2,2))),(Const 0,If (Not (And (IsFood (10,8,3,2)) (IsEnemy (1,2,1,0)))) (Const 1) (NbEmpty (2,3,2,3))),(Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul PointLeft (Const 1))) (NbEmpty (8,1,3,2))) (NbFood (10,0,0,3)),Mul PointLeft (NbEmpty (2,3,2,3))),(NbEmpty (9,3,1,0),If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (FoodHope (8,3,1,3)) (NbVisited (3,10,3,3))),(If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbEmpty (2,3,2,3)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Sub (Add (NbVisited (8,0,2,1)) (NbVisited (6,0,2,2))) (Sub (FoodHope (4,6,0,0)) PointLeft)) (NbEmpty (2,3,2,3)),If (Not (And (IsEnemy (3,3,2,0)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbEmpty (2,3,2,3))),(Add (Add (NbEmpty (0,0,1,1)) (NbVisited (8,4,3,2))) (NbFood (8,0,3,0)),NbFood (8,0,3,0)),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft)),If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Const 1) (NbEmpty (2,3,2,3))),(Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) TimeLeft))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) TimeLeft) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller PointLeft (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point)),Mul (NbFood (7,0,3,1)) (Const 1)),(Add PointLeft (Add (If (And (Or (IsSmaller (FoodHope (4,0,3,1)) (NbEmpty (0,1,3,1))) (And (IsEnemy (9,8,3,1)) (IsFood (3,8,1,1)))) (IsEnemy (9,0,3,2))) (If (And (Or (IsSmaller (FoodHope (4,0,3,1)) (NbEmpty (0,1,3,1))) (And (IsEnemy (9,8,3,1)) (IsFood (3,8,1,1)))) (IsEnemy (9,0,3,2))) (Const 2) (Mul (NbFood (1,4,1,0)) (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbVisited (9,4,1,2))),Add (If (Not (Or (IsSmaller (FoodHope (4,0,3,3)) (FoodHope (7,5,0,2))) (Not (IsFood (5,0,2,3))))) (If (Not (Or (IsSmaller (FoodHope (4,0,3,3)) (FoodHope (7,5,0,2))) (Not (IsFood (5,0,2,3))))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) TimeLeft,If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add (Mul TimeLeft (Mul (Const 2) (FoodHope (3,1,2,1)))) (NbFood (7,10,3,2))) PointLeft) (NbEmpty (2,3,2,3))),(Mul (Add (If (IsFood (9,7,1,1)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))) (Mul (NbFood (7,10,3,2)) (Const 1)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (NbVisited (10,2,1,0)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Const 1,Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))))),(NbFood (7,10,3,2),NbVisited (3,10,3,3)),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),NbFood (10,0,0,3)),(If (Not (And (IsFood (4,6,1,1)) (IsFood (3,10,0,0)))) (Add (NbFood (7,0,3,1)) PointLeft) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))),Mul (NbFood (7,10,1,3)) (NbVisited (10,5,1,1))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Add TimeLeft (NbFood (7,10,3,2)))),PointLeft),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (IsEnemy (2,8,1,3)) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Add PointLeft (Add (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Const 1)),Add TimeLeft (Add TimeLeft (NbFood (7,0,3,1)))),(Add (If (IsFood (3,3,0,1)) (If (Not (IsFood (3,3,0,1))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),Add PointLeft (Add (If (IsEnemy (8,3,2,0)) (If (Not (IsEnemy (8,3,2,0))) (Const 2) (Mul (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (7,0,3,1)) (Mul (If (IsSmaller Point (NbFood (0,5,2,3))) (Const 2) (NbEmpty (6,9,1,1))) (Mul Point (FoodHope (3,1,2,1)))),Mul (NbFood (7,0,3,1)) (NbVisited (3,5,0,2))),(Mul TimeLeft (Mul TimeLeft TimeLeft),Mul (NbFood (5,6,1,2)) (Const 1)),(If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbEmpty (2,3,2,3)),Mul (NbFood (7,0,3,1)) (Add TimeLeft (NbFood (7,10,3,2)))),(Add PointLeft (Const 1),Mul TimeLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (FoodHope (1,9,2,2)) (Mul PointLeft (NbEmpty (4,2,1,1))),If (And (IsFood (0,3,2,0)) (And (IsFood (1,2,0,3)) (IsEnemy (1,1,3,1)))) (Add (NbFood (7,0,3,1)) PointLeft) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2)))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (NbFood (7,10,1,3)) (NbVisited (10,5,1,1))),Mul (Mul (NbFood (7,0,3,1)) (NbVisited (7,5,0,1))) (NbVisited (3,10,3,3))),(If (Not (And (IsEnemy (7,6,2,0)) (IsEnemy (7,8,3,2)))) (NbFood (3,2,2,3)) (FoodHope (8,2,3,1)),Mul (NbFood (7,0,3,1)) (Add TimeLeft (NbFood (7,10,3,2)))),(Add TimeLeft PointLeft,Mul (NbEmpty (0,0,1,1)) (Const 1)),(If (Not (IsEqual (NbVisited (5,10,3,1)) (Const 5))) (Add (NbFood (7,0,3,1)) (Add PointLeft (Add (NbEmpty (0,0,1,1)) (NbFood (10,0,0,3))))) (NbFood (7,10,1,3)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (NbVisited (10,9,2,2)) PointLeft))),(If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Const 1) (NbEmpty (2,3,2,3)),TimeLeft),(If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbEmpty (2,3,2,3)),If (Not (And (IsEnemy (7,6,2,0)) (IsEnemy (7,8,3,2)))) (NbFood (3,2,2,3)) (FoodHope (8,2,3,1))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (NbEmpty (0,0,1,1)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Add (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) PointLeft),(Mul (NbFood (10,0,0,3)) (Const 1),Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (NbVisited (9,1,1,3))) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 5) (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),TimeLeft),(NbEmpty (2,10,2,0),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 0) (Mul (NbEmpty (10,8,0,0)) (NbFood (7,0,3,1)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Add PointLeft (NbFood (0,4,3,0)),Mul (NbFood (3,0,1,0)) PointLeft),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Const 1))),(If (Not (And (IsFood (3,3,0,1)) (And (IsEnemy (7,6,2,0)) (IsEnemy (0,1,3,2))))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3)),Add (If (Not (IsEnemy (8,3,2,0))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Sub PointLeft (NbEmpty (2,3,2,3))) PointLeft),Add (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (NbFood (8,0,3,0))),(FoodHope (3,1,2,1),TimeLeft),(PointLeft,Add (Add TimeLeft (NbFood (7,10,3,2))) (NbFood (7,0,3,1))),(Mul (NbVisited (10,9,2,2)) PointLeft,If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (NbFood (3,0,1,0)) (NbFood (2,3,2,2))),(NbVisited (2,0,0,3),Mul Point (Add TimeLeft (NbFood (7,10,3,2)))),(Add TimeLeft (NbFood (7,10,3,2)),Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft PointLeft) (FoodHope (0,3,1,3))) Point)) (Sub TimeLeft (Sub (Add (FoodHope (0,2,0,2)) (NbFood (8,8,0,0))) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (8,4,0,3)) (FoodHope (9,6,3,2)))))) (Const 4))),(NbFood (7,10,3,2),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Const 4,NbVisited (3,10,3,3)),(Add (NbVisited (5,6,0,3)) (Add TimeLeft (NbFood (7,10,3,2))),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (NbFood (1,3,0,1))) (NbVisited (3,10,3,3)))),(Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (FoodHope (8,2,3,1))),(If (Not (IsEnemy (10,7,3,2))) (Add (NbEmpty (0,0,1,1)) PointLeft) (Mul (NbFood (7,0,3,1)) TimeLeft),PointLeft),(Add PointLeft (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))),If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))),(Add TimeLeft (NbFood (7,10,3,2)),Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft PointLeft) (FoodHope (0,3,1,3))) Point)) (Sub TimeLeft (Sub (Add (FoodHope (0,2,0,2)) (NbFood (8,8,0,0))) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (8,4,0,3)) (FoodHope (9,6,3,2)))))) (Const 4))),(Add TimeLeft Point,Add (Add TimeLeft (Const 4)) PointLeft),(Add TimeLeft (NbFood (7,10,3,2)),Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft PointLeft) (FoodHope (0,3,1,3))) Point)) (Sub TimeLeft (Sub (Add (FoodHope (0,2,0,2)) (NbFood (8,8,0,0))) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (8,4,0,3)) (FoodHope (9,6,3,2)))))) (Const 4))),(PointLeft,If (IsFood (10,9,2,3)) (Const 2) (If (Not (And (Or (IsEnemy (2,10,3,0)) (IsEnemy (7,6,3,2))) (IsFood (10,9,2,3)))) (NbFood (5,2,0,1)) (FoodHope (0,6,1,2)))),(PointLeft,Add (If (Not (And (IsEnemy (7,6,2,0)) (IsEnemy (0,1,3,2)))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) (NbFood (9,0,1,0))) (FoodHope (4,6,3,1)),NbVisited (0,6,2,0)),(Mul (NbFood (7,0,3,1)) PointLeft,Mul (Mul PointLeft (Const 5)) (Mul TimeLeft (NbVisited (5,0,0,0)))),(Add PointLeft (Add (If (IsEnemy (8,2,3,1)) (If (IsEnemy (8,2,3,1)) (Const 2) (Mul (Const 2) (If (Not (And (IsEnemy (8,2,3,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Const 1) (NbEmpty (2,3,2,3))),(Add PointLeft (Add TimeLeft (NbFood (7,0,3,1))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Add PointLeft (Add (Sub PointLeft (NbEmpty (2,3,2,3))) (NbFood (8,0,3,0))),Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),(Mul PointLeft (Add (NbEmpty (0,0,1,1)) PointLeft),Const 0),(Add (If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Const 1) (NbEmpty (2,3,2,3))) (NbFood (7,10,3,2)),TimeLeft),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Const 1))),(NbVisited (3,10,3,3),If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbFood (10,0,0,3))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsEnemy (7,3,0,2)) (Const 2) (NbFood (7,0,3,1)))),Mul (Add TimeLeft (Const 1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (FoodHope (9,9,3,1)))),(Add PointLeft (Add (If (IsEnemy (7,5,0,1)) (If (IsEnemy (5,5,3,3)) (Const 2) (FoodHope (1,3,3,3))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3)))),(Add TimeLeft (NbFood (8,0,3,0)),Add (Add (Sub PointLeft (NbEmpty (2,3,2,3))) (NbFood (7,10,3,2))) PointLeft),(NbVisited (10,9,2,2),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (FoodHope (3,1,2,1)) (NbFood (2,3,2,2))),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))),NbFood (10,0,0,3)),(Add TimeLeft (NbFood (7,10,3,2)),Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft PointLeft) (FoodHope (0,3,1,3))) Point)) (Sub TimeLeft (Sub (Add (FoodHope (0,2,0,2)) (NbFood (8,8,0,0))) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (8,4,0,3)) (FoodHope (9,6,3,2)))))) (Const 4))),(Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (9,9,3,1)))))) (NbFood (3,0,1,0))) (Add TimeLeft (NbFood (7,10,3,2)))))) (Const 5),If (Not (And (IsFood (4,6,1,1)) (IsFood (3,10,0,0)))) (Add (NbFood (7,0,3,1)) PointLeft) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2)))),(NbVisited (10,5,1,1),Mul (NbFood (7,10,1,3)) (NbFood (10,0,0,3))),(Add PointLeft (Add (Sub PointLeft (NbEmpty (2,3,2,3))) (NbFood (8,0,3,0))),Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point))),(Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)),Const 5),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point PointLeft) (Const 2) (NbFood (7,0,3,1)))),Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Const 2) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (Mul Point (NbFood (0,5,2,3)))),(Point,Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (7,0,3,1))))))) TimeLeft (Mul (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))) Point))) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (NbVisited (10,5,1,1)))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point))),(Add (If (Not (And (IsEnemy (7,6,2,0)) (IsEnemy (0,1,3,2)))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) TimeLeft) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Mul (NbFood (7,0,3,1)) (NbFood (8,3,0,1)))),Point),(Add PointLeft (Add (If (IsFood (3,3,0,1)) (If (IsFood (3,3,0,1)) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) Point (Mul (Const 3) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),If (IsFood (3,3,0,1)) (If (IsFood (3,3,0,1)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbEmpty (7,7,0,0))))) (NbFood (3,0,1,0))),(Add (NbEmpty (0,0,1,1)) TimeLeft,PointLeft),(Add (If (Not (And (IsEnemy (7,6,2,0)) (IsEnemy (0,1,3,2)))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (NbEmpty (2,3,2,3)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbFood (7,0,3,1)))),(Const 1,FoodHope (4,6,3,1)),(Add TimeLeft (Add TimeLeft (NbFood (7,10,3,2))),Mul (NbFood (7,0,3,1)) (Mul PointLeft (Const 1))),(Add (FoodHope (6,0,1,2)) (Const 1),If (Not (IsEqual Point (NbVisited (5,0,2,1)))) (NbFood (6,0,0,3)) (Mul TimeLeft (If (And (Or (IsEnemy (8,7,2,2)) (Or (And (Or (IsEnemy (0,4,3,2)) (IsEqual (Const 0) (Sub TimeLeft (NbFood (3,8,2,3))))) (Or (IsSmaller (Mul (Const 3) (FoodHope (4,2,1,1))) (NbEmpty (3,8,1,0))) (IsEnemy (6,3,2,1)))) (IsSmaller (NbVisited (6,9,3,1)) (NbEmpty (7,1,3,1))))) (IsEqual (NbFood (8,0,2,0)) (Add (NbVisited (6,6,3,0)) (NbEmpty (4,10,1,3))))) Point (Sub (NbFood (3,10,0,1)) TimeLeft)))),(Mul (NbFood (7,0,3,1)) (Add (NbVisited (8,9,1,3)) (NbFood (7,0,3,1))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) Point (Mul (Const 2) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0))) (Mul (NbFood (7,10,3,2)) (Mul TimeLeft (Const 1))))),(Mul TimeLeft (NbFood (10,0,0,3)),Const 1),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (Mul TimeLeft PointLeft) Point) (NbVisited (3,10,3,3))),Mul (NbFood (10,0,0,3)) (NbFood (7,0,3,1))),(Sub (If (IsEnemy (1,5,0,1)) (If (Not (And (IsEnemy (1,5,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (8,3,2,0)) Point (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))) (Const 5),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (2,8,1,3)))) (Const 2) (Mul TimeLeft (Const 2))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (7,10,3,2)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (FoodHope (3,1,2,1))))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (NbFood (7,10,3,2)) (NbFood (3,0,1,0))) (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1))))),(Add (NbFood (10,0,0,3)) (NbFood (7,0,3,1)),NbVisited (3,10,3,3)),(Add PointLeft (Add (Sub (NbFood (8,0,3,0)) (NbEmpty (2,3,2,3))) (NbFood (8,0,3,0))),Add (Sub PointLeft (NbEmpty (2,3,2,3))) PointLeft),(Add (FoodHope (3,1,2,1)) (NbFood (10,0,0,3)),If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))),(NbFood (7,10,3,2),Mul (Add TimeLeft (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Const 1)))) (Mul (Mul (NbFood (7,0,3,1)) Point) (NbVisited (3,10,3,3)))),(Add (If (Not (And (IsEnemy (7,6,2,0)) (IsEnemy (0,1,3,2)))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (NbFood (3,0,1,0)),Sub (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) Point (NbFood (7,0,3,1))) (NbFood (10,0,0,3))))) (Const 5)),(Add PointLeft (Add (If (IsEnemy (2,6,0,2)) (If (Not (And (IsEnemy (2,6,0,2)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Const 4),(Add (Add (NbFood (7,10,3,2)) PointLeft) (NbFood (7,0,3,1)),If (IsEqual Point (NbFood (2,6,0,0))) (If (IsEqual Point (NbFood (2,6,0,0))) (Const 2) (Const 10)) (NbFood (3,0,1,0))),(Add PointLeft (NbFood (7,0,3,1)),Mul (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3))) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) TimeLeft))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller PointLeft (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point))),(If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0)),Add PointLeft (Add (If (And (Or (IsSmaller (FoodHope (4,0,3,1)) (NbEmpty (0,1,3,1))) (And (IsEnemy (9,8,3,1)) (IsFood (3,8,1,1)))) (IsEnemy (9,0,3,2))) (If (And (Or (IsSmaller (FoodHope (4,0,3,1)) (NbEmpty (0,1,3,1))) (And (IsEnemy (9,8,3,1)) (IsFood (3,8,1,1)))) (IsEnemy (9,0,3,2))) (Const 2) (Mul (NbFood (1,4,1,0)) (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(PointLeft,Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Const 1))),(Mul (NbVisited (10,7,0,0)) PointLeft,If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (NbFood (3,0,1,0)) (NbVisited (3,10,3,3))),(Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))))) TimeLeft (Mul PointLeft TimeLeft))) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point)),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbEmpty (2,3,2,3))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbFood (2,3,2,2)),Mul (NbVisited (10,6,2,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10))),(Const 1,Mul (NbFood (7,0,3,1)) (Mul (Mul (FoodHope (4,6,3,1)) (NbFood (7,8,1,3))) (Const 1))),(Point,Add (If (Not (And (IsEnemy (7,6,2,0)) (IsEnemy (0,1,3,2)))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Add (NbEmpty (0,0,1,1)) PointLeft)),Mul (NbFood (7,0,3,1)) (Mul PointLeft Point)),(Mul (NbFood (3,5,3,3)) (Mul TimeLeft (Const 1)),If (Not (And (IsFood (10,8,3,2)) (IsFood (5,4,2,3)))) (NbFood (0,9,2,1)) (NbEmpty (2,3,2,3))),(Sub (Add Point (Mul TimeLeft (Sub (Mul (FoodHope (8,6,1,3)) TimeLeft) (NbFood (7,10,3,0))))) (If (IsFood (0,6,1,2)) (Sub (NbFood (4,7,3,3)) (NbEmpty (6,4,0,2))) Point),Const 1),(Add (If (IsEqual Point (NbFood (2,6,0,0))) (If (IsEqual Point (NbFood (2,6,0,0))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)),NbFood (9,1,3,1)),(Mul TimeLeft (Mul TimeLeft (If (IsEnemy (7,3,0,2)) (Const 2) (NbFood (7,0,3,1)))),Mul (NbFood (7,0,3,1)) (Add (NbFood (7,0,3,1)) (NbFood (7,10,3,2)))),(Add PointLeft (Add (If (IsEnemy (7,5,0,1)) (Mul TimeLeft (Const 1)) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (Add (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))) (NbFood (7,0,3,1)))),Add (Add (NbFood (3,9,3,1)) PointLeft) (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (NbFood (3,8,0,1)) (NbFood (10,0,0,3)))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(NbVisited (6,10,2,2),FoodHope (0,6,1,2)),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) PointLeft)),Mul (Add TimeLeft (NbFood (7,10,3,2))) PointLeft),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft TimeLeft)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),FoodHope (8,3,1,3)),(Add (NbEmpty (3,2,0,0)) (NbFood (7,10,3,2)),Sub (NbVisited (10,10,2,2)) (If (IsEqual (FoodHope (0,8,2,3)) (Mul (Sub (Mul TimeLeft PointLeft) (FoodHope (0,3,1,3))) Point)) (Sub TimeLeft (Sub (Add (FoodHope (0,2,0,2)) (NbFood (8,8,0,0))) (Sub (Sub (Const 5) PointLeft) (Add (NbFood (8,4,0,3)) (FoodHope (9,6,3,2)))))) (NbEmpty (9,2,0,0)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (Const 2) (NbFood (7,0,3,1)))),Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(If (Not (And (IsFood (4,6,1,1)) (IsFood (3,10,0,0)))) (Add (NbFood (7,10,3,2)) PointLeft) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))),Add (Add (NbFood (7,0,3,1)) PointLeft) (NbFood (7,0,3,1))),(Const 0,If (IsSmaller PointLeft (Const 4)) (If (IsSmaller PointLeft (Const 4)) (Const 2) (Const 10)) (NbFood (3,0,1,0))),(NbVisited (3,7,3,3),Add Point (Const 1)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (FoodHope (3,1,2,1))))),If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (NbFood (7,0,3,1)))))) (NbFood (3,0,1,0))),(PointLeft,Mul (NbFood (7,0,3,1)) (Mul (Add PointLeft (Add (Mul (NbFood (7,0,3,1)) PointLeft) (NbFood (10,0,0,3)))) (Const 1))),(If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (If (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0))) (NbVisited (3,7,0,2)) (Mul (Const 2) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul (Const 3) (FoodHope (3,1,2,1)))))) (NbFood (3,0,1,0)),NbEmpty (1,3,3,2)),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (Mul PointLeft PointLeft)),Mul TimeLeft (Mul (Const 2) (FoodHope (3,1,2,1)))),(Mul (Add (If (IsFood (0,7,1,1)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Add PointLeft (Add (If (IsEnemy (8,2,3,1)) (If (IsEnemy (8,2,3,1)) (Const 2) (Mul (Const 2) (If (Not (And (IsEnemy (8,2,3,1)) (IsEnemy (8,3,2,0)))) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))) (Mul (NbFood (7,10,3,2)) (Const 1)),Const 10),(Mul (NbFood (7,0,3,1)) (If (And (Or (IsFood (0,6,2,1)) (Or (IsEqual (NbEmpty (3,9,3,3)) (Add (Add (FoodHope (8,2,2,1)) (If (Or (IsEnemy (4,2,0,1)) (IsSmaller (NbEmpty (10,1,2,2)) (Add (NbFood (3,9,3,1)) (Mul (Mul TimeLeft (NbVisited (4,8,2,0))) (Sub (FoodHope (2,2,0,1)) (NbFood (1,4,1,0))))))) TimeLeft (Const 3))) (Mul (Add (Sub (Mul (If (And (IsFood (0,6,2,2)) (IsSmaller TimeLeft (Const 2))) (If (IsEqual PointLeft Point) PointLeft (NbEmpty (6,4,0,2))) (Const 1)) (NbEmpty (5,7,3,3))) (Add (Add (NbFood (5,3,3,3)) (Const 3)) (NbVisited (0,5,0,0)))) (Add (Mul PointLeft (Const 4)) (Mul Point PointLeft))) Point))) (IsSmaller Point (NbEmpty (0,8,0,0))))) (IsEqual (NbVisited (6,9,1,1)) (NbEmpty (6,0,0,2)))) (NbVisited (1,8,2,2)) (Mul TimeLeft Point)),Add PointLeft (Add (Sub (Const 1) (Mul PointLeft TimeLeft)) (NbFood (8,0,3,0)))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (NbEmpty (2,3,2,3)),Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),(Mul (NbFood (7,0,3,1)) TimeLeft,Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Add TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))) (NbVisited (3,10,3,3)))),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft (If (IsSmaller Point (NbFood (0,5,2,3))) (Const 2) (NbFood (7,0,3,1)))),Add PointLeft (Add (If (IsEnemy (5,5,3,3)) (If (IsEnemy (5,5,3,3)) (Const 2) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3)))),(TimeLeft,Mul (NbFood (7,0,3,1)) (Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsEnemy (0,1,3,2)))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) TimeLeft) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))) (Const 1))),(Mul (NbFood (7,0,3,1)) (NbFood (7,0,3,1)),Add (If (Not (And (IsEnemy (7,6,2,0)) (IsEnemy (0,1,3,2)))) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (Mul TimeLeft (Mul Point (NbFood (8,3,0,1))))),(Mul (NbFood (7,0,3,1)) PointLeft,Point),(Mul (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (Const 1) PointLeft) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))) (NbFood (2,6,2,1)),NbVisited (10,5,1,1)),(Mul (NbFood (7,0,3,1)) (Mul TimeLeft PointLeft),Add (Add TimeLeft (NbFood (7,10,3,2))) (If (IsEnemy (7,3,0,2)) (Const 2) (NbFood (7,0,3,1)))),(Add PointLeft (Add (If (IsEnemy (7,5,0,1)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,9,2,2)) (Mul (NbVisited (7,7,0,3)) (If (IsEnemy (5,5,3,3)) (NbVisited (10,7,0,0)) (NbVisited (3,10,3,3))))) (NbFood (3,0,1,0))) (NbFood (10,0,0,3))),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Const 2) (NbFood (2,3,2,2))),(Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft,If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (NbVisited (10,9,2,2)) (NbFood (2,3,2,2))),(If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (FoodHope (8,3,1,3)) (NbEmpty (9,3,1,0)),If (Not (And (IsFood (10,8,0,1)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbEmpty (9,3,1,0))),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbEmpty (2,3,2,3))) PointLeft) (NbFood (2,3,2,2)),Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbFood (7,10,3,2)))),(If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (Const 1) PointLeft) (FoodHope (4,6,3,1)),NbEmpty (0,0,1,1)),(If (Not (And (IsFood (4,6,1,1)) (IsFood (3,10,0,0)))) (Add (NbFood (7,0,3,1)) PointLeft) (Add (If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (NbVisited (4,5,0,2))) (Add PointLeft (Const 2))),Mul (NbFood (7,10,1,3)) (NbVisited (10,5,1,1))),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul Point (Mul (NbFood (7,0,3,1)) TimeLeft)) PointLeft),Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3)))),(Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (Mul (NbFood (7,0,3,1)) (Mul (Const 1) (FoodHope (0,3,1,3)))) PointLeft)) (NbEmpty (2,3,2,3))),Mul (Sub TimeLeft (FoodHope (4,5,1,1))) TimeLeft),(TimeLeft,Const 1),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul PointLeft PointLeft),Add (Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) TimeLeft)) (Add (If (IsEnemy (2,8,1,3)) (NbVisited (10,9,2,2)) PointLeft) (NbFood (10,0,0,3)))),(Const 4,Point),(Add PointLeft (Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Mul (NbFood (7,0,3,1)) (Const 2)),(Add TimeLeft (Add TimeLeft (NbFood (7,10,3,2))),Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft),(Mul (NbFood (10,0,0,3)) (Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Mul Point (NbVisited (2,0,0,3))) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),Mul TimeLeft PointLeft),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (Const 2)) (NbFood (7,0,3,1))),NbFood (3,0,1,0)),(NbFood (7,0,3,1),Mul (Mul (NbFood (7,0,3,1)) (Mul TimeLeft (NbEmpty (2,3,2,3)))) TimeLeft),(Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul (NbFood (7,0,3,1)) (Add TimeLeft (Add TimeLeft (NbFood (7,10,3,2))))) (NbVisited (3,10,3,3))),Const 1),(Mul (NbFood (7,0,3,1)) (Mul PointLeft (Add (FoodHope (8,3,1,3)) PointLeft)),Add PointLeft (Add (If (IsFood (8,2,2,1)) (If (IsFood (8,2,2,1)) (Const 2) (Mul TimeLeft (NbEmpty (0,0,1,1)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Const 1) (NbEmpty (2,3,2,3)),Mul (NbFood (7,0,3,1)) (Const 2)),(Mul TimeLeft (FoodHope (7,4,3,2)),Mul (Add TimeLeft (NbFood (7,10,3,2))) (Mul (Mul Point (Mul (NbVisited (8,10,0,2)) (NbFood (7,0,3,1)))) PointLeft)),(Mul (NbFood (7,0,3,1)) (Mul (NbFood (7,0,3,1)) (NbEmpty (1,8,2,3))),If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (Const 1) (NbEmpty (2,3,2,3))),(If (Not (And (IsEnemy (7,6,2,0)) (IsFood (3,10,0,0)))) (Add (NbEmpty (0,0,1,1)) PointLeft) (Const 10),Mul (NbFood (10,0,0,3)) (Mul TimeLeft PointLeft)),(If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Add (Add TimeLeft (NbFood (7,10,3,2))) PointLeft) (If (Not (And (Or (IsEnemy (2,10,3,0)) (IsEnemy (7,6,3,2))) (IsFood (3,8,1,3)))) (NbFood (5,2,0,1)) (FoodHope (0,6,1,2))),Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1)))),(Mul (NbFood (10,0,0,3)) (Mul TimeLeft (Mul (NbFood (10,0,0,3)) (Mul (Const 2) Point))),PointLeft),(Add PointLeft (Add (If (IsEnemy (2,8,1,3)) (If (Not (And (IsFood (3,3,0,1)) (IsEnemy (8,3,2,0)))) (Const 2) (Mul TimeLeft (FoodHope (8,3,1,3)))) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),Add (If (IsEqual Point (NbFood (2,6,0,0))) (If (IsEqual Point (NbFood (2,6,0,0))) (Const 2) (Const 10)) (NbFood (3,0,1,0))) (NbFood (7,0,3,1))),(Mul (NbFood (7,0,3,1)) (Mul (Add TimeLeft (NbFood (7,10,3,2))) (Add (NbEmpty (0,0,1,1)) PointLeft)),Add PointLeft PointLeft),(If (Not (And (IsFood (10,8,3,2)) (IsFood (3,10,0,0)))) (NbVisited (10,9,2,2)) (NbEmpty (2,3,2,3)),If (Not (And (IsEnemy (7,5,1,2)) (IsFood (3,10,0,0)))) (Const 1) (NbFood (2,3,2,2)))]