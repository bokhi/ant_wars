[(Mul (Sub (NbEmpty (4,4,2,0)) (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbVisited (6,6,0,3)) (Const 4)))) (Add (NbFood (3,10,0,1)) (Const 1)),Add (Const 2) (Sub (Const 0) (Mul PointLeft (NbFood (9,9,1,2))))),(Point,If (IsEqual (Mul (Add (NbVisited (1,5,1,2)) (NbFood (5,10,3,0))) Point) (NbVisited (4,5,1,3))) (NbFood (3,9,3,1)) (If (IsSmaller (Mul (If (Or (IsFood (8,5,0,0)) (IsFood (10,2,2,3))) (NbVisited (10,1,1,0)) (Mul PointLeft (NbEmpty (9,4,0,0)))) (Sub (NbVisited (6,3,2,2)) (Mul (NbFood (6,9,3,2)) (Const 4)))) (Add (Mul (NbEmpty (10,6,0,0)) (NbEmpty (9,0,3,1))) (Mul (NbEmpty (8,5,0,3)) (NbEmpty (3,0,2,2))))) (Const 0) (Const 4))),(Const 1,Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1))))),(Const 0,NbFood (9,8,0,2)),(Mul (Mul (NbVisited (9,3,3,3)) (NbFood (9,9,1,2))) (Const 2),PointLeft),(Point,Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add PointLeft (Const 2))) (Mul (Add (Const 5) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0))))),(Mul (Add (Sub Point (NbEmpty (8,5,0,3))) (Mul (NbEmpty (4,0,3,3)) (Mul (NbVisited (7,1,1,2)) (Const 5)))) (Mul (Mul (Const 3) (If (IsSmaller (Mul PointLeft (Const 2)) (Add Point (NbEmpty (5,3,0,2)))) (If (And (IsFood (10,1,1,3)) (IsEnemy (2,6,3,3))) PointLeft (Sub (NbVisited (1,5,1,1)) PointLeft)) (Mul PointLeft (NbFood (9,9,1,2))))) (NbEmpty (7,8,1,3))),Mul (NbVisited (5,2,0,1)) (Add (NbFood (3,10,0,1)) (Const 1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (9,8,0,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) (Add Point PointLeft)) (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1)))),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3)),(If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1)),If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(Mul (Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 4)),Const 0),(Const 0,Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1))),(Point,NbFood (7,4,2,1)),(Mul (Add Point Point) (Const 2),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbFood (3,10,0,1)))),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Const 0)) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Const 5),(If (IsEnemy (3,0,1,0)) (Mul PointLeft (NbFood (9,9,1,2))) (NbFood (8,0,2,1)),Mul (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (Add (NbFood (3,10,0,1)) (Const 1))),(NbVisited (2,4,2,0),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbFood (8,5,3,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbVisited (4,7,0,2)) (Const 1)),Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)),Add (If (IsEqual (Add (NbFood (3,10,0,1)) (Const 1)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(Mul (Mul (Const 3) (NbFood (9,9,1,2))) Point,Add (NbEmpty (5,8,0,1)) (Add (NbVisited (0,9,0,0)) (NbEmpty (0,1,1,2)))),(Mul (Sub (NbFood (10,2,0,2)) PointLeft) (Mul (Add Point (If (IsFood (3,9,3,3)) PointLeft Point)) (NbFood (3,9,0,0))),Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add PointLeft (Const 2))) (Mul (Add (Const 5) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0))))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Const 3) (NbEmpty (0,1,1,2))),Add (NbEmpty (5,8,0,1)) (Const 2)),(If (IsEnemy (3,0,1,0)) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))) (Const 1),NbFood (6,9,2,0)),(Const 0,NbFood (8,5,3,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (9,3,1,2)) (Const 1)),Const 2),(NbVisited (8,5,3,1),Mul (NbVisited (2,3,1,0)) (Add Point (Const 1))),(Add (If (IsEqual (If (And (Not (IsEnemy (7,2,3,0))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Const 0),(NbEmpty (3,2,3,3),If (IsEnemy (3,6,2,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (Const 2) (NbVisited (0,7,3,3))) (NbFood (0,5,2,3))) (Sub (NbVisited (0,9,1,2)) (Sub (Add (NbEmpty (10,2,3,1)) (NbEmpty (7,0,3,3))) (Mul (NbEmpty (5,2,2,2)) (Add (If (IsFood (4,6,2,2)) Point PointLeft) (Sub (Const 0) (NbEmpty (4,2,1,0)))))))),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbFood (10,8,2,3)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),NbVisited (2,4,2,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (NbFood (10,8,2,3)) (Add (NbFood (10,8,2,3)) (Const 1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (Const 1))),(NbFood (3,10,0,1),NbFood (3,10,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (NbEmpty (3,0,3,1))),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbVisited (4,7,0,2)) (Const 1))),(Add (If (IsEqual (NbFood (3,10,0,1)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Point),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1))),Mul (NbFood (3,10,0,1)) (Add Point (Const 1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1))),(Const 4,Sub (Sub (Sub (NbFood (9,8,0,2)) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Add (Const 2) (Sub (Const 0) (Sub (NbEmpty (4,4,2,0)) (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) PointLeft)))))) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),NbEmpty (7,2,1,0)),(Mul (NbFood (10,8,2,3)) (Mul PointLeft (Mul (NbEmpty (7,4,0,0)) (Const 1))),Add (NbFood (9,0,2,2)) (NbVisited (6,4,3,2))),(NbFood (10,1,0,1),NbFood (3,10,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (9,8,0,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (3,10,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add PointLeft (Const 1)),NbFood (9,8,2,0)),(Mul (Mul PointLeft (Mul PointLeft PointLeft)) (Add (NbFood (3,10,0,1)) (Const 1)),Mul (NbFood (9,9,1,2)) (Const 5)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(Mul (If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1))) PointLeft,Mul PointLeft (NbFood (9,9,1,2))),(If (IsEnemy (3,5,3,2)) (NbFood (9,2,3,2)) (NbVisited (4,6,3,3)),NbVisited (10,7,1,1)),(Sub (NbEmpty (8,7,2,0)) (Mul (NbFood (0,10,1,2)) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))),Mul (Sub (NbFood (10,2,0,2)) PointLeft) (Mul (Add Point (If (IsFood (3,9,3,3)) PointLeft Point)) (NbFood (3,9,0,0)))),(Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add PointLeft (Const 2))) (NbVisited (1,4,3,2))),If (And (IsEnemy (4,4,3,2)) (IsSmaller Point (NbEmpty (4,1,0,3)))) (Mul (If (Not (And (And (IsEnemy (4,4,3,2)) (IsSmaller Point (NbEmpty (4,1,0,3)))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1)))),(If (IsEnemy (3,6,2,3)) (NbEmpty (4,5,1,3)) (Sub (NbVisited (0,9,1,2)) (Sub (Add (NbEmpty (10,2,3,1)) (NbEmpty (7,0,3,3))) (Mul (NbEmpty (5,2,2,2)) (Add (If (IsFood (4,6,2,2)) Point PointLeft) (Sub (Const 0) (NbEmpty (4,2,1,0))))))),PointLeft),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (3,4,1,1))) (NbFood (8,0,2,1)),If (IsEnemy (2,6,3,1)) (NbVisited (9,10,2,0)) (NbEmpty (8,3,3,0))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (9,8,0,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (3,10,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Const 3) (NbEmpty (0,1,1,2))),If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1))),(NbFood (8,5,3,0),Add (NbEmpty (5,8,0,1)) (Const 2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4))) (NbEmpty (4,4,2,0))),Add (Const 2) (Sub (Const 0) (Sub (NbEmpty (3,0,3,1)) (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbVisited (6,6,0,3)) (Const 4)))))),(Add (Const 2) (Sub (Const 0) (Sub Point (NbFood (3,10,0,1)))),If (IsEqual (Mul (Add (NbVisited (1,5,1,2)) (NbFood (5,10,3,0))) Point) (NbVisited (4,5,1,3))) (NbFood (3,9,3,1)) (If (IsSmaller (Mul (If (Or (IsFood (8,5,0,0)) (IsFood (10,2,2,3))) (NbVisited (10,1,1,0)) (Mul PointLeft (NbEmpty (9,4,0,0)))) (Sub (NbVisited (6,3,2,2)) (Mul (NbFood (6,9,3,2)) (Const 4)))) (Add (Mul (NbEmpty (10,6,0,0)) (NbEmpty (9,0,3,1))) (Mul (NbEmpty (8,5,0,3)) (NbEmpty (3,0,2,2))))) Point (Const 4))),(NbFood (10,8,2,3),NbFood (10,1,0,1)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))))) (NbFood (8,0,2,1)),NbEmpty (8,3,3,0)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),NbFood (8,5,3,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (7,10,0,2)) (Const 1)),Point),(Mul (Mul PointLeft (NbFood (0,7,3,1))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Sub (Sub (NbFood (1,9,2,2)) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(NbFood (10,8,2,3),NbFood (10,1,0,1)),(NbFood (10,8,2,3),NbFood (10,1,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul (NbFood (4,2,1,2)) (NbFood (9,9,1,2))) (Add Point (Const 1)),NbVisited (9,10,0,1)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (Const 0),NbFood (9,5,2,1)),(If (IsEnemy (3,0,1,0)) (Const 1) (NbFood (8,0,2,1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (NbFood (0,5,2,3)))),(If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0)),NbFood (3,10,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Sub (NbEmpty (8,7,2,0)) (Add PointLeft (Const 2)),Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Mul (NbFood (0,10,1,2)) (NbEmpty (10,2,2,2)))) (Mul (Add (Const 5) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0))))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (3,10,0,1)),(NbVisited (8,6,2,0),Sub (Const 2) (Mul (NbFood (0,10,1,2)) (NbEmpty (10,2,2,2)))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)))) (Add (NbEmpty (5,6,0,2)) (NbEmpty (3,0,3,1))),Const 1),(NbVisited (4,5,0,3),Mul (Mul PointLeft Point) (Add (NbFood (3,10,0,1)) (Const 1))),(If (IsEqual (NbFood (9,1,1,2)) (Const 0)) (NbFood (4,2,2,0)) (If (IsFood (0,7,0,1)) (If (Not (IsSmaller (NbFood (7,5,3,0)) (NbFood (9,9,1,0)))) (Const 1) (Add (Const 3) (NbVisited (6,9,0,3)))) (Sub (Add (Mul (Const 2) PointLeft) (If (IsFood (7,3,1,1)) Point (Const 2))) (Add (If (IsEnemy (0,7,3,3)) Point (NbVisited (10,1,3,3))) Point))),If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) (Add Point PointLeft)) (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1)))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (9,8,0,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1)))) (Add (NbFood (3,10,0,1)) (Const 1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbFood (9,9,1,2))),(PointLeft,Sub (Sub (NbVisited (6,3,0,0)) (Mul PointLeft (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) Point),NbEmpty (1,3,0,3)),(Mul PointLeft (NbFood (9,9,1,2)),Sub (NbVisited (1,0,2,0)) (Add (NbEmpty (7,1,2,3)) (Const 1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Mul PointLeft (NbFood (9,9,1,2))))) (If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1)))),Mul (Const 4) PointLeft),(NbVisited (8,6,3,0),If (IsEnemy (7,3,2,0)) (Mul (If (Not (IsEnemy (7,3,2,0))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1)))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4))) PointLeft),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) PointLeft) (NbFood (8,0,2,1))),(Add (Const 2) (Sub (NbFood (9,8,2,0)) (NbFood (5,0,2,3))),Const 0),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbVisited (2,4,2,0)) (NbEmpty (3,0,3,1)))),(Const 1,Mul (NbFood (3,10,0,1)) (Add Point (NbFood (8,5,3,0)))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) (Add Point PointLeft)) (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1)))),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1))) (NbFood (8,0,2,1)),If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))),(Sub (Sub (Sub (Const 4) (Add (NbFood (8,5,3,0)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3),NbVisited (2,3,3,3)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (3,10,0,1)),(Mul (Mul (If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1))) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),PointLeft),(NbVisited (2,4,2,0),If (IsEnemy (7,2,3,0)) (Const 0) (NbEmpty (8,3,3,0))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft PointLeft) (Add (NbFood (3,10,0,1)) (Const 1)),Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (NbFood (1,0,1,2))) (NbFood (9,10,2,1))),(Mul (Mul PointLeft PointLeft) (Add (NbFood (3,10,0,1)) (Const 1)),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (Mul (Mul (NbFood (9,9,1,2)) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))))) (NbFood (8,0,2,1))),(NbEmpty (8,3,3,0),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (10,8,2,3)) (Const 1)),NbFood (3,10,0,1)),(NbFood (10,1,0,1),Const 0),(Add (NbEmpty (0,9,3,3)) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))),Point),(Const 0,NbVisited (4,8,3,1)),(NbEmpty (1,9,3,0),NbFood (3,6,3,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) PointLeft,If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) PointLeft) (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1)))),(Mul (NbEmpty (8,3,3,0)) (Add (NbFood (9,9,1,2)) (Const 1)),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (Mul PointLeft (NbFood (9,9,1,2)))) (NbFood (8,0,2,1))),(Mul (Mul PointLeft (NbFood (3,10,0,1))) (NbFood (8,5,3,0)),Add (NbFood (3,10,0,1)) (Const 1)),(Mul (Mul PointLeft (NbFood (0,7,2,3))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 4),(NbFood (10,1,0,1),Const 0),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,6,3,3)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(NbVisited (1,1,1,0),NbFood (8,5,3,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (NbEmpty (7,8,1,3))),If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) (Add Point PointLeft)) (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (NbVisited (1,10,1,3)) (Sub PointLeft (NbFood (9,7,2,0))))) Point) Point),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbVisited (2,0,1,3)) PointLeft),NbVisited (7,1,0,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Const 2),Point),(NbEmpty (7,8,1,3),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbFood (10,8,2,3)))),(If (And (IsFood (10,1,1,3)) (IsEnemy (2,6,3,3))) PointLeft (Sub (NbVisited (1,5,1,1)) PointLeft),Mul (Add (Sub Point (NbEmpty (8,5,0,3))) (Mul (NbEmpty (4,0,3,3)) (Mul (NbVisited (7,1,1,2)) (Const 5)))) (Mul (Mul (Const 3) (If (IsSmaller (Mul PointLeft (Const 2)) (Add Point (NbEmpty (5,3,0,2)))) (NbFood (10,1,0,1)) (NbVisited (5,2,0,1)))) (NbEmpty (3,0,3,1)))),(NbFood (3,10,0,1),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Const 2)),(Const 0,NbFood (10,1,0,1)),(Add (NbFood (8,6,0,1)) (Add (Const 3) (Mul PointLeft (Add (NbFood (3,10,0,1)) (Const 1)))),Mul (Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1)))),(NbVisited (6,3,0,0),Sub (Sub PointLeft (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) PointLeft) (NbFood (8,0,2,1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1))),(NbFood (9,8,0,2),NbFood (9,8,2,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbVisited (4,7,0,2)) (Const 1)),NbEmpty (7,0,1,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (3,4,1,1))) (NbFood (8,0,2,1)),If (IsEnemy (2,6,3,1)) (NbVisited (9,10,2,0)) (NbEmpty (8,3,3,0))),(NbFood (10,1,0,1),If (IsEnemy (3,6,2,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (Const 2) (NbVisited (0,7,3,3))) (NbEmpty (3,2,3,3))) (Sub (NbVisited (0,9,1,2)) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add PointLeft (Const 2))) (Mul (Add (Add Point (If (IsFood (3,9,3,3)) PointLeft Point)) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0)))))),(Mul (Mul PointLeft (NbFood (3,10,0,1))) (Add (NbFood (3,10,0,1)) (Const 1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (9,9,1,2)) (NbEmpty (3,0,3,1)))),(PointLeft,Sub (Sub (NbVisited (6,3,0,0)) (Mul PointLeft (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(Mul (Sub (If (IsFood (0,3,2,1)) PointLeft (NbVisited (5,3,1,3))) (NbVisited (10,9,0,1))) Point,Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Add Point (Const 1)) (Const 1))),(NbFood (3,10,0,1),Const 0),(Mul (Mul PointLeft (NbFood (3,10,0,1))) (Add (Const 3) (NbEmpty (0,1,1,2))),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (9,9,1,2)) (Const 1))),(Const 0,Const 0),(Add (If (Or (IsEnemy (6,10,3,2)) (And (IsEnemy (10,8,3,0)) (IsEnemy (4,4,0,2)))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),PointLeft),(If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1)),If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(NbEmpty (6,7,2,1),Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (5,1,1,3)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 4)) (Mul (NbVisited (8,6,2,3)) (Const 5))) PointLeft (Const 5)) (NbFood (9,10,2,1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (9,8,0,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (6,0,2,2)) (Const 1)),NbEmpty (9,9,3,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (9,8,0,2)),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,6,3,3)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),NbVisited (1,1,1,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbFood (9,9,1,2)),Mul (Mul PointLeft (Add (NbFood (3,10,0,1)) (Const 1))) (Add (NbFood (3,10,0,1)) (Const 1))),(Const 0,Const 0),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),NbFood (8,5,3,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft PointLeft) (NbEmpty (3,0,3,1))),Mul (NbFood (3,10,0,1)) (Add (NbFood (6,6,2,0)) (Const 1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)))) (Add (NbEmpty (5,6,0,2)) (NbEmpty (3,0,3,1))),Const 1),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbFood (3,10,0,1)),Mul (Mul PointLeft (Mul PointLeft (NbFood (9,9,1,2)))) (Add (Add (NbFood (3,10,0,1)) (Const 1)) (Const 1))),(Mul (NbFood (9,9,1,2)) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)),Add (If (IsEqual (Add (NbFood (3,10,0,1)) (Const 1)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Const 3) (NbEmpty (0,1,1,2))),Add (NbEmpty (5,8,0,1)) (Const 2)),(Mul (Mul PointLeft (NbFood (8,0,2,1))) (Add (NbFood (3,10,0,1)) (Const 1)),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (9,9,1,2))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul PointLeft (NbFood (10,3,2,3)),Mul (Mul (Mul Point (NbFood (9,9,1,2))) (Add (NbVisited (4,7,0,2)) (Const 1))) (Add (NbFood (3,10,0,1)) (Const 1))),(Const 0,NbEmpty (7,0,1,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(If (IsEnemy (7,5,1,1)) (If (IsEnemy (7,5,1,1)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Sub (Sub (Sub (Const 4) (Add (NbVisited (4,2,1,2)) (Add (Mul (Add (Sub (NbVisited (3,4,0,1)) (If (IsFood (8,3,0,1)) (Sub (NbVisited (9,2,0,1)) (NbVisited (10,1,0,2))) (NbEmpty (0,4,2,0)))) (Add Point (Const 5))) Point) (Mul Point (NbFood (1,5,0,3)))))) (Const 3)) (Const 3)),(If (IsFood (3,1,3,1)) (If (IsFood (3,1,3,1)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (7,4,2,1)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),NbFood (8,5,3,0)),(Mul (Mul (NbEmpty (9,1,3,2)) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),NbVisited (6,1,1,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (10,8,2,3)) (Const 1)),NbFood (3,10,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1))),Mul (NbFood (3,10,0,1)) (Add Point (Const 1))),(Mul (Mul (NbVisited (2,4,2,0)) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) PointLeft (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1))),(NbFood (8,5,3,0),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Mul PointLeft (NbFood (9,9,1,2))),Mul (Add (NbFood (3,10,0,1)) (Const 1)) (Add (NbFood (3,10,0,1)) (Const 1))),(Const 0,Const 0),(Mul (Mul (If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1))) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),PointLeft),(NbEmpty (3,1,3,2),If (IsEnemy (4,10,0,2)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))),(NbVisited (0,1,0,2),Const 1),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(If (IsEnemy (3,6,2,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (Const 2) (NbVisited (0,7,3,3))) PointLeft) (Sub (NbVisited (0,9,1,2)) (Sub (Add (NbEmpty (10,2,3,1)) (NbEmpty (7,0,3,3))) (Mul (NbEmpty (5,2,2,2)) (Add (If (IsFood (4,6,2,2)) Point PointLeft) (Add (NbVisited (6,3,1,3)) (Add Point (NbVisited (8,6,2,0)))))))),If (IsFood (7,10,0,3)) (NbVisited (9,10,2,0)) (NbEmpty (5,10,0,0))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add PointLeft (Const 1)),NbVisited (10,10,3,3)),(Add (Mul (NbVisited (8,6,2,3)) (Const 5)) (NbFood (9,10,2,1)),Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsEnemy (2,5,1,1)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(Const 4,Const 3),(PointLeft,Mul (Mul (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft PointLeft) (NbEmpty (3,0,3,1)))) (NbFood (9,9,1,2))) (Add (NbFood (10,8,2,3)) (Const 1))),(Mul (NbFood (3,10,0,1)) (NbFood (3,10,0,1)),Add (NbFood (6,6,2,0)) (Const 1)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4))) PointLeft),Add (Const 2) (Sub (Const 0) (NbFood (5,0,2,3)))),(Mul (Mul PointLeft (Const 2)) (Add Point (Const 1)),NbFood (4,10,3,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4))) (If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1)))),NbEmpty (3,0,3,1)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))))) PointLeft,Mul (Const 3) (NbFood (9,9,1,2))),(Mul (NbVisited (9,6,3,0)) (Add (NbFood (3,10,0,1)) (Const 1)),NbEmpty (8,3,3,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) Point),NbEmpty (0,10,1,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Const 4,Const 4),(Mul (Mul PointLeft (Const 1)) (Const 2),Mul (Mul PointLeft (NbFood (9,9,1,2))) Point),(NbEmpty (5,10,1,2),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) PointLeft (NbFood (3,10,0,1))) (NbFood (8,0,2,1))),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))),(Const 4,Sub (Sub (Sub (Const 0) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3)),(Mul (Mul PointLeft (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)))) (Add (NbEmpty (5,6,0,2)) (NbEmpty (3,0,3,1))),Const 1),(Add (Const 2) (Sub (Const 0) (Sub (NbEmpty (4,4,2,0)) (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbVisited (6,6,0,3)) (Mul PointLeft (NbFood (9,9,1,2))))))),Mul (Const 4) (Add (NbFood (3,10,0,1)) (Const 1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (9,8,0,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (Const 1)) PointLeft,Mul (Mul (NbVisited (2,0,0,1)) (NbFood (9,9,1,2))) (Const 2)),(If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) Point (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1))),Sub (NbVisited (6,10,3,2)) PointLeft),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Sub (Mul (NbEmpty (0,4,2,2)) PointLeft) (Sub (NbEmpty (10,6,0,0)) (Const 4))) (NbEmpty (3,0,3,1))),Add (Const 2) (Sub (Const 0) (Sub (Const 4) (NbFood (3,10,0,1))))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,6,3,3)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(PointLeft,Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,6,3,3)) (IsFood (2,1,3,0)))) (NbVisited (4,1,0,3)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(Mul (Add (Sub Point (NbEmpty (8,5,0,3))) (Mul (NbEmpty (4,0,3,3)) (Mul (NbVisited (7,1,1,2)) (Const 5)))) (Mul (Mul (Const 3) (If (IsSmaller (Mul (NbFood (2,3,3,2)) (Const 2)) (Add Point (NbEmpty (5,3,0,2)))) (If (And (IsFood (10,1,1,3)) (IsEnemy (2,6,3,3))) PointLeft (Sub (NbVisited (1,5,1,1)) (NbVisited (1,1,1,0)))) (NbVisited (5,2,0,1)))) (NbEmpty (3,0,3,1))),PointLeft),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,10,2,1))) (NbEmpty (3,0,3,1))),Add (If (IsEqual (If (And (Not (IsEnemy (7,2,3,0))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,9,1,2))),(NbVisited (4,3,2,3),Const 4),(PointLeft,Mul (Mul (If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1))) (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1)))),(If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (Mul (NbFood (3,10,0,1)) (Add Point (Const 1))),NbEmpty (8,3,3,0)),(Point,Mul PointLeft (Sub (NbVisited (0,8,1,3)) (Add (NbFood (8,6,3,0)) (NbEmpty (1,0,1,2))))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (9,8,0,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (Mul PointLeft (NbFood (9,9,1,2)))) (Add (NbFood (3,10,0,1)) (Const 1)),Mul (NbFood (9,9,1,2)) (Add (NbFood (3,10,0,1)) (Const 1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(NbFood (0,5,2,3),If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) (Add Point PointLeft)) (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1)))),(Mul (Const 2) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Add (Mul PointLeft (NbFood (9,9,1,2))) (Sub (Const 0) (Sub (NbEmpty (4,4,2,0)) (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4)))))),(Sub (NbVisited (9,10,2,0)) (Add (NbFood (5,0,0,1)) Point),If (IsEnemy (2,6,3,1)) (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) (NbEmpty (3,4,1,1))),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1))),(Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbFood (3,10,0,1)))))) (Const 3)) (Const 3),NbVisited (1,0,1,2)),(Mul (Mul PointLeft (NbFood (8,0,2,1))) (Add (NbFood (3,10,0,1)) (Const 1)),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (9,9,1,2))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (Add (NbFood (3,10,0,1)) (Const 1)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Mul (Mul PointLeft (Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbVisited (8,6,2,3)))) (Add (NbEmpty (5,6,0,2)) (NbEmpty (3,0,3,1)))),(Const 1,Const 4),(Mul (Mul (Add (NbFood (3,10,0,1)) (Const 1)) (NbFood (9,9,1,2))) (Add (NbFood (9,9,1,2)) (Const 1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) PointLeft),(Mul (Mul PointLeft (NbFood (3,10,0,1))) (Const 1),NbFood (3,10,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) PointLeft,If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) PointLeft) (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1)))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Sub (NbFood (10,2,0,2)) PointLeft) (Mul (Add Point (If (IsFood (3,9,3,3)) PointLeft Point)) (NbFood (3,9,0,0))),Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add PointLeft (Const 2))) (Mul (Add (Const 5) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0))))),(NbFood (10,8,2,3),NbFood (10,1,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbVisited (4,7,0,2)) (Const 1)),Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) Point),NbVisited (2,9,3,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) PointLeft,Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))),(Mul (Add (Sub (NbVisited (3,8,3,2)) Point) (NbVisited (3,3,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),NbVisited (6,3,1,1)),(Mul (Mul PointLeft PointLeft) (Add (NbFood (3,10,0,1)) (Const 1)),Const 2),(Mul (Mul PointLeft (Mul (Const 2) (NbFood (9,9,1,2)))) (Add (NbFood (3,10,0,1)) (Const 1)),Mul (NbFood (9,9,1,2)) (NbFood (3,8,2,0))),(NbVisited (6,3,0,0),Sub (Sub (Const 0) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbFood (10,8,2,3))) Point,NbVisited (6,6,0,3)),(NbFood (10,1,0,1),NbFood (9,8,2,0)),(Mul Point (Add (NbFood (3,10,0,1)) (Const 1)),Point),(Mul (Mul PointLeft (NbFood (9,9,1,2))) PointLeft,If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) PointLeft) (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1)))),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),NbFood (8,5,3,0)),(Sub (NbEmpty (8,7,2,0)) (Const 7),Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Mul (NbFood (0,10,1,2)) (NbEmpty (10,2,2,2)))) (NbFood (7,7,1,3)))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) PointLeft,Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul (NbVisited (0,10,1,2)) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (Const 3) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1))),(NbFood (8,5,3,0),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (If (Not (IsEnemy (3,7,2,2))) (NbVisited (7,6,0,1)) (NbVisited (3,1,2,2))),NbEmpty (3,1,2,1)),(If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) (Add Point PointLeft)) (NbFood (3,4,1,3)),If (And (IsSmaller Point (Const 0)) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1)))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Add (If (IsEqual PointLeft (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),NbFood (3,6,3,1)),(Mul PointLeft (Add (NbFood (3,10,0,1)) (Const 1)),Point),(Mul (Mul PointLeft (NbFood (9,9,1,2))) PointLeft,If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) PointLeft) (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1)))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbVisited (5,10,0,2)) (Const 1)),NbVisited (1,4,3,2)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) PointLeft) (NbFood (8,0,2,1)),NbFood (9,8,2,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),NbFood (8,5,3,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Mul (NbEmpty (5,2,2,2)) (Add (If (IsFood (4,6,2,2)) Point PointLeft) (Sub (Const 0) (NbEmpty (4,2,1,0)))))),If (IsEnemy (3,6,2,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (Const 2) (NbVisited (0,7,3,3))) (NbEmpty (3,2,3,3))) (Sub (NbVisited (0,9,1,2)) (Sub (Add (NbEmpty (10,2,3,1)) (NbEmpty (7,0,3,3))) (Const 1)))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbFood (10,8,2,3)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),NbVisited (2,4,2,0)),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),NbVisited (5,5,3,2)),(NbFood (10,8,2,3),NbFood (10,1,0,1)),(NbFood (8,2,1,1),NbFood (1,9,3,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)),Add (If (IsEqual (Add (NbFood (3,10,0,1)) (Const 1)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(Add (Const 2) (Sub (Const 0) (Mul (If (IsSmaller (Const 3) (Mul (Mul (NbEmpty (6,6,3,1)) (NbFood (1,5,3,2))) (Sub (NbFood (8,9,0,2)) (If (IsSmaller (NbEmpty (8,4,1,1)) (NbEmpty (4,0,3,2))) PointLeft Point)))) PointLeft (Sub (NbEmpty (2,6,1,2)) (Add (Const 1) PointLeft))) Point)),Const 4),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (7,3,3,2))),PointLeft),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add PointLeft PointLeft),Mul (Mul (Const 1) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))),(Const 0,NbFood (7,2,3,3)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (Add (NbFood (3,10,0,1)) (Const 1))) (NbFood (8,0,2,1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (8,3,3,0))),(Sub (Sub (Sub (Const 4) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2))))) (Const 3)) (Const 3),NbVisited (2,3,3,3)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) PointLeft,If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) PointLeft) (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1)))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft PointLeft) (Add (NbFood (3,10,0,1)) PointLeft),Mul (Mul (NbFood (9,9,1,2)) (NbFood (9,9,1,2))) (Add Point (Const 1))),(NbFood (3,10,0,1),PointLeft),(Mul (NbFood (7,1,3,1)) (Add (NbFood (3,10,0,1)) (Const 1)),Mul PointLeft (NbFood (9,9,1,2))),(NbFood (10,1,0,1),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Const 1) (NbEmpty (3,0,3,1))),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Mul PointLeft (NbFood (9,9,1,2))))),(Const 0,Add Point (Const 1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(NbFood (10,8,2,3),NbFood (10,1,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(If (IsEnemy (3,6,2,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (Const 2) (NbVisited (0,7,3,3))) (NbEmpty (3,2,3,3))) (Sub (NbVisited (0,9,1,2)) (Sub (Add (NbEmpty (10,2,3,1)) (NbEmpty (7,0,3,3))) (Mul (NbEmpty (5,2,2,2)) (Add (If (IsFood (4,6,2,2)) PointLeft PointLeft) (Sub (Const 0) (NbEmpty (4,2,1,0))))))),Mul (Mul Point (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))),(Const 0,Const 3),(If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1)),If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))),(If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1)),If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))))) (NbFood (8,0,2,1)),NbEmpty (8,3,3,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbEmpty (0,0,3,3)) (Const 1)),NbVisited (6,7,1,0)),(Mul (NbVisited (9,8,3,2)) (Add (Mul (Const 2) (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1))),Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Add PointLeft (Sub (Const 0) (Sub (NbFood (5,10,2,3)) (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4))))))) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(Mul (NbFood (3,10,0,1)) (Const 5),Add Point (Const 1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1))),Mul (NbFood (3,10,0,1)) (Add Point (Const 1))),(Mul (NbFood (9,9,1,2)) (Add (NbFood (3,10,0,1)) (Const 1)),Mul (Mul PointLeft (Mul PointLeft (NbFood (9,9,1,2)))) (Add (NbEmpty (0,0,3,3)) (Const 1))),(PointLeft,PointLeft),(If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) Point,If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbFood (9,6,1,0))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) PointLeft),NbVisited (8,8,0,0)),(Mul (Mul (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),PointLeft),(Const 0,Const 0),(Sub PointLeft (Const 1),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbFood (9,2,0,3)))),(NbVisited (6,3,0,0),Sub (Sub (Const 0) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1)),NbFood (8,5,3,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (NbFood (10,8,2,3)) (Add Point (Const 1)),Mul PointLeft (NbFood (9,9,1,2))),(NbFood (10,1,0,1),NbFood (9,8,0,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))),Add (NbFood (3,10,0,1)) (Const 1)),(Const 0,Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft PointLeft) (NbEmpty (3,0,3,1))),Mul (NbFood (3,10,0,1)) (Add (NbFood (6,6,2,0)) (Const 1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (10,8,2,3)) (Const 1)),NbFood (3,10,0,1)),(NbFood (10,1,0,1),Const 0),(If (IsEnemy (3,0,1,0)) (NbFood (1,4,3,1)) (NbFood (8,0,2,1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbVisited (4,10,0,1))),(Add (NbFood (3,10,0,1)) PointLeft,PointLeft),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4))) PointLeft),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1))),(Const 5,Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (Const 4))))) (Const 3)) (Const 3)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),PointLeft),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,6,3,3)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Point),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1))),Mul (NbFood (3,10,0,1)) (Add Point (Const 1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1)),If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))),(Mul (NbEmpty (5,0,2,0)) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4))) PointLeft),Add (Const 2) (Sub (Const 0) (NbFood (5,0,2,3)))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),PointLeft),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) PointLeft,If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) PointLeft) (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1)))),(If (IsFood (5,3,1,1)) (If (IsFood (5,3,1,1)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbFood (10,6,3,1)))))) (Const 3)) (Const 3)),(If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1)),If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))),(Mul (Mul (If (IsFood (4,6,2,2)) Point PointLeft) (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1))),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Mul (NbEmpty (5,2,2,2)) (Add PointLeft (Sub (Const 0) (NbEmpty (4,2,1,0))))))),(Mul (NbEmpty (10,2,3,1)) (Add Point (Const 1)),If (IsEnemy (3,6,2,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (Const 2) (NbVisited (0,7,3,3))) (NbEmpty (3,2,3,3))) (Sub (NbVisited (0,9,1,2)) (Sub (Add (NbFood (3,10,0,1)) (NbEmpty (7,0,3,3))) (Const 1)))),(Mul (NbFood (10,8,2,3)) (Add (NbFood (3,10,0,1)) (Const 1)),Mul PointLeft (NbFood (9,9,1,2))),(NbFood (10,1,0,1),Const 0),(Add (If (IsEqual (NbFood (10,8,2,3)) (Mul (NbFood (8,7,0,0)) (Const 5))) (Const 1) (Const 5)) (NbFood (9,10,2,1)),If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)),(NbEmpty (9,5,3,0),Const 4),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Add (If (IsFood (0,4,1,1)) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Const 2),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (10,0,2,3)))) (NbFood (4,6,0,2)) (Const 5)) (NbEmpty (3,0,3,1))),Add (If (IsEqual (NbFood (3,10,0,1)) (Mul (NbVisited (8,6,2,3)) (Const 5))) PointLeft (Const 5)) (NbFood (9,10,2,1))),(If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (9,7,1,2)),NbFood (1,3,1,0)),(Mul (Mul PointLeft (Const 2)) (Add (NbEmpty (8,3,0,1)) (Const 1)),Const 0),(Point,Const 0),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) PointLeft,Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (Mul PointLeft (NbFood (9,9,1,2))),Mul (NbFood (8,0,2,1)) (Add (NbFood (3,10,0,1)) (Const 1))),(Const 0,NbFood (8,5,3,0)),(PointLeft,Mul (Mul (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))) (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1)))),(Add Point (Const 1),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Add (Sub Point (NbEmpty (8,5,0,3))) (Mul (NbEmpty (4,0,3,3)) (Mul (NbVisited (7,1,1,2)) (Const 5)))) (Mul (Mul (Const 3) (If (IsSmaller (Mul PointLeft (Const 2)) (Add Point (NbEmpty (5,3,0,2)))) (If (And (IsFood (10,1,1,3)) (IsEnemy (2,6,3,3))) PointLeft (Sub (NbVisited (1,5,1,1)) PointLeft)) (Mul PointLeft (NbFood (9,9,1,2))))) (NbEmpty (7,8,1,3))),Mul (NbVisited (5,2,0,1)) (Add (NbFood (3,10,0,1)) (Const 1))),(Mul (NbVisited (10,1,1,2)) (Add (NbFood (3,10,0,1)) (Const 1)),NbVisited (5,6,3,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Const 3) (NbEmpty (0,1,1,2))),Add (NbEmpty (5,8,0,1)) (Const 2)),(Add (Const 3) (NbEmpty (3,6,0,3)),Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add (NbVisited (3,7,0,1)) (Const 2))) (Mul (Add (Const 5) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0))))),(Mul (Add (Const 3) (NbVisited (5,9,2,0))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1))),Mul (NbFood (3,10,0,1)) (Add Point (NbEmpty (4,7,1,1)))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3)),(Mul (Mul PointLeft (NbEmpty (1,8,2,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Add (If (IsEqual (If (And (IsEqual (NbFood (9,9,1,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(Const 4,Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) PointLeft),NbVisited (8,8,0,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbEmpty (0,0,3,3)) (Const 1)),NbVisited (6,7,1,0)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (3,4,1,1))) (NbFood (8,0,2,1)),If (IsEnemy (2,6,3,1)) (NbVisited (9,10,2,0)) (NbEmpty (8,3,3,0))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,6,3,3)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(Mul (Mul (NbFood (8,6,3,1)) (NbFood (9,9,1,2))) (Add (NbEmpty (8,3,3,0)) (Const 1)),If (IsEnemy (1,9,1,3)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbFood (3,10,0,1))) (NbFood (8,0,2,1))),(Point,Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (9,8,0,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (IsEnemy (1,7,3,3))) (NbFood (4,6,0,2)) (Const 5)),Add (NbVisited (0,7,1,3)) (NbFood (9,10,2,1))),(Sub (Const 1) (Sub (Add (NbEmpty (10,2,3,1)) (NbEmpty (7,0,3,3))) (Mul (NbEmpty (5,2,2,2)) (Add PointLeft (Sub (Const 0) (NbEmpty (4,2,1,0)))))),If (IsEnemy (3,6,2,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (Const 2) (NbVisited (0,7,3,3))) (NbEmpty (3,2,3,3))) (Sub (NbVisited (0,9,1,2)) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add PointLeft (Const 2))) (Mul (Add (Add Point (If (IsFood (3,9,3,3)) PointLeft Point)) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0)))))),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),NbFood (8,5,3,0)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul (NbEmpty (0,4,2,2)) (NbFood (9,9,1,2))) (Add (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4))) PointLeft),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Sub (Mul PointLeft (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4))) (NbEmpty (3,0,3,1)))),(PointLeft,Sub (Const 0) (Sub Point (NbFood (3,10,0,1)))),(NbFood (0,5,2,3),If (IsEnemy (3,0,1,0)) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))) (NbFood (8,0,2,1))),(NbEmpty (8,3,3,0),If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (Const 0)),(Mul (Const 1) (Add (NbFood (3,10,0,1)) (Const 1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Mul PointLeft (NbFood (9,9,1,2))))),(Const 0,Const 0),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Const 1)) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Mul (NbVisited (8,6,2,3)) (Const 5)))),(NbEmpty (10,9,2,3),Point),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1))))) (NbEmpty (3,0,3,1))),Const 4),(Add (Const 2) (Sub PointLeft (Sub (NbEmpty (8,3,3,0)) (NbFood (3,10,0,1)))),NbEmpty (2,5,2,2)),(Mul (Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Mul PointLeft (Add (NbFood (3,10,0,1)) (Const 1))),(Const 0,Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add PointLeft (Const 1)),NbFood (7,2,3,3)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),NbFood (8,5,3,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (2,9,3,3)) (Const 1)),PointLeft),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))),(If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) (Add Point PointLeft)) (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1))),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Point),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (9,8,0,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Mul (NbEmpty (7,1,1,2)) (NbFood (9,10,2,3))),Mul (NbFood (3,10,0,1)) (NbFood (9,5,3,3))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Sub PointLeft Point) (NbEmpty (3,0,3,1))),Mul (Const 4) (Add (NbFood (3,10,0,1)) (Const 1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Const 3) (NbEmpty (0,1,1,2))),Add (NbEmpty (5,8,0,1)) (Const 2)),(Mul (Sub (NbFood (10,2,0,2)) PointLeft) (Mul (Add Point (If (IsFood (3,9,3,3)) PointLeft Point)) (NbFood (3,9,0,0))),Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add PointLeft (Const 2))) (Mul (Add (Const 5) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0))))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(Const 4,Const 0),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3)),(NbFood (10,8,2,3),NbFood (10,1,0,1)),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add PointLeft (Const 1))),(NbFood (9,8,2,0),Const 4),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbEmpty (5,8,3,3))) (NbEmpty (3,0,3,1))),Mul (NbFood (3,10,0,1)) (If (Or (IsFood (3,2,1,2)) (IsEnemy (5,5,2,2))) (If (IsEnemy (3,9,1,3)) (NbFood (7,6,2,1)) PointLeft) Point)),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Mul (Add (Sub Point (NbEmpty (8,5,0,3))) (Mul (NbEmpty (4,0,3,3)) (Mul (NbVisited (7,1,1,2)) (Const 5)))) (Mul (Mul (Const 3) (If (IsSmaller (Mul PointLeft (Const 2)) (Add Point (NbEmpty (5,3,0,2)))) (If (And (IsFood (10,1,1,3)) (IsEnemy (2,6,3,3))) PointLeft (Sub (NbVisited (1,5,1,1)) PointLeft)) (NbVisited (5,2,0,1)))) (NbEmpty (7,8,1,3)))),(Mul (Sub (Const 5) PointLeft) (Add (NbFood (3,10,0,1)) (Const 1)),NbFood (5,8,3,2)),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Add (Const 2) (Sub (Const 0) (Sub (NbEmpty (4,4,2,0)) (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4))))))) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Const 5),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (9,8,0,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul PointLeft (NbFood (9,9,1,2)),Mul (NbFood (10,8,2,3)) (Add (NbFood (3,10,0,1)) (Const 1))),(Const 0,NbFood (10,1,0,1)),(Mul (Mul PointLeft (Mul PointLeft (NbFood (9,9,1,2)))) (Mul (NbVisited (8,6,2,3)) (Const 5)),Add (If (IsEqual (If (And (IsEqual (NbFood (7,7,0,3)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Add (NbFood (3,10,0,1)) (Const 1))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(Mul (NbFood (9,9,1,2)) (Add (NbFood (3,10,0,1)) (Const 1)),Const 1),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft PointLeft) (NbEmpty (3,0,3,1))),Mul (NbFood (3,10,0,1)) (Add (NbFood (6,6,2,0)) (Const 1))),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3)),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (4,2,2,2)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Point),(Mul (Mul PointLeft (NbFood (9,9,1,2))) Point,Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Add (NbFood (9,9,1,2)) (Const 1)) (Const 1))),(Mul (Mul PointLeft (NbFood (3,10,0,1))) (Add (NbFood (3,10,0,1)) (NbFood (3,10,0,1))),Const 1),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5))),Add (Const 1) (NbFood (9,10,2,1))),(Const 4,Const 0),(If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (3,4,1,1)),If (IsEnemy (3,0,1,0)) (Add PointLeft (NbEmpty (0,1,1,2))) (NbFood (8,0,2,1))),(Add (NbEmpty (5,8,0,1)) (NbVisited (9,10,2,0)),If (IsEnemy (2,6,3,1)) Point (NbEmpty (8,3,3,0))),(NbFood (10,7,3,0),Sub (NbEmpty (8,7,2,0)) (Mul (NbFood (0,10,1,2)) (NbEmpty (10,2,2,2)))),(NbFood (10,8,2,3),NbFood (10,1,0,1)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbFood (7,1,3,1)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),NbVisited (2,4,2,0)),(Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (NbFood (10,1,0,1)))) (Const 3)) (NbVisited (6,7,1,2)),Point),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(If (IsFood (10,8,1,1)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1)),If (IsFood (10,10,2,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))),(Const 0,Const 0),(Mul (Mul PointLeft PointLeft) (Const 2),Mul (Mul PointLeft (Mul (Mul (NbFood (9,9,1,2)) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)))) (Add (NbEmpty (5,6,0,2)) (NbEmpty (3,0,3,1)))),(Const 1,Point),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbEmpty (8,3,3,0)) (Const 1)),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbFood (3,10,0,1))) (NbFood (8,0,2,1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul Point (Add (NbFood (3,10,0,1)) (NbFood (9,10,2,1))),Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (NbEmpty (5,5,1,0)))) (NbFood (6,10,0,2)) (Const 5)) (Const 1)),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 4))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Const 5),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add PointLeft (Const 1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbFood (3,10,0,1))),(If (IsFood (5,5,3,1)) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsFood (5,5,3,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1))),NbEmpty (4,8,1,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)))) (Add (NbEmpty (5,6,0,2)) (NbEmpty (3,0,3,1))),Const 1),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (9,9,1,2)) (Const 1)),Mul (Mul PointLeft (NbFood (3,10,0,1))) (Add (Const 3) (NbEmpty (0,1,1,2)))),(NbFood (3,3,1,1),PointLeft),(NbFood (10,8,2,3),NbFood (10,1,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1)))) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),PointLeft),(Point,Mul (NbFood (3,10,0,1)) (Const 1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1))),Mul (NbFood (3,10,0,1)) (Add Point (Const 1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Const 3) (NbEmpty (0,1,1,2))),Add (NbEmpty (5,8,0,1)) (Const 2)),(NbEmpty (4,9,0,2),If (IsFood (9,4,2,3)) PointLeft (Const 3)),(NbFood (9,8,2,0),Const 4),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,9,1,2))) PointLeft))),Mul (Mul (NbEmpty (3,0,3,1)) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))),(Point,Const 2),(Mul (Const 1) (Add (Sub PointLeft Point) (NbEmpty (3,0,3,1))),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (10,8,2,3)) (Mul PointLeft (NbFood (9,9,1,2))))),(Mul (Const 4) (NbFood (3,10,0,1)),Add (NbFood (3,10,0,1)) (Const 1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Mul (Const 1) (NbFood (9,9,1,2))))),Mul (Add (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1))) (Add (NbFood (3,10,0,1)) (Const 1))),(Const 1,NbEmpty (3,0,3,1)),(Sub (Mul (NbEmpty (10,3,2,3)) (Sub (Const 4) (NbFood (0,2,0,0)))) (Add (Sub (Sub (NbVisited (8,4,3,0)) (NbFood (9,5,3,3))) (If (And (And (IsFood (9,4,0,1)) (IsEnemy (2,10,1,3))) (IsFood (0,9,2,0))) PointLeft (If (IsEnemy (4,4,0,3)) (If (IsEnemy (9,6,0,3)) (NbFood (8,5,1,1)) Point) (Sub (NbVisited (2,10,2,2)) Point)))) (Const 4)),Add Point (If (IsEqual (NbFood (9,1,1,2)) (Const 0)) (NbFood (6,3,2,1)) (If (IsFood (0,7,0,1)) (If (Not (IsSmaller (NbFood (7,5,3,0)) (NbFood (9,9,1,0)))) (Const 1) (Add (Const 3) (NbVisited (6,9,0,3)))) (Sub (Add (Mul (Const 2) PointLeft) (If (IsFood (7,3,1,1)) Point (Const 2))) (Add (If (IsEnemy (0,7,3,3)) Point (NbVisited (10,1,3,3))) Point))))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Point),(PointLeft,Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1)))),(If (IsEnemy (3,6,2,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (Const 2) (NbVisited (0,7,3,3))) (NbEmpty (3,2,3,3))) (Sub (NbVisited (0,9,1,2)) (Sub (Add PointLeft (NbEmpty (7,0,3,3))) (Mul (NbEmpty (5,2,2,2)) (Add (If (IsFood (4,6,2,2)) Point PointLeft) (Sub (Const 1) (NbEmpty (4,2,1,0))))))),Mul (NbFood (3,10,0,1)) Point),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbFood (9,9,1,2))) (NbFood (8,0,2,1)),Mul (Mul PointLeft (NbEmpty (8,3,3,0))) (Add (NbFood (3,10,0,1)) (Const 1))),(Const (-2),Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2))))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (9,7,3,0))),NbVisited (3,0,0,0)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) PointLeft) (NbFood (8,0,2,1)),NbFood (9,8,2,0)),(Mul (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))) (Add Point (Const 1)),Mul PointLeft (NbFood (9,9,1,2))),(NbFood (9,5,3,3),PointLeft),(Sub (Sub (Mul PointLeft PointLeft) (NbEmpty (5,1,2,3))) (NbFood (8,7,1,2)),Mul (NbFood (3,10,0,1)) (Add (NbFood (6,6,2,0)) (NbVisited (3,5,1,1)))),(Mul (Sub (NbFood (10,2,0,2)) PointLeft) (Mul (Add Point (If (IsFood (3,9,3,3)) PointLeft Point)) (NbFood (3,9,0,0))),Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add PointLeft (Const 2))) (Mul (Add (Const 5) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0))))),(NbFood (3,10,0,1),If (IsEnemy (3,6,2,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (Const 2) (NbVisited (0,7,3,3))) (NbEmpty (3,2,3,3))) (Sub (NbVisited (0,9,1,2)) (Sub (Add PointLeft (NbEmpty (7,0,3,3))) (Mul (NbEmpty (5,2,2,2)) (Add (If (IsFood (4,6,2,2)) Point PointLeft) (Sub (Const 0) (NbEmpty (4,2,1,0)))))))),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbVisited (2,2,2,1))) (NbFood (8,0,2,1)),If (IsEnemy (3,1,2,1)) (NbVisited (9,10,2,0)) (NbEmpty (8,3,3,0))),(Mul PointLeft (NbFood (9,9,1,2)),Mul (NbFood (10,8,2,3)) (Add (NbFood (3,10,0,1)) (Const 1))),(Const 0,NbFood (10,1,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) PointLeft),PointLeft),(If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1)),If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))),(Mul (Mul (Const 4) (NbFood (9,9,1,2))) (Add (Mul (Add Point (If (IsFood (3,9,3,3)) PointLeft Point)) (NbFood (3,9,0,0))) (Const 1)),Mul (NbVisited (4,4,2,1)) (NbFood (3,10,0,1))),(Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add PointLeft (Const 2))) (Mul (Add (Const 5) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0)))),Const 0),(NbFood (10,8,2,3),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Sub (Mul (NbEmpty (0,4,2,2)) PointLeft) (Sub (NbEmpty (10,6,0,0)) (Const 4))) (NbEmpty (3,0,3,1)))),(Add (Const 2) (Sub (NbFood (10,1,0,1)) (Sub (Const 4) (NbFood (3,10,0,1)))),Const 0),(Add (NbFood (3,10,0,1)) (Const 1),Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbFood (10,8,2,3))),(Const 0,NbFood (10,1,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),NbFood (10,8,2,3)),(Const 0,NbFood (10,1,0,1)),(Mul (Mul PointLeft (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)))) (Add (NbEmpty (5,6,0,2)) (NbVisited (2,4,2,0))),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbEmpty (3,0,3,1)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1))),(NbFood (8,5,3,0),Const 1),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (10,8,2,3)),NbFood (8,0,2,1)),(Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3),NbFood (10,1,0,1)),(NbFood (10,8,2,3),NbFood (10,1,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Add (NbFood (3,10,0,1)) (Const 1)) (Const 1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbFood (3,10,0,1))),(Const 0,Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (10,2,0,2))) (NbEmpty (3,0,3,1))),Const 0),(Mul (Const 5) (Add (NbFood (6,6,2,0)) (Const 1)),Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add PointLeft (Const 2))) (Mul (Add (NbFood (3,10,0,1)) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0))))),(Mul (Mul (Const 5) (NbFood (9,9,1,2))) (Add (NbEmpty (8,3,3,0)) (Const 1)),If (IsFood (0,3,2,2)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbFood (3,10,0,1))) (NbFood (8,0,2,1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsEnemy (2,5,1,1)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Const 3),(Mul (NbFood (4,6,2,3)) (Add (NbFood (3,10,0,1)) (Const 1)),Point),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (9,8,0,2)),(NbEmpty (3,2,0,0),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add (Sub PointLeft (NbEmpty (9,9,2,0))) PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(Mul (Mul PointLeft (NbFood (10,8,2,3))) (Add (NbFood (3,10,0,1)) (Const 1)),NbFood (9,9,1,2)),(NbFood (10,1,0,1),Const 0),(If (IsEnemy (3,6,2,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (Const 2) (NbVisited (0,7,3,3))) (Const 1)) (Sub (NbVisited (0,9,1,2)) (Sub (Add (NbEmpty (10,2,3,1)) (NbEmpty (7,0,3,3))) (Mul (Const 5) (Add (If (IsFood (4,6,2,2)) (NbVisited (5,4,2,3)) PointLeft) (Sub (Const 0) (NbEmpty (4,2,1,0))))))),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (NbEmpty (3,2,3,3)))),(Mul (NbEmpty (8,8,0,2)) (NbFood (3,10,0,1)),Const 2),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add PointLeft (Const 1))),(Const 3,NbFood (2,3,1,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (10,6,1,3)),PointLeft),(Mul (Const 4) (Add (NbFood (3,10,0,1)) (Const 1)),NbFood (10,1,0,1)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Add (NbFood (3,10,0,1)) (NbEmpty (7,10,1,2))) (NbEmpty (3,0,3,1))),Add (NbFood (0,0,2,0)) (If (And (Not (IsEnemy (2,3,3,3))) (IsFood (4,10,2,0))) (Const 5) (Mul (Const 3) PointLeft))),(Sub (NbVisited (6,3,0,0)) (Add (NbFood (5,0,0,1)) Point),Mul (Add PointLeft PointLeft) (Const 1)),(Mul (Mul (NbVisited (7,1,3,1)) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) PointLeft),Mul (Mul PointLeft (NbFood (9,9,1,2))) (If (And (IsEqual (NbEmpty (1,8,2,2)) PointLeft) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5))),(Point,Sub (NbEmpty (10,10,0,0)) (NbVisited (2,9,0,3))),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Const 4),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (10,8,2,3)) (Const 1)),NbFood (3,10,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) Point) (NbEmpty (3,0,3,1))),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4))) (Const 5))),(Add (If (IsEqual (NbEmpty (3,0,3,1)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),NbFood (3,10,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4))) (If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1)))),NbEmpty (3,0,3,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Const 3) (NbEmpty (0,1,1,2))),Add (NbEmpty (5,8,0,1)) (Const 2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (3,10,0,1))) (NbEmpty (3,0,3,1))),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add PointLeft (Const 1))),(Const 0,Mul (NbFood (3,10,0,1)) (Add (NbFood (6,6,2,0)) (Const 1))),(Const 1,Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (NbFood (10,8,2,3)))),(NbFood (9,8,0,2),NbFood (10,1,0,1)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) PointLeft,Mul (Add (Sub Point (NbEmpty (8,5,0,3))) (Mul (NbEmpty (4,0,3,3)) (Mul (NbVisited (7,1,1,2)) (Const 5)))) (Mul (Mul (Const 3) (If (IsSmaller (Mul PointLeft (Const 2)) (Add Point PointLeft)) (If (And (IsFood (10,1,1,3)) (IsEnemy (2,6,3,3))) PointLeft (Sub (NbVisited (1,5,1,1)) PointLeft)) (NbVisited (5,2,0,1)))) (NbEmpty (3,0,3,1)))),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) PointLeft,If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) PointLeft) (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1)))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (3,10,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1))),Mul (NbFood (3,10,0,1)) (Add Point (Const 1))),(Add (If (IsEqual (If (And (Not (IsEnemy (7,2,3,0))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (10,6,1,2)) (Const 1)),Const 3),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Mul PointLeft (NbFood (9,9,1,2))),Mul (Add PointLeft (Const 1)) (Add Point (Const 1))),(NbVisited (3,7,3,3),Const 2),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (Const 3)),(If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1)),If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))),(Mul (Sub (Add (NbFood (5,5,2,0)) PointLeft) (NbVisited (2,10,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),NbVisited (2,8,1,1)),(Add (NbFood (8,6,0,1)) (Add (Const 3) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)))),PointLeft),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Sub (Mul (NbEmpty (10,3,2,3)) (Sub (Const 4) (NbFood (0,2,0,0)))) (Add (Sub (Sub (NbVisited (8,4,3,0)) (NbFood (9,5,3,3))) (If (And (And (IsFood (9,4,0,1)) (IsEnemy (2,10,1,3))) (IsFood (0,9,2,0))) PointLeft (If (IsEnemy (4,4,0,3)) (If (IsEnemy (9,6,0,3)) (NbFood (8,5,1,1)) Point) (Sub (NbVisited (2,10,2,2)) Point)))) (Const 4))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbVisited (4,7,0,2)) (Const 1)),NbEmpty (7,0,1,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(Mul (Mul (Const (-2)) (NbFood (9,9,1,2))) (Add (NbFood (9,9,1,2)) (Const 4)),PointLeft),(Mul (Mul PointLeft (NbFood (3,10,0,1))) (Add (NbFood (3,10,0,1)) (Const 1)),If (IsEnemy (3,6,2,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (Const 2) (NbVisited (0,7,3,3))) (NbEmpty (3,2,3,3))) (Sub (NbVisited (0,9,1,2)) (Sub (Add Point (NbEmpty (7,0,3,3))) (Mul (NbEmpty (5,2,2,2)) (Add PointLeft (Const 2)))))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) PointLeft,Mul (Mul (Add (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4))) (If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1)))) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))),(Const 0,NbEmpty (3,0,3,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Mul PointLeft (NbFood (9,9,1,2))),(Const 0,Add Point (Const 1)),(Mul (Mul Point (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (2,9,3,1)) (NbEmpty (3,0,3,1)))),(Sub Point (NbFood (3,10,0,1)),Const 2),(Mul (Mul PointLeft (Add (NbFood (3,10,0,1)) (Const 1))) (Add (NbFood (3,10,0,1)) (Const 1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbFood (9,9,1,2))),(NbFood (2,7,3,3),NbFood (9,10,2,1)),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (3,4,1,1))) (NbFood (8,0,2,1)),If (IsEnemy (2,6,3,1)) (NbVisited (9,10,2,0)) (NbEmpty (8,3,3,0))),(Mul (Mul (Mul Point (Const 4)) Point) (Add Point (Const 1)),PointLeft),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (9,8,0,2)),(NbEmpty (3,0,3,1),Mul (Mul PointLeft (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)))) (Add (NbEmpty (5,6,0,2)) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))))),(NbVisited (9,6,2,0),NbVisited (1,1,3,3)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Add (NbFood (3,10,0,1)) (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))),Sub (Const 1) (Mul (Add (NbEmpty (3,0,3,1)) (Add PointLeft (Const 2))) (Mul (Add (Const 5) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0))))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)),Add (If (IsEqual (Add (NbFood (3,10,0,1)) (Const 1)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (NbEmpty (7,8,1,3))),If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) (Add Point PointLeft)) (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (NbVisited (1,10,1,3)) (Sub PointLeft (NbFood (9,7,2,0))))) Point) Point),(NbEmpty (1,5,0,1),Sub (NbEmpty (8,7,2,0)) (Mul (NbFood (0,10,1,2)) Point)),(Mul (Sub (NbFood (10,2,0,2)) PointLeft) (Mul (Add Point (If (IsFood (3,9,3,3)) PointLeft Point)) (NbFood (3,9,0,0))),Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add PointLeft (Const 2))) (Mul (Add (Const 5) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0))))),(Mul (Mul PointLeft (NbFood (3,8,2,3))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1))),Mul (NbFood (3,10,0,1)) (If (Not (IsFood (5,4,0,3))) (If (IsFood (5,0,3,1)) (NbFood (6,4,0,1)) (Const 4)) (Mul (NbEmpty (1,8,1,0)) (Const 5)))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (10,1,0,1)) (Const 1)),NbFood (3,10,0,1)),(If (IsFood (8,7,1,1)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsEnemy (3,0,1,0))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add PointLeft (Const 2))) (Mul (Add (Const 5) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0))))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbVisited (2,4,2,0)) (Const 1)),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) Point (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1))),(Const 3,Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3)) (NbFood (9,8,0,2))),(Add (Const 3) (NbEmpty (3,6,0,3)),Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add (NbVisited (3,7,0,1)) (Const 2))) (Mul (Add (Const 5) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0))))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul (NbFood (10,8,2,3)) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),PointLeft),(NbFood (10,1,0,1),Const 0),(NbFood (0,5,2,3),If (IsEnemy (3,0,1,0)) (Mul PointLeft (NbFood (9,9,1,2))) (NbFood (8,0,2,1))),(Mul (NbFood (10,8,2,3)) (Add (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) Point),NbFood (8,1,3,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Point),(Add (NbFood (8,6,0,1)) (Add (Const 3) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)))),PointLeft),(Mul (Mul (If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) PointLeft) (NbFood (8,0,2,1))) (NbFood (9,9,1,2))) (Add Point (Const 1)),PointLeft),(NbFood (9,8,2,0),NbFood (9,8,0,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbVisited (10,5,3,3)),If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) PointLeft) (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbFood (5,6,1,0)) (NbEmpty (3,5,2,1)))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbVisited (7,5,2,3))),If (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2))) (NbFood (10,5,2,2)) (NbEmpty (3,0,3,1))),(If (IsEnemy (3,6,2,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (Const 2) (NbVisited (0,7,3,3))) (NbEmpty (3,2,3,3))) (Sub (NbVisited (0,9,1,2)) (Sub (Add (NbEmpty (10,2,3,1)) (NbEmpty (7,0,3,3))) (Mul (NbEmpty (5,2,2,2)) (Add (Sub (NbEmpty (10,6,0,0)) (Const 4)) (Sub (Const 0) (NbEmpty (4,2,1,0))))))),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (If (IsFood (4,6,2,2)) Point PointLeft)) PointLeft)),(Mul (NbFood (5,0,2,3)) (Sub (NbFood (1,7,1,2)) PointLeft),Add (Const 2) (Sub (Const 0) (NbEmpty (8,8,0,2)))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) PointLeft),PointLeft),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(NbEmpty (0,9,3,3),NbFood (10,8,2,3)),(NbVisited (8,9,0,3),Add (NbFood (10,1,0,1)) (NbEmpty (3,6,0,3))),(NbFood (7,1,3,1),NbFood (10,1,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1))))),NbEmpty (3,0,3,1)),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (Add (NbFood (9,0,0,1)) (NbVisited (9,4,3,1)))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),NbVisited (7,1,3,1)),(If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1)),If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),PointLeft),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Const 4),(Mul (Mul (Add (Mul PointLeft PointLeft) (NbEmpty (3,0,3,1))) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) PointLeft),(NbFood (6,6,2,0),Mul (NbFood (3,10,0,1)) (Const 1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (9,9,1,2)) (Const 1))),Add (NbFood (3,10,0,1)) (Const 1)),(NbFood (3,10,0,1),Mul (Mul PointLeft (NbFood (3,10,0,1))) (Const 1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Const 2),PointLeft),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,6,3,3)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (NbVisited (4,5,1,3))) (NbFood (9,10,2,1)),NbFood (0,7,0,0)),(Mul (Mul PointLeft (NbFood (8,0,2,1))) (NbVisited (1,5,1,1)),Mul (Add (Sub Point (NbEmpty (8,5,0,3))) (Mul (NbEmpty (4,0,3,3)) (Mul (NbVisited (7,1,1,2)) (Const 5)))) (Mul (Mul (Const 3) (If (IsSmaller (Mul PointLeft (Const 2)) (Add Point (NbEmpty (5,3,0,2)))) (If (And (IsFood (10,1,1,3)) (IsEnemy (2,6,3,3))) PointLeft (Sub (Add (NbFood (3,10,0,1)) (Const 1)) (NbFood (8,10,3,1)))) (NbVisited (5,2,0,1)))) (NbEmpty (7,8,1,3)))),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (9,9,1,2)),Sub (NbEmpty (8,7,2,0)) (Mul (NbEmpty (0,5,3,0)) (NbEmpty (10,2,2,2)))),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Const 4),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add PointLeft (Const 1)),NbFood (7,2,3,3)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (9,8,0,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point)),(Mul (Mul PointLeft (Mul (Mul PointLeft (NbFood (9,9,1,2))) Point)) (Add (NbEmpty (5,6,0,2)) (NbEmpty (3,0,3,1))),PointLeft),(NbFood (10,8,2,3),NbFood (10,1,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Mul PointLeft (Add Point (Const 1))),(NbFood (8,8,2,0),If (IsFood (9,6,0,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (IsFood (9,6,0,3))) (Const 2) (NbVisited (0,7,3,3))) (NbEmpty (3,2,3,3))) (Sub (NbVisited (0,9,1,2)) (Sub (Add Point (NbEmpty (7,0,3,3))) (Mul (NbEmpty (5,2,2,2)) (Add PointLeft (Const 2)))))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbEmpty (0,9,3,3))) (NbEmpty (3,0,3,1))),PointLeft),(Mul (NbFood (3,10,0,1)) (NbEmpty (3,6,0,3)),Add (NbVisited (8,9,0,3)) (Add (NbFood (6,6,2,0)) (Const 1))),(If (IsFood (3,1,3,1)) (If (IsFood (3,1,3,1)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) PointLeft),(Sub (Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (7,4,2,1)) (NbFood (3,9,1,2)) (Sub PointLeft (NbFood (9,7,2,0))))))) (Const 3)) (Const 3),If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) PointLeft) (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (NbVisited (1,0,1,2)))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1)))),(NbFood (9,9,1,2),Mul (Mul PointLeft (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)))) (Add (NbFood (3,10,0,1)) (Const 1))),(Const 2,Point),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Const 3),If (IsEnemy (3,6,2,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (NbFood (3,10,0,1)) (NbVisited (0,7,3,3))) (NbEmpty (3,2,3,3))) (Sub (NbVisited (0,9,1,2)) (Sub (Add (NbEmpty (10,2,3,1)) (NbEmpty (7,0,3,3))) (Mul (NbEmpty (5,2,2,2)) (Add (If (IsFood (4,6,2,2)) Point PointLeft) (Sub (Const 0) (NbEmpty (5,5,1,3)))))))),(NbEmpty (5,7,1,1),Const 0),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Add (Const 2) (Sub (Const 0) (Sub (Const 2) (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4))))))) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),NbFood (10,2,2,2)),(Mul (Mul PointLeft (NbFood (8,0,2,1))) (Add (NbFood (3,10,0,1)) (Const 1)),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (9,9,1,2))),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1)),NbFood (8,5,3,0)),(NbEmpty (2,8,3,1),If (IsEqual (NbFood (2,9,1,3)) (If (And (Not (IsFood (7,10,1,2))) (IsSmaller Point (NbVisited (2,1,2,0)))) Point (NbFood (9,10,3,0)))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (NbVisited (1,10,1,3)) (Sub PointLeft (NbFood (9,7,2,0))))) Point) Point),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),If (IsEnemy (3,6,2,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (Const 2) (NbVisited (0,7,3,3))) (NbEmpty (3,2,3,3))) (Sub (NbVisited (0,9,1,2)) (Sub (Add (NbEmpty (10,2,3,1)) (NbEmpty (7,0,3,3))) (Mul (NbEmpty (5,2,2,2)) (Add (If (IsFood (4,6,2,2)) Point PointLeft) (Sub (Const 0) (NbEmpty (4,2,1,0)))))))),(Const 3,Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (Const 2) (NbVisited (0,7,3,3))),If (IsEnemy (3,6,2,3)) (Sub (Add (NbVisited (4,7,0,2)) (Const 1)) (NbEmpty (3,2,3,3))) (Sub (NbVisited (0,9,1,2)) (Sub (Add (NbEmpty (10,2,3,1)) (NbEmpty (7,0,3,3))) (Mul (NbEmpty (5,2,2,2)) (Add (If (IsFood (4,6,2,2)) Point PointLeft) (Sub (Const 0) (NbEmpty (4,2,1,0)))))))),(NbFood (9,10,2,1),Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbEmpty (7,0,1,0))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Const 3) (NbEmpty (0,1,1,2))),Add (NbEmpty (5,8,0,1)) (Const 2)),(Mul (Sub (NbFood (10,2,0,2)) PointLeft) (Mul (Add Point (If (IsFood (3,9,3,3)) PointLeft Point)) (NbFood (3,9,0,0))),Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add PointLeft (Const 2))) (Mul (Add (Const 5) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0))))),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) Point (Const 5)) (NbFood (9,10,2,1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4))) (If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1))))),(NbEmpty (3,0,3,1),Point),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,6,3,3)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))),(Const 0,NbVisited (1,1,1,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Const 3))) (Add (NbEmpty (5,6,0,2)) (NbEmpty (3,0,3,1))),Add (NbFood (3,10,0,1)) (Sub (Const 0) (Sub (Const 3) (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4)))))),(NbEmpty (3,4,1,1),If (IsEnemy (2,6,3,1)) (NbVisited (9,10,2,0)) (Const 1)),(Mul (Mul (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),PointLeft),(Const 0,Const 0),(NbFood (10,8,2,3),NbFood (10,1,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (9,8,0,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (Const 1)),Mul (NbFood (3,10,0,1)) (Add (NbFood (3,10,0,1)) (Const 1))),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Const 0)) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),NbVisited (8,6,2,3)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (9,8,0,2)),(If (IsEnemy (3,6,2,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (Const 2) (NbVisited (0,7,3,3))) (NbEmpty (3,2,3,3))) (Sub (NbVisited (0,9,1,2)) (Sub (Add (NbEmpty (10,2,3,1)) (NbEmpty (7,0,3,3))) (Mul (NbEmpty (5,2,2,2)) (Add (If (IsFood (4,6,2,2)) Point PointLeft) (Sub (Const 0) (NbEmpty (4,2,1,0))))))),Const 3),(Add (Const 3) (NbEmpty (3,6,0,3)),Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add (NbVisited (3,7,0,1)) (Const 2))) (Mul (Add (Const 5) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0))))),(Mul PointLeft (NbFood (9,9,1,2)),Mul (NbVisited (9,6,3,0)) (Add (NbFood (3,10,0,1)) (Const 1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add Point (Const 1)),NbFood (3,10,0,1)),(Mul (Sub (NbFood (10,2,0,2)) PointLeft) (Mul (Add Point (If (IsFood (3,9,3,3)) PointLeft Point)) (NbFood (3,9,0,0))),Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add PointLeft (Const 2))) (Mul (Add (Const 5) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0))))),(If (Or (IsSmaller (NbEmpty (10,6,2,3)) (If (IsSmaller (If (IsEnemy (1,5,1,3)) (NbVisited (8,7,1,1)) PointLeft) (Add (NbVisited (2,2,3,0)) PointLeft)) (Add Point (NbVisited (4,2,2,3))) (Sub (Mul (Const 2) PointLeft) PointLeft))) (Not (IsEqual (Const 0) Point))) (Add (NbEmpty (2,10,3,0)) (If (Or (IsEqual PointLeft (NbFood (5,5,0,1))) (Not (And (IsEnemy (2,6,2,2)) (IsEnemy (9,1,0,0))))) (NbEmpty (0,9,3,3)) (NbFood (9,1,1,0)))) (NbVisited (6,7,1,0)),Const 2),(Mul (Add (Const 2) (NbEmpty (4,1,2,2))) (Add (Sub PointLeft Point) (NbEmpty (3,0,3,1))),Const 3),(Mul (Sub (NbFood (10,2,0,2)) PointLeft) (Mul (Add Point (If (IsFood (3,9,3,3)) PointLeft Point)) (NbFood (3,9,0,0))),Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Add PointLeft (Const 2))) (Mul (Add (Const 5) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0))))),(Add (NbFood (8,0,2,1)) (Add (Const 3) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)))),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,6,0,1))),(Sub (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (If (IsEnemy (9,2,2,3)) (NbFood (3,9,1,2)) (NbVisited (1,0,1,2)))))) (Const 3),Sub PointLeft (Const 3)),(Mul (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1))),Mul PointLeft (NbFood (9,9,1,2))),(Const 0,NbFood (3,10,0,1)),(Add (If (IsEqual (If (And (IsEqual PointLeft (NbVisited (7,1,3,1))) (And (IsFood (10,6,3,3)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Mul (Mul (NbEmpty (1,8,2,2)) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))),(Point,Point),(If (IsEnemy (3,6,2,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbFood (3,2,1,0)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (Add (NbFood (8,6,0,1)) (Add (Const 3) PointLeft)) (NbVisited (0,7,3,3))) (NbEmpty (3,2,3,3))) (Sub (NbVisited (0,9,1,2)) (Sub (Add (NbEmpty (10,2,3,1)) (NbEmpty (7,0,3,3))) (Mul (NbEmpty (5,2,2,2)) (Add (If (IsFood (4,6,2,2)) Point PointLeft) (Sub (Const 0) (NbEmpty (4,2,1,0))))))),Const 2),(If (IsFood (7,3,1,1)) Point (Const 2),Add Point (If (IsEqual (NbFood (9,1,1,2)) (Const 0)) (NbFood (6,3,2,1)) (If (IsFood (0,7,0,1)) (If (Not (IsSmaller (NbFood (7,5,3,0)) (NbFood (9,9,1,0)))) (Const 1) Point) (Sub (Add (Mul (Const 2) PointLeft) (Const 3)) (Add (If (IsEnemy (0,7,3,3)) Point (NbEmpty (10,3,2,3))) Point))))),(If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1))),NbFood (8,0,2,1)),(Sub (Sub (NbEmpty (8,3,3,0)) (NbFood (4,5,2,0))) (Const 3),If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (Sub (Const 4) (Add (NbVisited (2,3,3,3)) (Sub PointLeft (Add (NbVisited (4,6,3,2)) (NbFood (7,8,2,3))))))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Mul PointLeft (NbFood (9,9,1,2))),(NbFood (10,8,2,3),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Const 2),Mul (Mul PointLeft (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)))) (Add (NbEmpty (5,6,0,2)) (NbEmpty (3,0,3,1)))),(Const 1,Point),(NbFood (3,10,0,1),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1))) (Const 1))),(Const 0,NbFood (8,5,3,0)),(Const 1,Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))))),(Const 0,Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) Point (Const 5)) (NbFood (9,10,2,1)),Point),(NbFood (9,9,1,2),Mul (Mul PointLeft (If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1)))) (Add (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4))) PointLeft)),(Point,Add Point (Sub (Const 0) (NbFood (8,5,3,0)))),(NbFood (10,8,2,3),NbFood (10,1,0,1)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbFood (8,0,2,1)),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbFood (10,8,2,3)) (NbEmpty (8,3,3,0))) (Add Point (Const 1))),(NbVisited (2,4,2,0),NbFood (9,8,0,2)),(Add PointLeft (Sub (If (IsSmaller (NbFood (8,9,3,3)) Point) (Const 4) (If (And (IsSmaller PointLeft PointLeft) (Or (IsFood (4,0,1,1)) (IsFood (2,0,3,3)))) (Add (Const 4) (NbVisited (7,10,0,0))) (Const 4))) Point),PointLeft),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Point),(Mul (Const 5) (Add (NbFood (10,8,2,3)) (Const 1)),NbVisited (7,2,1,1)),(Mul (If (IsEqual (NbEmpty (8,3,3,3)) (NbEmpty (9,3,1,1))) Point PointLeft) (Add Point (Const 1)),NbEmpty (2,5,0,2)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (9,3,1,2)) (Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add PointLeft (Const 1)))),Const 1),(NbVisited (4,2,2,3),Point),(Mul (Mul (NbVisited (1,7,1,0)) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),NbFood (2,7,1,0)),(Mul (Mul (NbEmpty (9,1,3,2)) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),NbVisited (6,1,1,2)),(Point,Point),(Mul (Mul (NbFood (8,5,3,1)) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (NbEmpty (3,0,3,1))),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) PointLeft),(Mul (NbFood (3,10,0,1)) (Add (NbFood (3,10,0,1)) (Const 1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (Const 1))),(Const 0,Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),If (IsEnemy (3,0,1,0)) (If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0))) (NbFood (8,0,2,1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (10,8,2,3)) (NbEmpty (0,1,1,2))),Const 3),(NbFood (10,1,0,1),Add (NbEmpty (5,8,0,1)) (Const 2)),(Mul (Mul PointLeft (Add (Sub (Mul (NbEmpty (0,4,2,2)) (NbEmpty (0,10,2,2))) (Sub (NbEmpty (10,6,0,0)) (Const 4))) (If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1))))) (Add (NbFood (10,8,2,3)) (Const 1)),Mul (Mul PointLeft (NbFood (9,9,1,2))) (NbFood (9,9,1,2))),(NbEmpty (10,8,2,1),NbEmpty (7,6,2,0)),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) PointLeft),NbVisited (8,8,0,0)),(Sub (NbEmpty (8,7,2,0)) (Add PointLeft (NbFood (10,10,0,0))),Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (Mul (NbFood (0,10,1,2)) (NbEmpty (10,2,2,2)))) (Mul (Add (Const 5) (NbVisited (1,10,0,0))) (NbEmpty (10,1,0,0))))),(Mul (Mul PointLeft (NbEmpty (9,1,3,2))) (Add (NbFood (10,8,2,3)) (Const 1)),Mul (Mul (NbFood (9,9,1,2)) (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1))),(NbVisited (6,1,1,2),NbFood (3,10,0,1)),(If (IsEnemy (3,6,2,3)) (Sub (If (Or (IsEnemy (9,4,1,0)) (And (IsSmaller (NbEmpty (3,6,0,3)) (NbVisited (0,7,2,2))) (IsEnemy (3,5,3,2)))) (Const 2) (NbVisited (0,7,3,3))) (NbEmpty (3,2,3,3))) (Sub (NbVisited (0,9,1,2)) (Sub (Add (NbEmpty (10,2,3,1)) (NbEmpty (7,0,3,3))) PointLeft)),If (IsEnemy (8,3,2,0)) (NbEmpty (2,5,3,2)) (Sub (NbFood (4,9,0,1)) (Const 1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Const 0),(Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbFood (8,7,0,0)) (Const 5))) (Const 1) (Const 5)) (NbFood (9,10,2,1)),NbFood (10,8,2,3)),(NbFood (10,1,0,1),Point),(NbFood (8,1,1,3),Mul (Sub (NbFood (10,2,0,2)) PointLeft) (Mul (Add Point (If (IsEnemy (8,7,0,1)) PointLeft (NbFood (10,8,2,3)))) (NbFood (3,9,0,0)))),(Add PointLeft (Const 2),Sub (Const 1) (Mul (Add (Sub (If (Or (IsFood (9,2,3,3)) (IsFood (8,7,1,1))) (Add (NbEmpty (3,3,2,0)) (NbEmpty (5,7,3,3))) (NbVisited (7,7,1,2))) (NbVisited (1,2,3,0))) (NbFood (10,1,0,1))) (Mul (Add (Const 5) (NbEmpty (4,1,0,3))) (NbEmpty (10,1,0,0))))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (Mul PointLeft (NbFood (9,9,1,2))) (NbEmpty (3,0,3,1))),Mul (NbFood (3,10,0,1)) (Add Point (Const 1))),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),Add (If (IsEqual (If (And (IsEqual (NbEmpty (1,8,2,2)) (NbVisited (7,1,3,1))) (And (IsFood (10,4,2,0)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1))),(Add (If (IsEqual (If (And (IsSmaller (Add Point (NbEmpty (3,1,2,3))) (NbFood (1,2,3,2))) (And (IsEnemy (2,5,1,1)) (IsFood (2,1,3,0)))) (NbFood (4,6,0,2)) (Const 5)) (Mul (NbVisited (8,6,2,3)) (Const 5))) (NbFood (6,10,0,2)) (Const 5)) (NbFood (9,10,2,1)),Const 1),(Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (Const 1)),If (And (IsSmaller Point (If (IsSmaller (Add (NbFood (9,6,0,2)) PointLeft) (Add (NbFood (6,2,1,0)) (NbFood (1,8,3,3)))) (Sub (NbVisited (6,10,3,2)) (Add Point PointLeft)) (NbFood (3,4,1,3)))) (IsEnemy (8,10,3,1))) (Mul (If (Not (And (And (IsEnemy (6,2,3,0)) (IsFood (6,2,2,2))) (Not (IsEnemy (9,4,1,1))))) (NbVisited (0,7,0,1)) (Add (Add (NbVisited (1,10,1,3)) PointLeft) (Sub PointLeft (NbFood (9,7,2,0))))) Point) (Mul (NbEmpty (0,1,1,1)) (NbEmpty (3,5,2,1)))),(PointLeft,Mul (Mul PointLeft (NbFood (9,9,1,2))) (Add (NbFood (3,10,0,1)) (If (IsEnemy (3,0,1,0)) (NbFood (0,5,2,3)) (NbFood (8,0,2,1))))),(If (IsEnemy (7,2,3,0)) (NbVisited (2,4,2,0)) (NbEmpty (8,3,3,0)),Sub (Sub (NbVisited (6,3,0,0)) (Mul (Add PointLeft PointLeft) (Const 1))) (Add (NbFood (5,0,0,1)) Point))]